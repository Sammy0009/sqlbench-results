Projection: SUM(lineitem.l_extendedprice * Int64(1) - lineitem.l_discount) AS revenue
  Aggregate: groupBy=[[]], aggr=[[SUM(lineitem.l_extendedprice * (Int64(1) - lineitem.l_discount))]]
    Filter: part.p_partkey = lineitem.l_partkey AND part.p_brand = Utf8("Brand#41") AND part.p_container IN ([Utf8("SM CASE"), Utf8("SM BOX"), Utf8("SM PACK"), Utf8("SM PKG")]) AND lineitem.l_quantity >= Int64(8) AND lineitem.l_quantity <= Int64(8) + Int64(10) AND part.p_size BETWEEN Int64(1) AND Int64(5) AND lineitem.l_shipmode IN ([Utf8("AIR"), Utf8("AIR REG")]) AND lineitem.l_shipinstruct = Utf8("DELIVER IN PERSON") OR part.p_partkey = lineitem.l_partkey AND part.p_brand = Utf8("Brand#44") AND part.p_container IN ([Utf8("MED BAG"), Utf8("MED BOX"), Utf8("MED PKG"), Utf8("MED PACK")]) AND lineitem.l_quantity >= Int64(12) AND lineitem.l_quantity <= Int64(12) + Int64(10) AND part.p_size BETWEEN Int64(1) AND Int64(10) AND lineitem.l_shipmode IN ([Utf8("AIR"), Utf8("AIR REG")]) AND lineitem.l_shipinstruct = Utf8("DELIVER IN PERSON") OR part.p_partkey = lineitem.l_partkey AND part.p_brand = Utf8("Brand#34") AND part.p_container IN ([Utf8("LG CASE"), Utf8("LG BOX"), Utf8("LG PACK"), Utf8("LG PKG")]) AND lineitem.l_quantity >= Int64(25) AND lineitem.l_quantity <= Int64(25) + Int64(10) AND part.p_size BETWEEN Int64(1) AND Int64(15) AND lineitem.l_shipmode IN ([Utf8("AIR"), Utf8("AIR REG")]) AND lineitem.l_shipinstruct = Utf8("DELIVER IN PERSON")
      CrossJoin:
        TableScan: lineitem
        TableScan: part