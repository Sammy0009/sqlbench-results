AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   LocalTableScan <empty>, [s_name#109, s_address#110]
+- == Initial Plan ==
   Sort [s_name#109 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(s_name#109 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#6632]
      +- Project [s_name#109, s_address#110]
         +- BroadcastHashJoin [s_nationkey#111L], [n_nationkey#48L], Inner, BuildRight, false
            :- Project [s_name#109, s_address#110, s_nationkey#111L]
            :  +- SortMergeJoin [s_suppkey#108L], [ps_suppkey#93L], LeftSemi
            :     :- Sort [s_suppkey#108L ASC NULLS FIRST], false, 0
            :     :  +- Exchange hashpartitioning(s_suppkey#108L, 200), ENSURE_REQUIREMENTS, [id=#6621]
            :     :     +- Filter isnotnull(s_nationkey#111L)
            :     :        +- FileScan parquet [s_suppkey#108L,s_name#109,s_address#110,s_nationkey#111L] Batched: true, DataFilters: [isnotnull(s_nationkey#111L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/supplier.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_nationkey)], ReadSchema: struct<s_suppkey:bigint,s_name:string,s_address:string,s_nationkey:bigint>
            :     +- Sort [ps_suppkey#93L ASC NULLS FIRST], false, 0
            :        +- Exchange hashpartitioning(ps_suppkey#93L, 200), ENSURE_REQUIREMENTS, [id=#6622]
            :           +- Project [ps_suppkey#93L]
            :              +- SortMergeJoin [ps_partkey#92L, ps_suppkey#93L], [l_partkey#17L, l_suppkey#18L], Inner, (cast(cast(ps_availqty#94 as decimal(10,0)) as decimal(23,3)) > (0.5 * sum(l_quantity))#759)
            :                 :- Sort [ps_partkey#92L ASC NULLS FIRST, ps_suppkey#93L ASC NULLS FIRST], false, 0
            :                 :  +- Exchange hashpartitioning(ps_partkey#92L, ps_suppkey#93L, 200), ENSURE_REQUIREMENTS, [id=#6614]
            :                 :     +- BroadcastHashJoin [ps_partkey#92L], [p_partkey#74L], LeftSemi, BuildRight, false
            :                 :        :- Filter ((isnotnull(ps_availqty#94) AND isnotnull(ps_partkey#92L)) AND isnotnull(ps_suppkey#93L))
            :                 :        :  +- FileScan parquet [ps_partkey#92L,ps_suppkey#93L,ps_availqty#94] Batched: true, DataFilters: [isnotnull(ps_availqty#94), isnotnull(ps_partkey#92L), isnotnull(ps_suppkey#93L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/partsupp.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ps_availqty), IsNotNull(ps_partkey), IsNotNull(ps_suppkey)], ReadSchema: struct<ps_partkey:bigint,ps_suppkey:bigint,ps_availqty:int>
            :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#6603]
            :                 :           +- Project [p_partkey#74L]
            :                 :              +- Filter (isnotnull(p_name#75) AND StartsWith(p_name#75, brown))
            :                 :                 +- FileScan parquet [p_partkey#74L,p_name#75] Batched: true, DataFilters: [isnotnull(p_name#75), StartsWith(p_name#75, brown)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/part.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_name), StringStartsWith(p_name,brown)], ReadSchema: struct<p_partkey:bigint,p_name:string>
            :                 +- Sort [l_partkey#17L ASC NULLS FIRST, l_suppkey#18L ASC NULLS FIRST], false, 0
            :                    +- Filter isnotnull((0.5 * sum(l_quantity))#759)
            :                       +- HashAggregate(keys=[l_partkey#17L, l_suppkey#18L], functions=[sum(l_quantity#20)], output=[(0.5 * sum(l_quantity))#759, l_partkey#17L, l_suppkey#18L])
            :                          +- Exchange hashpartitioning(l_partkey#17L, l_suppkey#18L, 200), ENSURE_REQUIREMENTS, [id=#6609]
            :                             +- HashAggregate(keys=[l_partkey#17L, l_suppkey#18L], functions=[partial_sum(l_quantity#20)], output=[l_partkey#17L, l_suppkey#18L, sum#764, isEmpty#765])
            :                                +- BroadcastHashJoin [l_partkey#17L], [p_partkey#74L], LeftSemi, BuildRight, false
            :                                   :- Project [l_partkey#17L, l_suppkey#18L, l_quantity#20]
            :                                   :  +- Filter ((((isnotnull(l_shipdate#26) AND (l_shipdate#26 >= 1996-01-01)) AND (l_shipdate#26 < 1997-01-01)) AND isnotnull(l_partkey#17L)) AND isnotnull(l_suppkey#18L))
            :                                   :     +- FileScan parquet [l_partkey#17L,l_suppkey#18L,l_quantity#20,l_shipdate#26] Batched: true, DataFilters: [isnotnull(l_shipdate#26), (l_shipdate#26 >= 1996-01-01), (l_shipdate#26 < 1997-01-01), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThanOrEqual(l_shipdate,1996-01-01), LessThan(l_shipdate,1997-01-01..., ReadSchema: struct<l_partkey:bigint,l_suppkey:bigint,l_quantity:decimal(11,2),l_shipdate:date>
            :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#6605]
            :                                      +- Project [p_partkey#74L]
            :                                         +- Filter (isnotnull(p_name#75) AND StartsWith(p_name#75, brown))
            :                                            +- FileScan parquet [p_partkey#74L,p_name#75] Batched: true, DataFilters: [isnotnull(p_name#75), StartsWith(p_name#75, brown)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/part.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_name), StringStartsWith(p_name,brown)], ReadSchema: struct<p_partkey:bigint,p_name:string>
            +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#6628]
               +- Project [n_nationkey#48L]
                  +- Filter ((isnotnull(n_name#49) AND (n_name#49 = ROMANIA)) AND isnotnull(n_nationkey#48L))
                     +- FileScan parquet [n_nationkey#48L,n_name#49] Batched: true, DataFilters: [isnotnull(n_name#49), (n_name#49 = ROMANIA), isnotnull(n_nationkey#48L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/nation.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(n_name), EqualTo(n_name,ROMANIA), IsNotNull(n_nationkey)], ReadSchema: struct<n_nationkey:bigint,n_name:string>
