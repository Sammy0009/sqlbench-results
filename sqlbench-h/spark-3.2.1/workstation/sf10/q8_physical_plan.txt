AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   LocalTableScan <empty>, [o_year#373, mkt_share#376]
+- == Initial Plan ==
   Sort [o_year#373 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(o_year#373 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#2156]
      +- HashAggregate(keys=[o_year#373], functions=[sum(CASE WHEN (nation#375 = RUSSIA) THEN volume#374 ELSE 0.0000 END), sum(volume#374)], output=[o_year#373, mkt_share#376])
         +- Exchange hashpartitioning(o_year#373, 200), ENSURE_REQUIREMENTS, [id=#2153]
            +- HashAggregate(keys=[o_year#373], functions=[partial_sum(CASE WHEN (nation#375 = RUSSIA) THEN volume#374 ELSE 0.0000 END), partial_sum(volume#374)], output=[o_year#373, sum#389, isEmpty#390, sum#391, isEmpty#392])
               +- Project [year(o_orderdate#60) AS o_year#373, CheckOverflow((promote_precision(cast(l_extendedprice#21 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#22 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true) AS volume#374, n_name#378 AS nation#375]
                  +- BroadcastHashJoin [n_regionkey#50L], [r_regionkey#102L], Inner, BuildRight, false
                     :- Project [l_extendedprice#21, l_discount#22, o_orderdate#60, n_regionkey#50L, n_name#378]
                     :  +- BroadcastHashJoin [s_nationkey#111L], [n_nationkey#377L], Inner, BuildRight, false
                     :     :- Project [l_extendedprice#21, l_discount#22, s_nationkey#111L, o_orderdate#60, n_regionkey#50L]
                     :     :  +- BroadcastHashJoin [c_nationkey#3L], [n_nationkey#48L], Inner, BuildRight, false
                     :     :     :- Project [l_extendedprice#21, l_discount#22, s_nationkey#111L, o_orderdate#60, c_nationkey#3L]
                     :     :     :  +- SortMergeJoin [o_custkey#57L], [c_custkey#0L], Inner
                     :     :     :     :- Sort [o_custkey#57L ASC NULLS FIRST], false, 0
                     :     :     :     :  +- Exchange hashpartitioning(o_custkey#57L, 200), ENSURE_REQUIREMENTS, [id=#2133]
                     :     :     :     :     +- Project [l_extendedprice#21, l_discount#22, s_nationkey#111L, o_custkey#57L, o_orderdate#60]
                     :     :     :     :        +- SortMergeJoin [l_orderkey#16L], [o_orderkey#56L], Inner
                     :     :     :     :           :- Sort [l_orderkey#16L ASC NULLS FIRST], false, 0
                     :     :     :     :           :  +- Exchange hashpartitioning(l_orderkey#16L, 200), ENSURE_REQUIREMENTS, [id=#2125]
                     :     :     :     :           :     +- Project [l_orderkey#16L, l_extendedprice#21, l_discount#22, s_nationkey#111L]
                     :     :     :     :           :        +- BroadcastHashJoin [l_suppkey#18L], [s_suppkey#108L], Inner, BuildRight, false
                     :     :     :     :           :           :- Project [l_orderkey#16L, l_suppkey#18L, l_extendedprice#21, l_discount#22]
                     :     :     :     :           :           :  +- BroadcastHashJoin [p_partkey#74L], [l_partkey#17L], Inner, BuildLeft, false
                     :     :     :     :           :           :     :- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#2116]
                     :     :     :     :           :           :     :  +- Project [p_partkey#74L]
                     :     :     :     :           :           :     :     +- Filter ((isnotnull(p_type#78) AND (p_type#78 = SMALL PLATED TIN)) AND isnotnull(p_partkey#74L))
                     :     :     :     :           :           :     :        +- FileScan parquet [p_partkey#74L,p_type#78] Batched: true, DataFilters: [isnotnull(p_type#78), (p_type#78 = SMALL PLATED TIN), isnotnull(p_partkey#74L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/part.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_type), EqualTo(p_type,SMALL PLATED TIN), IsNotNull(p_partkey)], ReadSchema: struct<p_partkey:bigint,p_type:string>
                     :     :     :     :           :           :     +- Filter ((isnotnull(l_partkey#17L) AND isnotnull(l_suppkey#18L)) AND isnotnull(l_orderkey#16L))
                     :     :     :     :           :           :        +- FileScan parquet [l_orderkey#16L,l_partkey#17L,l_suppkey#18L,l_extendedprice#21,l_discount#22] Batched: true, DataFilters: [isnotnull(l_partkey#17L), isnotnull(l_suppkey#18L), isnotnull(l_orderkey#16L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_partkey), IsNotNull(l_suppkey), IsNotNull(l_orderkey)], ReadSchema: struct<l_orderkey:bigint,l_partkey:bigint,l_suppkey:bigint,l_extendedprice:decimal(11,2),l_discou...
                     :     :     :     :           :           +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#2120]
                     :     :     :     :           :              +- Filter (isnotnull(s_suppkey#108L) AND isnotnull(s_nationkey#111L))
                     :     :     :     :           :                 +- FileScan parquet [s_suppkey#108L,s_nationkey#111L] Batched: true, DataFilters: [isnotnull(s_suppkey#108L), isnotnull(s_nationkey#111L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/supplier.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_suppkey), IsNotNull(s_nationkey)], ReadSchema: struct<s_suppkey:bigint,s_nationkey:bigint>
                     :     :     :     :           +- Sort [o_orderkey#56L ASC NULLS FIRST], false, 0
                     :     :     :     :              +- Exchange hashpartitioning(o_orderkey#56L, 200), ENSURE_REQUIREMENTS, [id=#2126]
                     :     :     :     :                 +- Filter ((((isnotnull(o_orderdate#60) AND (o_orderdate#60 >= 1995-01-01)) AND (o_orderdate#60 <= 1996-12-31)) AND isnotnull(o_orderkey#56L)) AND isnotnull(o_custkey#57L))
                     :     :     :     :                    +- FileScan parquet [o_orderkey#56L,o_custkey#57L,o_orderdate#60] Batched: true, DataFilters: [isnotnull(o_orderdate#60), (o_orderdate#60 >= 1995-01-01), (o_orderdate#60 <= 1996-12-31), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/orders.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(o_orderdate), GreaterThanOrEqual(o_orderdate,1995-01-01), LessThanOrEqual(o_orderdate,..., ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_orderdate:date>
                     :     :     :     +- Sort [c_custkey#0L ASC NULLS FIRST], false, 0
                     :     :     :        +- Exchange hashpartitioning(c_custkey#0L, 200), ENSURE_REQUIREMENTS, [id=#2134]
                     :     :     :           +- Filter (isnotnull(c_custkey#0L) AND isnotnull(c_nationkey#3L))
                     :     :     :              +- FileScan parquet [c_custkey#0L,c_nationkey#3L] Batched: true, DataFilters: [isnotnull(c_custkey#0L), isnotnull(c_nationkey#3L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_custkey), IsNotNull(c_nationkey)], ReadSchema: struct<c_custkey:bigint,c_nationkey:bigint>
                     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#2140]
                     :     :        +- Filter (isnotnull(n_nationkey#48L) AND isnotnull(n_regionkey#50L))
                     :     :           +- FileScan parquet [n_nationkey#48L,n_regionkey#50L] Batched: true, DataFilters: [isnotnull(n_nationkey#48L), isnotnull(n_regionkey#50L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/nation.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(n_nationkey), IsNotNull(n_regionkey)], ReadSchema: struct<n_nationkey:bigint,n_regionkey:bigint>
                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#2144]
                     :        +- Filter isnotnull(n_nationkey#377L)
                     :           +- FileScan parquet [n_nationkey#377L,n_name#378] Batched: true, DataFilters: [isnotnull(n_nationkey#377L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/nation.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(n_nationkey)], ReadSchema: struct<n_nationkey:bigint,n_name:string>
                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#2148]
                        +- Project [r_regionkey#102L]
                           +- Filter ((isnotnull(r_name#103) AND (r_name#103 = EUROPE)) AND isnotnull(r_regionkey#102L))
                              +- FileScan parquet [r_regionkey#102L,r_name#103] Batched: true, DataFilters: [isnotnull(r_name#103), (r_name#103 = EUROPE), isnotnull(r_regionkey#102L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/region.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(r_name), EqualTo(r_name,EUROPE), IsNotNull(r_regionkey)], ReadSchema: struct<r_regionkey:bigint,r_name:string>
