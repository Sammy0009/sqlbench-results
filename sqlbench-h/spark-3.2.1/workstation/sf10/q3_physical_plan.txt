AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=10, orderBy=[revenue#289 DESC NULLS LAST,o_orderdate#60 ASC NULLS FIRST], output=[l_orderkey#16L,revenue#289,o_orderdate#60,o_shippriority#63])
   +- *(7) HashAggregate(keys=[l_orderkey#16L, o_orderdate#60, o_shippriority#63], functions=[sum(CheckOverflow((promote_precision(cast(l_extendedprice#21 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#22 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_orderkey#16L, revenue#289, o_orderdate#60, o_shippriority#63])
      +- *(7) HashAggregate(keys=[l_orderkey#16L, o_orderdate#60, o_shippriority#63], functions=[partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#21 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#22 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_orderkey#16L, o_orderdate#60, o_shippriority#63, sum#297, isEmpty#298])
         +- *(7) Project [o_orderdate#60, o_shippriority#63, l_orderkey#16L, l_extendedprice#21, l_discount#22]
            +- *(7) SortMergeJoin [o_orderkey#56L], [l_orderkey#16L], Inner
               :- *(5) Sort [o_orderkey#56L ASC NULLS FIRST], false, 0
               :  +- AQEShuffleRead coalesced
               :     +- ShuffleQueryStage 4
               :        +- Exchange hashpartitioning(o_orderkey#56L, 200), ENSURE_REQUIREMENTS, [id=#892]
               :           +- *(4) Project [o_orderkey#56L, o_orderdate#60, o_shippriority#63]
               :              +- *(4) BroadcastHashJoin [c_custkey#0L], [o_custkey#57L], Inner, BuildLeft, false
               :                 :- BroadcastQueryStage 3
               :                 :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#795]
               :                 :     +- AQEShuffleRead local
               :                 :        +- ShuffleQueryStage 0
               :                 :           +- Exchange hashpartitioning(c_custkey#0L, 200), ENSURE_REQUIREMENTS, [id=#683]
               :                 :              +- *(1) Project [c_custkey#0L]
               :                 :                 +- *(1) Filter ((isnotnull(c_mktsegment#6) AND (c_mktsegment#6 = HOUSEHOLD)) AND isnotnull(c_custkey#0L))
               :                 :                    +- *(1) ColumnarToRow
               :                 :                       +- FileScan parquet [c_custkey#0L,c_mktsegment#6] Batched: true, DataFilters: [isnotnull(c_mktsegment#6), (c_mktsegment#6 = HOUSEHOLD), isnotnull(c_custkey#0L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_mktsegment), EqualTo(c_mktsegment,HOUSEHOLD), IsNotNull(c_custkey)], ReadSchema: struct<c_custkey:bigint,c_mktsegment:string>
               :                 +- AQEShuffleRead local
               :                    +- ShuffleQueryStage 1
               :                       +- Exchange hashpartitioning(o_custkey#57L, 200), ENSURE_REQUIREMENTS, [id=#702]
               :                          +- *(2) Filter (((isnotnull(o_orderdate#60) AND (o_orderdate#60 < 1995-03-21)) AND isnotnull(o_custkey#57L)) AND isnotnull(o_orderkey#56L))
               :                             +- *(2) ColumnarToRow
               :                                +- FileScan parquet [o_orderkey#56L,o_custkey#57L,o_orderdate#60,o_shippriority#63] Batched: true, DataFilters: [isnotnull(o_orderdate#60), (o_orderdate#60 < 1995-03-21), isnotnull(o_custkey#57L), isnotnull(o_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/orders.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(o_orderdate), LessThan(o_orderdate,1995-03-21), IsNotNull(o_custkey), IsNotNull(o_orde..., ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_orderdate:date,o_shippriority:int>
               +- *(6) Sort [l_orderkey#16L ASC NULLS FIRST], false, 0
                  +- AQEShuffleRead coalesced
                     +- ShuffleQueryStage 2
                        +- Exchange hashpartitioning(l_orderkey#16L, 200), ENSURE_REQUIREMENTS, [id=#732]
                           +- *(3) Project [l_orderkey#16L, l_extendedprice#21, l_discount#22]
                              +- *(3) Filter ((isnotnull(l_shipdate#26) AND (l_shipdate#26 > 1995-03-21)) AND isnotnull(l_orderkey#16L))
                                 +- *(3) ColumnarToRow
                                    +- FileScan parquet [l_orderkey#16L,l_extendedprice#21,l_discount#22,l_shipdate#26] Batched: true, DataFilters: [isnotnull(l_shipdate#26), (l_shipdate#26 > 1995-03-21), isnotnull(l_orderkey#16L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThan(l_shipdate,1995-03-21), IsNotNull(l_orderkey)], ReadSchema: struct<l_orderkey:bigint,l_extendedprice:decimal(11,2),l_discount:decimal(11,2),l_shipdate:date>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=10, orderBy=[revenue#289 DESC NULLS LAST,o_orderdate#60 ASC NULLS FIRST], output=[l_orderkey#16L,revenue#289,o_orderdate#60,o_shippriority#63])
   +- HashAggregate(keys=[l_orderkey#16L, o_orderdate#60, o_shippriority#63], functions=[sum(CheckOverflow((promote_precision(cast(l_extendedprice#21 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#22 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_orderkey#16L, revenue#289, o_orderdate#60, o_shippriority#63])
      +- HashAggregate(keys=[l_orderkey#16L, o_orderdate#60, o_shippriority#63], functions=[partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#21 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#22 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_orderkey#16L, o_orderdate#60, o_shippriority#63, sum#297, isEmpty#298])
         +- Project [o_orderdate#60, o_shippriority#63, l_orderkey#16L, l_extendedprice#21, l_discount#22]
            +- SortMergeJoin [o_orderkey#56L], [l_orderkey#16L], Inner
               :- Sort [o_orderkey#56L ASC NULLS FIRST], false, 0
               :  +- Exchange hashpartitioning(o_orderkey#56L, 200), ENSURE_REQUIREMENTS, [id=#643]
               :     +- Project [o_orderkey#56L, o_orderdate#60, o_shippriority#63]
               :        +- SortMergeJoin [c_custkey#0L], [o_custkey#57L], Inner
               :           :- Sort [c_custkey#0L ASC NULLS FIRST], false, 0
               :           :  +- Exchange hashpartitioning(c_custkey#0L, 200), ENSURE_REQUIREMENTS, [id=#635]
               :           :     +- Project [c_custkey#0L]
               :           :        +- Filter ((isnotnull(c_mktsegment#6) AND (c_mktsegment#6 = HOUSEHOLD)) AND isnotnull(c_custkey#0L))
               :           :           +- FileScan parquet [c_custkey#0L,c_mktsegment#6] Batched: true, DataFilters: [isnotnull(c_mktsegment#6), (c_mktsegment#6 = HOUSEHOLD), isnotnull(c_custkey#0L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_mktsegment), EqualTo(c_mktsegment,HOUSEHOLD), IsNotNull(c_custkey)], ReadSchema: struct<c_custkey:bigint,c_mktsegment:string>
               :           +- Sort [o_custkey#57L ASC NULLS FIRST], false, 0
               :              +- Exchange hashpartitioning(o_custkey#57L, 200), ENSURE_REQUIREMENTS, [id=#636]
               :                 +- Filter (((isnotnull(o_orderdate#60) AND (o_orderdate#60 < 1995-03-21)) AND isnotnull(o_custkey#57L)) AND isnotnull(o_orderkey#56L))
               :                    +- FileScan parquet [o_orderkey#56L,o_custkey#57L,o_orderdate#60,o_shippriority#63] Batched: true, DataFilters: [isnotnull(o_orderdate#60), (o_orderdate#60 < 1995-03-21), isnotnull(o_custkey#57L), isnotnull(o_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/orders.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(o_orderdate), LessThan(o_orderdate,1995-03-21), IsNotNull(o_custkey), IsNotNull(o_orde..., ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_orderdate:date,o_shippriority:int>
               +- Sort [l_orderkey#16L ASC NULLS FIRST], false, 0
                  +- Exchange hashpartitioning(l_orderkey#16L, 200), ENSURE_REQUIREMENTS, [id=#644]
                     +- Project [l_orderkey#16L, l_extendedprice#21, l_discount#22]
                        +- Filter ((isnotnull(l_shipdate#26) AND (l_shipdate#26 > 1995-03-21)) AND isnotnull(l_orderkey#16L))
                           +- FileScan parquet [l_orderkey#16L,l_extendedprice#21,l_discount#22,l_shipdate#26] Batched: true, DataFilters: [isnotnull(l_shipdate#26), (l_shipdate#26 > 1995-03-21), isnotnull(l_orderkey#16L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf10-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThan(l_shipdate,1995-03-21), IsNotNull(l_orderkey)], ReadSchema: struct<l_orderkey:bigint,l_extendedprice:decimal(11,2),l_discount:decimal(11,2),l_shipdate:date>
