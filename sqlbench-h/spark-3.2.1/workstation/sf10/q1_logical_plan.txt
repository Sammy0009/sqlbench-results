Sort [l_returnflag#24 ASC NULLS FIRST, l_linestatus#25 ASC NULLS FIRST], true
+- Aggregate [l_returnflag#24, l_linestatus#25], [l_returnflag#24, l_linestatus#25, sum(l_quantity#20) AS sum_qty#122, sum(l_extendedprice#21) AS sum_base_price#123, sum(CheckOverflow((promote_precision(cast(l_extendedprice#21 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#22 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true)) AS sum_disc_price#124, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(l_extendedprice#21 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#22 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true)) * promote_precision(cast(CheckOverflow((1.00 + promote_precision(cast(l_tax#23 as decimal(12,2)))), DecimalType(12,2), true) as decimal(24,4)))), DecimalType(37,6), true)) AS sum_charge#125, cast((avg(UnscaledValue(l_quantity#20)) / 100.0) as decimal(15,6)) AS avg_qty#126, cast((avg(UnscaledValue(l_extendedprice#21)) / 100.0) as decimal(15,6)) AS avg_price#127, cast((avg(UnscaledValue(l_discount#22)) / 100.0) as decimal(15,6)) AS avg_disc#128, count(1) AS count_order#129L]
   +- Project [l_quantity#20, l_extendedprice#21, l_discount#22, l_tax#23, l_returnflag#24, l_linestatus#25]
      +- Filter (isnotnull(l_shipdate#26) AND (l_shipdate#26 <= 1998-08-10))
         +- Relation [l_orderkey#16L,l_partkey#17L,l_suppkey#18L,l_linenumber#19,l_quantity#20,l_extendedprice#21,l_discount#22,l_tax#23,l_returnflag#24,l_linestatus#25,l_shipdate#26,l_commitdate#27,l_receiptdate#28,l_shipinstruct#29,l_shipmode#30,l_comment#31] parquet
