AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   LocalTableScan <empty>, [nation#408, o_year#409, sum_profit#411]
+- == Initial Plan ==
   Sort [nation#408 ASC NULLS FIRST, o_year#409 DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(nation#408 ASC NULLS FIRST, o_year#409 DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#2648]
      +- HashAggregate(keys=[nation#408, o_year#409], functions=[sum(amount#410)], output=[nation#408, o_year#409, sum_profit#411])
         +- Exchange hashpartitioning(nation#408, o_year#409, 200), ENSURE_REQUIREMENTS, [id=#2645]
            +- HashAggregate(keys=[nation#408, o_year#409], functions=[partial_sum(amount#410)], output=[nation#408, o_year#409, sum#418, isEmpty#419])
               +- Project [n_name#43 AS nation#408, year(o_orderdate#60) AS o_year#409, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(l_extendedprice#79 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#80 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true) as decimal(25,4))) - promote_precision(cast(CheckOverflow((promote_precision(ps_supplycost#35) * promote_precision(l_quantity#78)), DecimalType(23,4), true) as decimal(25,4)))), DecimalType(25,4), true) AS amount#410]
                  +- BroadcastHashJoin [s_nationkey#3L], [n_nationkey#42L], Inner, BuildRight, false
                     :- Project [l_quantity#78, l_extendedprice#79, l_discount#80, s_nationkey#3L, ps_supplycost#35, o_orderdate#60]
                     :  +- SortMergeJoin [l_orderkey#74L], [o_orderkey#56L], Inner
                     :     :- Sort [l_orderkey#74L ASC NULLS FIRST], false, 0
                     :     :  +- Exchange hashpartitioning(l_orderkey#74L, 200), ENSURE_REQUIREMENTS, [id=#2633]
                     :     :     +- Project [l_orderkey#74L, l_quantity#78, l_extendedprice#79, l_discount#80, s_nationkey#3L, ps_supplycost#35]
                     :     :        +- SortMergeJoin [l_suppkey#76L, l_partkey#75L], [ps_suppkey#33L, ps_partkey#32L], Inner
                     :     :           :- Sort [l_suppkey#76L ASC NULLS FIRST, l_partkey#75L ASC NULLS FIRST], false, 0
                     :     :           :  +- Exchange hashpartitioning(l_suppkey#76L, l_partkey#75L, 200), ENSURE_REQUIREMENTS, [id=#2625]
                     :     :           :     +- Project [l_orderkey#74L, l_partkey#75L, l_suppkey#76L, l_quantity#78, l_extendedprice#79, l_discount#80, s_nationkey#3L]
                     :     :           :        +- SortMergeJoin [l_suppkey#76L], [s_suppkey#0L], Inner
                     :     :           :           :- Sort [l_suppkey#76L ASC NULLS FIRST], false, 0
                     :     :           :           :  +- Exchange hashpartitioning(l_suppkey#76L, 200), ENSURE_REQUIREMENTS, [id=#2617]
                     :     :           :           :     +- Project [l_orderkey#74L, l_partkey#75L, l_suppkey#76L, l_quantity#78, l_extendedprice#79, l_discount#80]
                     :     :           :           :        +- SortMergeJoin [p_partkey#14L], [l_partkey#75L], Inner
                     :     :           :           :           :- Sort [p_partkey#14L ASC NULLS FIRST], false, 0
                     :     :           :           :           :  +- Exchange hashpartitioning(p_partkey#14L, 200), ENSURE_REQUIREMENTS, [id=#2609]
                     :     :           :           :           :     +- Project [p_partkey#14L]
                     :     :           :           :           :        +- Filter ((isnotnull(p_name#15) AND Contains(p_name#15, thistle)) AND isnotnull(p_partkey#14L))
                     :     :           :           :           :           +- FileScan parquet [p_partkey#14L,p_name#15] Batched: true, DataFilters: [isnotnull(p_name#15), Contains(p_name#15, thistle), isnotnull(p_partkey#14L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/part.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_name), StringContains(p_name,thistle), IsNotNull(p_partkey)], ReadSchema: struct<p_partkey:bigint,p_name:string>
                     :     :           :           :           +- Sort [l_partkey#75L ASC NULLS FIRST], false, 0
                     :     :           :           :              +- Exchange hashpartitioning(l_partkey#75L, 200), ENSURE_REQUIREMENTS, [id=#2610]
                     :     :           :           :                 +- Filter ((isnotnull(l_partkey#75L) AND isnotnull(l_suppkey#76L)) AND isnotnull(l_orderkey#74L))
                     :     :           :           :                    +- FileScan parquet [l_orderkey#74L,l_partkey#75L,l_suppkey#76L,l_quantity#78,l_extendedprice#79,l_discount#80] Batched: true, DataFilters: [isnotnull(l_partkey#75L), isnotnull(l_suppkey#76L), isnotnull(l_orderkey#74L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_partkey), IsNotNull(l_suppkey), IsNotNull(l_orderkey)], ReadSchema: struct<l_orderkey:bigint,l_partkey:bigint,l_suppkey:bigint,l_quantity:decimal(11,2),l_extendedpri...
                     :     :           :           +- Sort [s_suppkey#0L ASC NULLS FIRST], false, 0
                     :     :           :              +- Exchange hashpartitioning(s_suppkey#0L, 200), ENSURE_REQUIREMENTS, [id=#2618]
                     :     :           :                 +- Filter (isnotnull(s_suppkey#0L) AND isnotnull(s_nationkey#3L))
                     :     :           :                    +- FileScan parquet [s_suppkey#0L,s_nationkey#3L] Batched: true, DataFilters: [isnotnull(s_suppkey#0L), isnotnull(s_nationkey#3L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/supplier.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_suppkey), IsNotNull(s_nationkey)], ReadSchema: struct<s_suppkey:bigint,s_nationkey:bigint>
                     :     :           +- Sort [ps_suppkey#33L ASC NULLS FIRST, ps_partkey#32L ASC NULLS FIRST], false, 0
                     :     :              +- Exchange hashpartitioning(ps_suppkey#33L, ps_partkey#32L, 200), ENSURE_REQUIREMENTS, [id=#2626]
                     :     :                 +- Filter (isnotnull(ps_suppkey#33L) AND isnotnull(ps_partkey#32L))
                     :     :                    +- FileScan parquet [ps_partkey#32L,ps_suppkey#33L,ps_supplycost#35] Batched: true, DataFilters: [isnotnull(ps_suppkey#33L), isnotnull(ps_partkey#32L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/partsupp.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ps_suppkey), IsNotNull(ps_partkey)], ReadSchema: struct<ps_partkey:bigint,ps_suppkey:bigint,ps_supplycost:decimal(11,2)>
                     :     +- Sort [o_orderkey#56L ASC NULLS FIRST], false, 0
                     :        +- Exchange hashpartitioning(o_orderkey#56L, 200), ENSURE_REQUIREMENTS, [id=#2634]
                     :           +- Filter isnotnull(o_orderkey#56L)
                     :              +- FileScan parquet [o_orderkey#56L,o_orderdate#60] Batched: true, DataFilters: [isnotnull(o_orderkey#56L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/orders.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(o_orderkey)], ReadSchema: struct<o_orderkey:bigint,o_orderdate:date>
                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#2640]
                        +- Filter isnotnull(n_nationkey#42L)
                           +- FileScan parquet [n_nationkey#42L,n_name#43] Batched: true, DataFilters: [isnotnull(n_nationkey#42L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/nation.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(n_nationkey)], ReadSchema: struct<n_nationkey:bigint,n_name:string>
