AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(7) Sort [l_shipmode#88 ASC NULLS FIRST], true, 0
   +- AQEShuffleRead coalesced
      +- ShuffleQueryStage 3
         +- Exchange rangepartitioning(l_shipmode#88 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#3971]
            +- *(6) HashAggregate(keys=[l_shipmode#88], functions=[sum(CASE WHEN ((o_orderpriority#61 = 1-URGENT) OR (o_orderpriority#61 = 2-HIGH)) THEN 1 ELSE 0 END), sum(CASE WHEN (NOT (o_orderpriority#61 = 1-URGENT) AND NOT (o_orderpriority#61 = 2-HIGH)) THEN 1 ELSE 0 END)], output=[l_shipmode#88, high_line_count#517L, low_line_count#518L])
               +- AQEShuffleRead coalesced
                  +- ShuffleQueryStage 2
                     +- Exchange hashpartitioning(l_shipmode#88, 200), ENSURE_REQUIREMENTS, [id=#3929]
                        +- *(5) HashAggregate(keys=[l_shipmode#88], functions=[partial_sum(CASE WHEN ((o_orderpriority#61 = 1-URGENT) OR (o_orderpriority#61 = 2-HIGH)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (NOT (o_orderpriority#61 = 1-URGENT) AND NOT (o_orderpriority#61 = 2-HIGH)) THEN 1 ELSE 0 END)], output=[l_shipmode#88, sum#526L, sum#527L])
                           +- *(5) Project [o_orderpriority#61, l_shipmode#88]
                              +- *(5) SortMergeJoin [o_orderkey#56L], [l_orderkey#74L], Inner
                                 :- *(3) Sort [o_orderkey#56L ASC NULLS FIRST], false, 0
                                 :  +- AQEShuffleRead coalesced
                                 :     +- ShuffleQueryStage 0
                                 :        +- Exchange hashpartitioning(o_orderkey#56L, 200), ENSURE_REQUIREMENTS, [id=#3797]
                                 :           +- *(1) Filter isnotnull(o_orderkey#56L)
                                 :              +- *(1) ColumnarToRow
                                 :                 +- FileScan parquet [o_orderkey#56L,o_orderpriority#61] Batched: true, DataFilters: [isnotnull(o_orderkey#56L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/orders.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(o_orderkey)], ReadSchema: struct<o_orderkey:bigint,o_orderpriority:string>
                                 +- *(4) Sort [l_orderkey#74L ASC NULLS FIRST], false, 0
                                    +- AQEShuffleRead coalesced
                                       +- ShuffleQueryStage 1
                                          +- Exchange hashpartitioning(l_orderkey#74L, 200), ENSURE_REQUIREMENTS, [id=#3816]
                                             +- *(2) Project [l_orderkey#74L, l_shipmode#88]
                                                +- *(2) Filter ((((((((isnotnull(l_commitdate#85) AND isnotnull(l_receiptdate#86)) AND isnotnull(l_shipdate#84)) AND l_shipmode#88 IN (MAIL,TRUCK)) AND (l_commitdate#85 < l_receiptdate#86)) AND (l_shipdate#84 < l_commitdate#85)) AND (l_receiptdate#86 >= 1997-01-01)) AND (l_receiptdate#86 < 1998-01-01)) AND isnotnull(l_orderkey#74L))
                                                   +- *(2) ColumnarToRow
                                                      +- FileScan parquet [l_orderkey#74L,l_shipdate#84,l_commitdate#85,l_receiptdate#86,l_shipmode#88] Batched: true, DataFilters: [isnotnull(l_commitdate#85), isnotnull(l_receiptdate#86), isnotnull(l_shipdate#84), l_shipmode#88..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_commitdate), IsNotNull(l_receiptdate), IsNotNull(l_shipdate), In(l_shipmode, [MAIL,T..., ReadSchema: struct<l_orderkey:bigint,l_shipdate:date,l_commitdate:date,l_receiptdate:date,l_shipmode:string>
+- == Initial Plan ==
   Sort [l_shipmode#88 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(l_shipmode#88 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#3760]
      +- HashAggregate(keys=[l_shipmode#88], functions=[sum(CASE WHEN ((o_orderpriority#61 = 1-URGENT) OR (o_orderpriority#61 = 2-HIGH)) THEN 1 ELSE 0 END), sum(CASE WHEN (NOT (o_orderpriority#61 = 1-URGENT) AND NOT (o_orderpriority#61 = 2-HIGH)) THEN 1 ELSE 0 END)], output=[l_shipmode#88, high_line_count#517L, low_line_count#518L])
         +- Exchange hashpartitioning(l_shipmode#88, 200), ENSURE_REQUIREMENTS, [id=#3757]
            +- HashAggregate(keys=[l_shipmode#88], functions=[partial_sum(CASE WHEN ((o_orderpriority#61 = 1-URGENT) OR (o_orderpriority#61 = 2-HIGH)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (NOT (o_orderpriority#61 = 1-URGENT) AND NOT (o_orderpriority#61 = 2-HIGH)) THEN 1 ELSE 0 END)], output=[l_shipmode#88, sum#526L, sum#527L])
               +- Project [o_orderpriority#61, l_shipmode#88]
                  +- SortMergeJoin [o_orderkey#56L], [l_orderkey#74L], Inner
                     :- Sort [o_orderkey#56L ASC NULLS FIRST], false, 0
                     :  +- Exchange hashpartitioning(o_orderkey#56L, 200), ENSURE_REQUIREMENTS, [id=#3749]
                     :     +- Filter isnotnull(o_orderkey#56L)
                     :        +- FileScan parquet [o_orderkey#56L,o_orderpriority#61] Batched: true, DataFilters: [isnotnull(o_orderkey#56L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/orders.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(o_orderkey)], ReadSchema: struct<o_orderkey:bigint,o_orderpriority:string>
                     +- Sort [l_orderkey#74L ASC NULLS FIRST], false, 0
                        +- Exchange hashpartitioning(l_orderkey#74L, 200), ENSURE_REQUIREMENTS, [id=#3750]
                           +- Project [l_orderkey#74L, l_shipmode#88]
                              +- Filter ((((((((isnotnull(l_commitdate#85) AND isnotnull(l_receiptdate#86)) AND isnotnull(l_shipdate#84)) AND l_shipmode#88 IN (MAIL,TRUCK)) AND (l_commitdate#85 < l_receiptdate#86)) AND (l_shipdate#84 < l_commitdate#85)) AND (l_receiptdate#86 >= 1997-01-01)) AND (l_receiptdate#86 < 1998-01-01)) AND isnotnull(l_orderkey#74L))
                                 +- FileScan parquet [l_orderkey#74L,l_shipdate#84,l_commitdate#85,l_receiptdate#86,l_shipmode#88] Batched: true, DataFilters: [isnotnull(l_commitdate#85), isnotnull(l_receiptdate#86), isnotnull(l_shipdate#84), l_shipmode#88..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_commitdate), IsNotNull(l_receiptdate), IsNotNull(l_shipdate), In(l_shipmode, [MAIL,T..., ReadSchema: struct<l_orderkey:bigint,l_shipdate:date,l_commitdate:date,l_receiptdate:date,l_shipmode:string>
