AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   LocalTableScan <empty>, [n_name#43, revenue#314]
+- == Initial Plan ==
   Sort [revenue#314 DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(revenue#314 DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#1433]
      +- HashAggregate(keys=[n_name#43], functions=[sum(CheckOverflow((promote_precision(cast(l_extendedprice#79 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#80 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[n_name#43, revenue#314])
         +- Exchange hashpartitioning(n_name#43, 200), ENSURE_REQUIREMENTS, [id=#1430]
            +- HashAggregate(keys=[n_name#43], functions=[partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#79 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#80 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[n_name#43, sum#320, isEmpty#321])
               +- Project [l_extendedprice#79, l_discount#80, n_name#43]
                  +- BroadcastHashJoin [n_regionkey#44L], [r_regionkey#50L], Inner, BuildRight, false
                     :- Project [l_extendedprice#79, l_discount#80, n_name#43, n_regionkey#44L]
                     :  +- BroadcastHashJoin [s_nationkey#3L], [n_nationkey#42L], Inner, BuildRight, false
                     :     :- Project [l_extendedprice#79, l_discount#80, s_nationkey#3L]
                     :     :  +- SortMergeJoin [l_suppkey#76L, c_nationkey#109L], [s_suppkey#0L, s_nationkey#3L], Inner
                     :     :     :- Sort [l_suppkey#76L ASC NULLS FIRST, c_nationkey#109L ASC NULLS FIRST], false, 0
                     :     :     :  +- Exchange hashpartitioning(l_suppkey#76L, c_nationkey#109L, 200), ENSURE_REQUIREMENTS, [id=#1414]
                     :     :     :     +- Project [c_nationkey#109L, l_suppkey#76L, l_extendedprice#79, l_discount#80]
                     :     :     :        +- SortMergeJoin [o_orderkey#56L], [l_orderkey#74L], Inner
                     :     :     :           :- Sort [o_orderkey#56L ASC NULLS FIRST], false, 0
                     :     :     :           :  +- Exchange hashpartitioning(o_orderkey#56L, 200), ENSURE_REQUIREMENTS, [id=#1406]
                     :     :     :           :     +- Project [c_nationkey#109L, o_orderkey#56L]
                     :     :     :           :        +- SortMergeJoin [c_custkey#106L], [o_custkey#57L], Inner
                     :     :     :           :           :- Sort [c_custkey#106L ASC NULLS FIRST], false, 0
                     :     :     :           :           :  +- Exchange hashpartitioning(c_custkey#106L, 200), ENSURE_REQUIREMENTS, [id=#1398]
                     :     :     :           :           :     +- Filter (isnotnull(c_custkey#106L) AND isnotnull(c_nationkey#109L))
                     :     :     :           :           :        +- FileScan parquet [c_custkey#106L,c_nationkey#109L] Batched: true, DataFilters: [isnotnull(c_custkey#106L), isnotnull(c_nationkey#109L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_custkey), IsNotNull(c_nationkey)], ReadSchema: struct<c_custkey:bigint,c_nationkey:bigint>
                     :     :     :           :           +- Sort [o_custkey#57L ASC NULLS FIRST], false, 0
                     :     :     :           :              +- Exchange hashpartitioning(o_custkey#57L, 200), ENSURE_REQUIREMENTS, [id=#1399]
                     :     :     :           :                 +- Project [o_orderkey#56L, o_custkey#57L]
                     :     :     :           :                    +- Filter ((((isnotnull(o_orderdate#60) AND (o_orderdate#60 >= 1993-01-01)) AND (o_orderdate#60 < 1994-01-01)) AND isnotnull(o_custkey#57L)) AND isnotnull(o_orderkey#56L))
                     :     :     :           :                       +- FileScan parquet [o_orderkey#56L,o_custkey#57L,o_orderdate#60] Batched: true, DataFilters: [isnotnull(o_orderdate#60), (o_orderdate#60 >= 1993-01-01), (o_orderdate#60 < 1994-01-01), isnotn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/orders.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(o_orderdate), GreaterThanOrEqual(o_orderdate,1993-01-01), LessThan(o_orderdate,1994-01..., ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_orderdate:date>
                     :     :     :           +- Sort [l_orderkey#74L ASC NULLS FIRST], false, 0
                     :     :     :              +- Exchange hashpartitioning(l_orderkey#74L, 200), ENSURE_REQUIREMENTS, [id=#1407]
                     :     :     :                 +- Filter (isnotnull(l_orderkey#74L) AND isnotnull(l_suppkey#76L))
                     :     :     :                    +- FileScan parquet [l_orderkey#74L,l_suppkey#76L,l_extendedprice#79,l_discount#80] Batched: true, DataFilters: [isnotnull(l_orderkey#74L), isnotnull(l_suppkey#76L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_orderkey), IsNotNull(l_suppkey)], ReadSchema: struct<l_orderkey:bigint,l_suppkey:bigint,l_extendedprice:decimal(11,2),l_discount:decimal(11,2)>
                     :     :     +- Sort [s_suppkey#0L ASC NULLS FIRST, s_nationkey#3L ASC NULLS FIRST], false, 0
                     :     :        +- Exchange hashpartitioning(s_suppkey#0L, s_nationkey#3L, 200), ENSURE_REQUIREMENTS, [id=#1415]
                     :     :           +- Filter (isnotnull(s_suppkey#0L) AND isnotnull(s_nationkey#3L))
                     :     :              +- FileScan parquet [s_suppkey#0L,s_nationkey#3L] Batched: true, DataFilters: [isnotnull(s_suppkey#0L), isnotnull(s_nationkey#3L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/supplier.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_suppkey), IsNotNull(s_nationkey)], ReadSchema: struct<s_suppkey:bigint,s_nationkey:bigint>
                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1421]
                     :        +- Filter (isnotnull(n_nationkey#42L) AND isnotnull(n_regionkey#44L))
                     :           +- FileScan parquet [n_nationkey#42L,n_name#43,n_regionkey#44L] Batched: true, DataFilters: [isnotnull(n_nationkey#42L), isnotnull(n_regionkey#44L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/nation.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(n_nationkey), IsNotNull(n_regionkey)], ReadSchema: struct<n_nationkey:bigint,n_name:string,n_regionkey:bigint>
                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#1425]
                        +- Project [r_regionkey#50L]
                           +- Filter ((isnotnull(r_name#51) AND (r_name#51 = ASIA)) AND isnotnull(r_regionkey#50L))
                              +- FileScan parquet [r_regionkey#50L,r_name#51] Batched: true, DataFilters: [isnotnull(r_name#51), (r_name#51 = ASIA), isnotnull(r_regionkey#50L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/region.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(r_name), EqualTo(r_name,ASIA), IsNotNull(r_regionkey)], ReadSchema: struct<r_regionkey:bigint,r_name:string>
