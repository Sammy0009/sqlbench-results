AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   LocalTableScan <empty>, [s_name#1, s_address#2]
+- == Initial Plan ==
   Sort [s_name#1 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(s_name#1 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#7262]
      +- Project [s_name#1, s_address#2]
         +- BroadcastHashJoin [s_nationkey#3L], [n_nationkey#42L], Inner, BuildRight, false
            :- Project [s_name#1, s_address#2, s_nationkey#3L]
            :  +- SortMergeJoin [s_suppkey#0L], [ps_suppkey#33L], LeftSemi
            :     :- Sort [s_suppkey#0L ASC NULLS FIRST], false, 0
            :     :  +- Exchange hashpartitioning(s_suppkey#0L, 200), ENSURE_REQUIREMENTS, [id=#7251]
            :     :     +- Filter isnotnull(s_nationkey#3L)
            :     :        +- FileScan parquet [s_suppkey#0L,s_name#1,s_address#2,s_nationkey#3L] Batched: true, DataFilters: [isnotnull(s_nationkey#3L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/supplier.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_nationkey)], ReadSchema: struct<s_suppkey:bigint,s_name:string,s_address:string,s_nationkey:bigint>
            :     +- Sort [ps_suppkey#33L ASC NULLS FIRST], false, 0
            :        +- Exchange hashpartitioning(ps_suppkey#33L, 200), ENSURE_REQUIREMENTS, [id=#7252]
            :           +- Project [ps_suppkey#33L]
            :              +- SortMergeJoin [ps_partkey#32L, ps_suppkey#33L], [l_partkey#75L, l_suppkey#76L], Inner, (cast(cast(ps_availqty#34 as decimal(10,0)) as decimal(23,3)) > (0.5 * sum(l_quantity))#837)
            :                 :- Sort [ps_partkey#32L ASC NULLS FIRST, ps_suppkey#33L ASC NULLS FIRST], false, 0
            :                 :  +- Exchange hashpartitioning(ps_partkey#32L, ps_suppkey#33L, 200), ENSURE_REQUIREMENTS, [id=#7243]
            :                 :     +- SortMergeJoin [ps_partkey#32L], [p_partkey#14L], LeftSemi
            :                 :        :- Sort [ps_partkey#32L ASC NULLS FIRST], false, 0
            :                 :        :  +- Exchange hashpartitioning(ps_partkey#32L, 200), ENSURE_REQUIREMENTS, [id=#7227]
            :                 :        :     +- Filter ((isnotnull(ps_availqty#34) AND isnotnull(ps_partkey#32L)) AND isnotnull(ps_suppkey#33L))
            :                 :        :        +- FileScan parquet [ps_partkey#32L,ps_suppkey#33L,ps_availqty#34] Batched: true, DataFilters: [isnotnull(ps_availqty#34), isnotnull(ps_partkey#32L), isnotnull(ps_suppkey#33L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/partsupp.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ps_availqty), IsNotNull(ps_partkey), IsNotNull(ps_suppkey)], ReadSchema: struct<ps_partkey:bigint,ps_suppkey:bigint,ps_availqty:int>
            :                 :        +- Sort [p_partkey#14L ASC NULLS FIRST], false, 0
            :                 :           +- Exchange hashpartitioning(p_partkey#14L, 200), ENSURE_REQUIREMENTS, [id=#7228]
            :                 :              +- Project [p_partkey#14L]
            :                 :                 +- Filter (isnotnull(p_name#15) AND StartsWith(p_name#15, papaya))
            :                 :                    +- FileScan parquet [p_partkey#14L,p_name#15] Batched: true, DataFilters: [isnotnull(p_name#15), StartsWith(p_name#15, papaya)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/part.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_name), StringStartsWith(p_name,papaya)], ReadSchema: struct<p_partkey:bigint,p_name:string>
            :                 +- Sort [l_partkey#75L ASC NULLS FIRST, l_suppkey#76L ASC NULLS FIRST], false, 0
            :                    +- Exchange hashpartitioning(l_partkey#75L, l_suppkey#76L, 200), ENSURE_REQUIREMENTS, [id=#7244]
            :                       +- Filter isnotnull((0.5 * sum(l_quantity))#837)
            :                          +- HashAggregate(keys=[l_partkey#75L, l_suppkey#76L], functions=[sum(l_quantity#78)], output=[(0.5 * sum(l_quantity))#837, l_partkey#75L, l_suppkey#76L])
            :                             +- HashAggregate(keys=[l_partkey#75L, l_suppkey#76L], functions=[partial_sum(l_quantity#78)], output=[l_partkey#75L, l_suppkey#76L, sum#842, isEmpty#843])
            :                                +- SortMergeJoin [l_partkey#75L], [p_partkey#14L], LeftSemi
            :                                   :- Sort [l_partkey#75L ASC NULLS FIRST], false, 0
            :                                   :  +- Exchange hashpartitioning(l_partkey#75L, 200), ENSURE_REQUIREMENTS, [id=#7233]
            :                                   :     +- Project [l_partkey#75L, l_suppkey#76L, l_quantity#78]
            :                                   :        +- Filter ((((isnotnull(l_shipdate#84) AND (l_shipdate#84 >= 1993-01-01)) AND (l_shipdate#84 < 1994-01-01)) AND isnotnull(l_partkey#75L)) AND isnotnull(l_suppkey#76L))
            :                                   :           +- FileScan parquet [l_partkey#75L,l_suppkey#76L,l_quantity#78,l_shipdate#84] Batched: true, DataFilters: [isnotnull(l_shipdate#84), (l_shipdate#84 >= 1993-01-01), (l_shipdate#84 < 1994-01-01), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThanOrEqual(l_shipdate,1993-01-01), LessThan(l_shipdate,1994-01-01..., ReadSchema: struct<l_partkey:bigint,l_suppkey:bigint,l_quantity:decimal(11,2),l_shipdate:date>
            :                                   +- Sort [p_partkey#14L ASC NULLS FIRST], false, 0
            :                                      +- Exchange hashpartitioning(p_partkey#14L, 200), ENSURE_REQUIREMENTS, [id=#7234]
            :                                         +- Project [p_partkey#14L]
            :                                            +- Filter (isnotnull(p_name#15) AND StartsWith(p_name#15, papaya))
            :                                               +- FileScan parquet [p_partkey#14L,p_name#15] Batched: true, DataFilters: [isnotnull(p_name#15), StartsWith(p_name#15, papaya)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/part.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_name), StringStartsWith(p_name,papaya)], ReadSchema: struct<p_partkey:bigint,p_name:string>
            +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#7258]
               +- Project [n_nationkey#42L]
                  +- Filter ((isnotnull(n_name#43) AND (n_name#43 = MOZAMBIQUE)) AND isnotnull(n_nationkey#42L))
                     +- FileScan parquet [n_nationkey#42L,n_name#43] Batched: true, DataFilters: [isnotnull(n_name#43), (n_name#43 = MOZAMBIQUE), isnotnull(n_nationkey#42L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/nation.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(n_name), EqualTo(n_name,MOZAMBIQUE), IsNotNull(n_nationkey)], ReadSchema: struct<n_nationkey:bigint,n_name:string>
