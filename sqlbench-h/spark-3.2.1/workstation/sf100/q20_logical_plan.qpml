---
diagram:
  title: "Sort (unknown)"
  operator: "Sort"
  inputs:
  - title: "Projection: s_name#1, s_address#2"
    operator: "projection"
    inputs:
    - title: "Inner Join: Some((s_nationkey#3L = n_nationkey#42L))"
      operator: "join"
      inputs:
      - title: "Projection: s_name#1, s_address#2, s_nationkey#3L"
        operator: "projection"
        inputs:
        - title: "LeftSemi Join: Some((s_suppkey#0L = ps_suppkey#33L))"
          operator: "join"
          inputs:
          - title: "Projection: s_suppkey#0L, s_name#1, s_address#2, s_nationkey#3L"
            operator: "projection"
            inputs:
            - title: "Filter: isnotnull(s_nationkey#3L)"
              operator: "filter"
              inputs:
              - title: "supplier.parquet"
                operator: "scan"
                inputs: []
          - title: "Projection: ps_suppkey#33L"
            operator: "projection"
            inputs:
            - title: "Inner Join: Some((((cast(cast(ps_availqty#34 as decimal(10,0))\
                \ as decimal(23,3)) > (0.5 * sum(l_quantity))#835) AND (l_partkey#75L\
                \ = ps_partkey#32L)) AND (l_suppkey#76L = ps_suppkey#33L)))"
              operator: "join"
              inputs:
              - title: "LeftSemi Join: Some((ps_partkey#32L = p_partkey#14L))"
                operator: "join"
                inputs:
                - title: "Projection: ps_partkey#32L, ps_suppkey#33L, ps_availqty#34"
                  operator: "projection"
                  inputs:
                  - title: "Filter: ((isnotnull(ps_availqty#34) AND isnotnull(ps_partkey#32L))\
                      \ AND isnotnull(ps_suppkey#33L))"
                    operator: "filter"
                    inputs:
                    - title: "partsupp.parquet"
                      operator: "scan"
                      inputs: []
                - title: "Projection: p_partkey#14L"
                  operator: "projection"
                  inputs:
                  - title: "Filter: (isnotnull(p_name#15) AND StartsWith(p_name#15,\
                      \ papaya))"
                    operator: "filter"
                    inputs:
                    - title: "part.parquet"
                      operator: "scan"
                      inputs: []
              - title: "Filter: isnotnull((0.5 * sum(l_quantity))#835)"
                operator: "filter"
                inputs:
                - title: "Aggregate (unknown)"
                  operator: "Aggregate"
                  inputs:
                  - title: "LeftSemi Join: Some((l_partkey#75L = p_partkey#14L))"
                    operator: "join"
                    inputs:
                    - title: "Projection: l_partkey#75L, l_suppkey#76L, l_quantity#78"
                      operator: "projection"
                      inputs:
                      - title: "Filter: ((((isnotnull(l_shipdate#84) AND (l_shipdate#84\
                          \ >= 1993-01-01)) AND (l_shipdate#84 < 1994-01-01)) AND\
                          \ isnotnull(l_partkey#75L)) AND isnotnull(l_suppkey#76L))"
                        operator: "filter"
                        inputs:
                        - title: "lineitem.parquet"
                          operator: "scan"
                          inputs: []
                    - title: "Projection: p_partkey#14L"
                      operator: "projection"
                      inputs:
                      - title: "Filter: (isnotnull(p_name#15) AND StartsWith(p_name#15,\
                          \ papaya))"
                        operator: "filter"
                        inputs:
                        - title: "part.parquet"
                          operator: "scan"
                          inputs: []
      - title: "Projection: n_nationkey#42L"
        operator: "projection"
        inputs:
        - title: "Filter: ((isnotnull(n_name#43) AND (n_name#43 = MOZAMBIQUE)) AND\
            \ isnotnull(n_nationkey#42L))"
          operator: "filter"
          inputs:
          - title: "nation.parquet"
            operator: "scan"
            inputs: []
