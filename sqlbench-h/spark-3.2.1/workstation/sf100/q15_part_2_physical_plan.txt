AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(6) Sort [s_suppkey#0L ASC NULLS FIRST], true, 0
   +- ShuffleQueryStage 2
      +- Exchange rangepartitioning(s_suppkey#0L ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#4802]
         +- *(5) Project [s_suppkey#0L, s_name#1, s_address#2, s_phone#4, total_revenue#595]
            +- *(5) SortMergeJoin [s_suppkey#0L], [supplier_no#594L], Inner
               :- *(3) Sort [s_suppkey#0L ASC NULLS FIRST], false, 0
               :  +- AQEShuffleRead coalesced
               :     +- ShuffleQueryStage 0
               :        +- Exchange hashpartitioning(s_suppkey#0L, 200), ENSURE_REQUIREMENTS, [id=#4658]
               :           +- *(1) Filter isnotnull(s_suppkey#0L)
               :              +- *(1) ColumnarToRow
               :                 +- FileScan parquet [s_suppkey#0L,s_name#1,s_address#2,s_phone#4] Batched: true, DataFilters: [isnotnull(s_suppkey#0L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/supplier.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_suppkey)], ReadSchema: struct<s_suppkey:bigint,s_name:string,s_address:string,s_phone:string>
               +- *(4) Sort [supplier_no#594L ASC NULLS FIRST], false, 0
                  +- *(4) Project [l_suppkey#76L AS supplier_no#594L, sum((l_extendedprice * (1 - l_discount)))#597 AS total_revenue#595]
                     +- *(4) Filter (isnotnull(sum((l_extendedprice * (1 - l_discount)))#597) AND (sum((l_extendedprice * (1 - l_discount)))#597 = Subquery subquery#593, [id=#4583]))
                        :  +- Subquery subquery#593, [id=#4583]
                        :     +- AdaptiveSparkPlan isFinalPlan=true
                              +- == Final Plan ==
                                 *(3) HashAggregate(keys=[], functions=[max(total_revenue#599)], output=[max(total_revenue)#603])
                                 +- ShuffleQueryStage 1
                                    +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#4886]
                                       +- *(2) HashAggregate(keys=[], functions=[partial_max(total_revenue#599)], output=[max#630])
                                          +- *(2) HashAggregate(keys=[l_suppkey#606L], functions=[sum(CheckOverflow((promote_precision(cast(l_extendedprice#609 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#610 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[total_revenue#599])
                                             +- AQEShuffleRead coalesced
                                                +- ShuffleQueryStage 0
                                                   +- Exchange hashpartitioning(l_suppkey#606L, 200), ENSURE_REQUIREMENTS, [id=#4848]
                                                      +- *(1) HashAggregate(keys=[l_suppkey#606L], functions=[partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#609 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#610 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_suppkey#606L, sum#633, isEmpty#634])
                                                         +- *(1) Project [l_suppkey#606L, l_extendedprice#609, l_discount#610]
                                                            +- *(1) Filter ((isnotnull(l_shipdate#614) AND (l_shipdate#614 >= 1996-09-01)) AND (l_shipdate#614 < 1996-12-01))
                                                               +- *(1) ColumnarToRow
                                                                  +- FileScan parquet [l_suppkey#606L,l_extendedprice#609,l_discount#610,l_shipdate#614] Batched: true, DataFilters: [isnotnull(l_shipdate#614), (l_shipdate#614 >= 1996-09-01), (l_shipdate#614 < 1996-12-01)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThanOrEqual(l_shipdate,1996-09-01), LessThan(l_shipdate,1996-12-01)], ReadSchema: struct<l_suppkey:bigint,l_extendedprice:decimal(11,2),l_discount:decimal(11,2),l_shipdate:date>
                              +- == Initial Plan ==
                                 HashAggregate(keys=[], functions=[max(total_revenue#599)], output=[max(total_revenue)#603])
                                 +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#4581]
                                    +- HashAggregate(keys=[], functions=[partial_max(total_revenue#599)], output=[max#630])
                                       +- HashAggregate(keys=[l_suppkey#606L], functions=[sum(CheckOverflow((promote_precision(cast(l_extendedprice#609 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#610 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[total_revenue#599])
                                          +- Exchange hashpartitioning(l_suppkey#606L, 200), ENSURE_REQUIREMENTS, [id=#4577]
                                             +- HashAggregate(keys=[l_suppkey#606L], functions=[partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#609 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#610 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_suppkey#606L, sum#633, isEmpty#634])
                                                +- Project [l_suppkey#606L, l_extendedprice#609, l_discount#610]
                                                   +- Filter ((isnotnull(l_shipdate#614) AND (l_shipdate#614 >= 1996-09-01)) AND (l_shipdate#614 < 1996-12-01))
                                                      +- FileScan parquet [l_suppkey#606L,l_extendedprice#609,l_discount#610,l_shipdate#614] Batched: true, DataFilters: [isnotnull(l_shipdate#614), (l_shipdate#614 >= 1996-09-01), (l_shipdate#614 < 1996-12-01)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThanOrEqual(l_shipdate,1996-09-01), LessThan(l_shipdate,1996-12-01)], ReadSchema: struct<l_suppkey:bigint,l_extendedprice:decimal(11,2),l_discount:decimal(11,2),l_shipdate:date>
                        +- *(4) HashAggregate(keys=[l_suppkey#76L], functions=[sum(CheckOverflow((promote_precision(cast(l_extendedprice#79 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#80 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_suppkey#76L, sum((l_extendedprice * (1 - l_discount)))#597])
                           +- AQEShuffleRead coalesced
                              +- ShuffleQueryStage 1
                                 +- Exchange hashpartitioning(l_suppkey#76L, 200), ENSURE_REQUIREMENTS, [id=#4679]
                                    +- *(2) HashAggregate(keys=[l_suppkey#76L], functions=[partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#79 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#80 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_suppkey#76L, sum#627, isEmpty#628])
                                       +- *(2) Project [l_suppkey#76L, l_extendedprice#79, l_discount#80]
                                          +- *(2) Filter (((isnotnull(l_shipdate#84) AND (l_shipdate#84 >= 1996-09-01)) AND (l_shipdate#84 < 1996-12-01)) AND isnotnull(l_suppkey#76L))
                                             +- *(2) ColumnarToRow
                                                +- FileScan parquet [l_suppkey#76L,l_extendedprice#79,l_discount#80,l_shipdate#84] Batched: true, DataFilters: [isnotnull(l_shipdate#84), (l_shipdate#84 >= 1996-09-01), (l_shipdate#84 < 1996-12-01), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThanOrEqual(l_shipdate,1996-09-01), LessThan(l_shipdate,1996-12-01..., ReadSchema: struct<l_suppkey:bigint,l_extendedprice:decimal(11,2),l_discount:decimal(11,2),l_shipdate:date>
+- == Initial Plan ==
   Sort [s_suppkey#0L ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(s_suppkey#0L ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#4605]
      +- Project [s_suppkey#0L, s_name#1, s_address#2, s_phone#4, total_revenue#595]
         +- SortMergeJoin [s_suppkey#0L], [supplier_no#594L], Inner
            :- Sort [s_suppkey#0L ASC NULLS FIRST], false, 0
            :  +- Exchange hashpartitioning(s_suppkey#0L, 200), ENSURE_REQUIREMENTS, [id=#4599]
            :     +- Filter isnotnull(s_suppkey#0L)
            :        +- FileScan parquet [s_suppkey#0L,s_name#1,s_address#2,s_phone#4] Batched: true, DataFilters: [isnotnull(s_suppkey#0L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/supplier.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_suppkey)], ReadSchema: struct<s_suppkey:bigint,s_name:string,s_address:string,s_phone:string>
            +- Sort [supplier_no#594L ASC NULLS FIRST], false, 0
               +- Project [l_suppkey#76L AS supplier_no#594L, sum((l_extendedprice * (1 - l_discount)))#597 AS total_revenue#595]
                  +- Filter (isnotnull(sum((l_extendedprice * (1 - l_discount)))#597) AND (sum((l_extendedprice * (1 - l_discount)))#597 = Subquery subquery#593, [id=#4583]))
                     :  +- Subquery subquery#593, [id=#4583]
                     :     +- AdaptiveSparkPlan isFinalPlan=true
                           +- == Final Plan ==
                              *(3) HashAggregate(keys=[], functions=[max(total_revenue#599)], output=[max(total_revenue)#603])
                              +- ShuffleQueryStage 1
                                 +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#4886]
                                    +- *(2) HashAggregate(keys=[], functions=[partial_max(total_revenue#599)], output=[max#630])
                                       +- *(2) HashAggregate(keys=[l_suppkey#606L], functions=[sum(CheckOverflow((promote_precision(cast(l_extendedprice#609 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#610 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[total_revenue#599])
                                          +- AQEShuffleRead coalesced
                                             +- ShuffleQueryStage 0
                                                +- Exchange hashpartitioning(l_suppkey#606L, 200), ENSURE_REQUIREMENTS, [id=#4848]
                                                   +- *(1) HashAggregate(keys=[l_suppkey#606L], functions=[partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#609 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#610 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_suppkey#606L, sum#633, isEmpty#634])
                                                      +- *(1) Project [l_suppkey#606L, l_extendedprice#609, l_discount#610]
                                                         +- *(1) Filter ((isnotnull(l_shipdate#614) AND (l_shipdate#614 >= 1996-09-01)) AND (l_shipdate#614 < 1996-12-01))
                                                            +- *(1) ColumnarToRow
                                                               +- FileScan parquet [l_suppkey#606L,l_extendedprice#609,l_discount#610,l_shipdate#614] Batched: true, DataFilters: [isnotnull(l_shipdate#614), (l_shipdate#614 >= 1996-09-01), (l_shipdate#614 < 1996-12-01)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThanOrEqual(l_shipdate,1996-09-01), LessThan(l_shipdate,1996-12-01)], ReadSchema: struct<l_suppkey:bigint,l_extendedprice:decimal(11,2),l_discount:decimal(11,2),l_shipdate:date>
                           +- == Initial Plan ==
                              HashAggregate(keys=[], functions=[max(total_revenue#599)], output=[max(total_revenue)#603])
                              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#4581]
                                 +- HashAggregate(keys=[], functions=[partial_max(total_revenue#599)], output=[max#630])
                                    +- HashAggregate(keys=[l_suppkey#606L], functions=[sum(CheckOverflow((promote_precision(cast(l_extendedprice#609 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#610 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[total_revenue#599])
                                       +- Exchange hashpartitioning(l_suppkey#606L, 200), ENSURE_REQUIREMENTS, [id=#4577]
                                          +- HashAggregate(keys=[l_suppkey#606L], functions=[partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#609 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#610 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_suppkey#606L, sum#633, isEmpty#634])
                                             +- Project [l_suppkey#606L, l_extendedprice#609, l_discount#610]
                                                +- Filter ((isnotnull(l_shipdate#614) AND (l_shipdate#614 >= 1996-09-01)) AND (l_shipdate#614 < 1996-12-01))
                                                   +- FileScan parquet [l_suppkey#606L,l_extendedprice#609,l_discount#610,l_shipdate#614] Batched: true, DataFilters: [isnotnull(l_shipdate#614), (l_shipdate#614 >= 1996-09-01), (l_shipdate#614 < 1996-12-01)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThanOrEqual(l_shipdate,1996-09-01), LessThan(l_shipdate,1996-12-01)], ReadSchema: struct<l_suppkey:bigint,l_extendedprice:decimal(11,2),l_discount:decimal(11,2),l_shipdate:date>
                     +- HashAggregate(keys=[l_suppkey#76L], functions=[sum(CheckOverflow((promote_precision(cast(l_extendedprice#79 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#80 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_suppkey#76L, sum((l_extendedprice * (1 - l_discount)))#597])
                        +- Exchange hashpartitioning(l_suppkey#76L, 200), ENSURE_REQUIREMENTS, [id=#4593]
                           +- HashAggregate(keys=[l_suppkey#76L], functions=[partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#79 as decimal(12,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#80 as decimal(12,2)))), DecimalType(12,2), true))), DecimalType(24,4), true))], output=[l_suppkey#76L, sum#627, isEmpty#628])
                              +- Project [l_suppkey#76L, l_extendedprice#79, l_discount#80]
                                 +- Filter (((isnotnull(l_shipdate#84) AND (l_shipdate#84 >= 1996-09-01)) AND (l_shipdate#84 < 1996-12-01)) AND isnotnull(l_suppkey#76L))
                                    +- FileScan parquet [l_suppkey#76L,l_extendedprice#79,l_discount#80,l_shipdate#84] Batched: true, DataFilters: [isnotnull(l_shipdate#84), (l_shipdate#84 >= 1996-09-01), (l_shipdate#84 < 1996-12-01), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpch/sf100-parquet/lineitem.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThanOrEqual(l_shipdate,1996-09-01), LessThan(l_shipdate,1996-12-01..., ReadSchema: struct<l_suppkey:bigint,l_extendedprice:decimal(11,2),l_discount:decimal(11,2),l_shipdate:date>
