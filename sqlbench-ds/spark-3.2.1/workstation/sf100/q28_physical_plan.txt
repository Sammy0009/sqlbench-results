AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(18) BroadcastNestedLoopJoin BuildRight, Inner
   :- *(18) BroadcastNestedLoopJoin BuildRight, Inner
   :  :- *(18) BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :- *(18) BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :  :- *(18) BroadcastNestedLoopJoin BuildLeft, Inner
   :  :  :  :  :- BroadcastQueryStage 11
   :  :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#56618]
   :  :  :  :  :     +- *(12) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#676)), count(ss_list_price#676), count(distinct ss_list_price#676)], output=[B1_LP#6837, B1_CNT#6838L, B1_CNTD#6839L])
   :  :  :  :  :        +- ShuffleQueryStage 6
   :  :  :  :  :           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#56271]
   :  :  :  :  :              +- *(7) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#676)), merge_count(ss_list_price#676), partial_count(distinct ss_list_price#676)], output=[sum#7008, count#7009L, count#7011L, count#7014L])
   :  :  :  :  :                 +- *(7) HashAggregate(keys=[ss_list_price#676], functions=[merge_avg(UnscaledValue(ss_list_price#676)), merge_count(ss_list_price#676)], output=[ss_list_price#676, sum#7008, count#7009L, count#7011L])
   :  :  :  :  :                    +- AQEShuffleRead coalesced
   :  :  :  :  :                       +- ShuffleQueryStage 0
   :  :  :  :  :                          +- Exchange hashpartitioning(ss_list_price#676, 200), ENSURE_REQUIREMENTS, [id=#55966]
   :  :  :  :  :                             +- *(1) HashAggregate(keys=[ss_list_price#676], functions=[partial_avg(UnscaledValue(ss_list_price#676)), partial_count(ss_list_price#676)], output=[ss_list_price#676, sum#7008, count#7009L, count#7011L])
   :  :  :  :  :                                +- *(1) Project [ss_list_price#676]
   :  :  :  :  :                                   +- *(1) Filter (((isnotnull(ss_quantity#674) AND (ss_quantity#674 >= 0)) AND (ss_quantity#674 <= 5)) AND ((((ss_list_price#676 >= 19.00) AND (ss_list_price#676 <= 29.00)) OR ((ss_coupon_amt#683 >= 11468.00) AND (ss_coupon_amt#683 <= 12468.00))) OR ((ss_wholesale_cost#675 >= 20.00) AND (ss_wholesale_cost#675 <= 40.00))))
   :  :  :  :  :                                      +- *(1) ColumnarToRow
   :  :  :  :  :                                         +- FileScan parquet [ss_quantity#674,ss_wholesale_cost#675,ss_list_price#676,ss_coupon_amt#683] Batched: true, DataFilters: [isnotnull(ss_quantity#674), (ss_quantity#674 >= 0), (ss_quantity#674 <= 5), ((((ss_list_price#67..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,0), LessThanOrEqual(ss_quantity,5), Or(Or..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  :  :  +- *(18) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#6867)), count(ss_list_price#6867), count(distinct ss_list_price#6867)], output=[B2_LP#6840, B2_CNT#6841L, B2_CNTD#6842L])
   :  :  :  :     +- ShuffleQueryStage 7
   :  :  :  :        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#56378]
   :  :  :  :           +- *(8) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#6867)), merge_count(ss_list_price#6867), partial_count(distinct ss_list_price#6867)], output=[sum#7018, count#7019L, count#7021L, count#7024L])
   :  :  :  :              +- *(8) HashAggregate(keys=[ss_list_price#6867], functions=[merge_avg(UnscaledValue(ss_list_price#6867)), merge_count(ss_list_price#6867)], output=[ss_list_price#6867, sum#7018, count#7019L, count#7021L])
   :  :  :  :                 +- AQEShuffleRead coalesced
   :  :  :  :                    +- ShuffleQueryStage 1
   :  :  :  :                       +- Exchange hashpartitioning(ss_list_price#6867, 200), ENSURE_REQUIREMENTS, [id=#56011]
   :  :  :  :                          +- *(2) HashAggregate(keys=[ss_list_price#6867], functions=[partial_avg(UnscaledValue(ss_list_price#6867)), partial_count(ss_list_price#6867)], output=[ss_list_price#6867, sum#7018, count#7019L, count#7021L])
   :  :  :  :                             +- *(2) Project [ss_list_price#6867]
   :  :  :  :                                +- *(2) Filter (((isnotnull(ss_quantity#6865) AND (ss_quantity#6865 >= 6)) AND (ss_quantity#6865 <= 10)) AND ((((ss_list_price#6867 >= 14.00) AND (ss_list_price#6867 <= 24.00)) OR ((ss_coupon_amt#6874 >= 92.00) AND (ss_coupon_amt#6874 <= 1092.00))) OR ((ss_wholesale_cost#6866 >= 13.00) AND (ss_wholesale_cost#6866 <= 33.00))))
   :  :  :  :                                   +- *(2) ColumnarToRow
   :  :  :  :                                      +- FileScan parquet [ss_quantity#6865,ss_wholesale_cost#6866,ss_list_price#6867,ss_coupon_amt#6874] Batched: true, DataFilters: [isnotnull(ss_quantity#6865), (ss_quantity#6865 >= 6), (ss_quantity#6865 <= 10), ((((ss_list_pric..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,6), LessThanOrEqual(ss_quantity,10), Or(O..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  :  +- BroadcastQueryStage 13
   :  :  :     +- BroadcastExchange IdentityBroadcastMode, [id=#56748]
   :  :  :        +- *(14) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#6890)), count(ss_list_price#6890), count(distinct ss_list_price#6890)], output=[B3_LP#6843, B3_CNT#6844L, B3_CNTD#6845L])
   :  :  :           +- ShuffleQueryStage 8
   :  :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#56445]
   :  :  :                 +- *(9) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#6890)), merge_count(ss_list_price#6890), partial_count(distinct ss_list_price#6890)], output=[sum#7028, count#7029L, count#7031L, count#7034L])
   :  :  :                    +- *(9) HashAggregate(keys=[ss_list_price#6890], functions=[merge_avg(UnscaledValue(ss_list_price#6890)), merge_count(ss_list_price#6890)], output=[ss_list_price#6890, sum#7028, count#7029L, count#7031L])
   :  :  :                       +- AQEShuffleRead coalesced
   :  :  :                          +- ShuffleQueryStage 2
   :  :  :                             +- Exchange hashpartitioning(ss_list_price#6890, 200), ENSURE_REQUIREMENTS, [id=#56058]
   :  :  :                                +- *(3) HashAggregate(keys=[ss_list_price#6890], functions=[partial_avg(UnscaledValue(ss_list_price#6890)), partial_count(ss_list_price#6890)], output=[ss_list_price#6890, sum#7028, count#7029L, count#7031L])
   :  :  :                                   +- *(3) Project [ss_list_price#6890]
   :  :  :                                      +- *(3) Filter (((isnotnull(ss_quantity#6888) AND (ss_quantity#6888 >= 11)) AND (ss_quantity#6888 <= 15)) AND ((((ss_list_price#6890 >= 124.00) AND (ss_list_price#6890 <= 134.00)) OR ((ss_coupon_amt#6897 >= 4023.00) AND (ss_coupon_amt#6897 <= 5023.00))) OR ((ss_wholesale_cost#6889 >= 50.00) AND (ss_wholesale_cost#6889 <= 70.00))))
   :  :  :                                         +- *(3) ColumnarToRow
   :  :  :                                            +- FileScan parquet [ss_quantity#6888,ss_wholesale_cost#6889,ss_list_price#6890,ss_coupon_amt#6897] Batched: true, DataFilters: [isnotnull(ss_quantity#6888), (ss_quantity#6888 >= 11), (ss_quantity#6888 <= 15), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,11), LessThanOrEqual(ss_quantity,15), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  +- BroadcastQueryStage 14
   :  :     +- BroadcastExchange IdentityBroadcastMode, [id=#56821]
   :  :        +- *(15) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#6913)), count(ss_list_price#6913), count(distinct ss_list_price#6913)], output=[B4_LP#6846, B4_CNT#6847L, B4_CNTD#6848L])
   :  :           +- ShuffleQueryStage 9
   :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#56508]
   :  :                 +- *(10) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#6913)), merge_count(ss_list_price#6913), partial_count(distinct ss_list_price#6913)], output=[sum#7038, count#7039L, count#7041L, count#7044L])
   :  :                    +- *(10) HashAggregate(keys=[ss_list_price#6913], functions=[merge_avg(UnscaledValue(ss_list_price#6913)), merge_count(ss_list_price#6913)], output=[ss_list_price#6913, sum#7038, count#7039L, count#7041L])
   :  :                       +- AQEShuffleRead coalesced
   :  :                          +- ShuffleQueryStage 3
   :  :                             +- Exchange hashpartitioning(ss_list_price#6913, 200), ENSURE_REQUIREMENTS, [id=#56105]
   :  :                                +- *(4) HashAggregate(keys=[ss_list_price#6913], functions=[partial_avg(UnscaledValue(ss_list_price#6913)), partial_count(ss_list_price#6913)], output=[ss_list_price#6913, sum#7038, count#7039L, count#7041L])
   :  :                                   +- *(4) Project [ss_list_price#6913]
   :  :                                      +- *(4) Filter (((isnotnull(ss_quantity#6911) AND (ss_quantity#6911 >= 16)) AND (ss_quantity#6911 <= 20)) AND ((((ss_list_price#6913 >= 74.00) AND (ss_list_price#6913 <= 84.00)) OR ((ss_coupon_amt#6920 >= 3534.00) AND (ss_coupon_amt#6920 <= 4534.00))) OR ((ss_wholesale_cost#6912 >= 11.00) AND (ss_wholesale_cost#6912 <= 31.00))))
   :  :                                         +- *(4) ColumnarToRow
   :  :                                            +- FileScan parquet [ss_quantity#6911,ss_wholesale_cost#6912,ss_list_price#6913,ss_coupon_amt#6920] Batched: true, DataFilters: [isnotnull(ss_quantity#6911), (ss_quantity#6911 >= 16), (ss_quantity#6911 <= 20), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,16), LessThanOrEqual(ss_quantity,20), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  +- BroadcastQueryStage 15
   :     +- BroadcastExchange IdentityBroadcastMode, [id=#56892]
   :        +- *(16) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#6936)), count(ss_list_price#6936), count(distinct ss_list_price#6936)], output=[B5_LP#6849, B5_CNT#6850L, B5_CNTD#6851L])
   :           +- ShuffleQueryStage 10
   :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#56567]
   :                 +- *(11) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#6936)), merge_count(ss_list_price#6936), partial_count(distinct ss_list_price#6936)], output=[sum#7048, count#7049L, count#7051L, count#7054L])
   :                    +- *(11) HashAggregate(keys=[ss_list_price#6936], functions=[merge_avg(UnscaledValue(ss_list_price#6936)), merge_count(ss_list_price#6936)], output=[ss_list_price#6936, sum#7048, count#7049L, count#7051L])
   :                       +- AQEShuffleRead coalesced
   :                          +- ShuffleQueryStage 4
   :                             +- Exchange hashpartitioning(ss_list_price#6936, 200), ENSURE_REQUIREMENTS, [id=#56152]
   :                                +- *(5) HashAggregate(keys=[ss_list_price#6936], functions=[partial_avg(UnscaledValue(ss_list_price#6936)), partial_count(ss_list_price#6936)], output=[ss_list_price#6936, sum#7048, count#7049L, count#7051L])
   :                                   +- *(5) Project [ss_list_price#6936]
   :                                      +- *(5) Filter (((isnotnull(ss_quantity#6934) AND (ss_quantity#6934 >= 21)) AND (ss_quantity#6934 <= 25)) AND ((((ss_list_price#6936 >= 173.00) AND (ss_list_price#6936 <= 183.00)) OR ((ss_coupon_amt#6943 >= 6017.00) AND (ss_coupon_amt#6943 <= 7017.00))) OR ((ss_wholesale_cost#6935 >= 45.00) AND (ss_wholesale_cost#6935 <= 65.00))))
   :                                         +- *(5) ColumnarToRow
   :                                            +- FileScan parquet [ss_quantity#6934,ss_wholesale_cost#6935,ss_list_price#6936,ss_coupon_amt#6943] Batched: true, DataFilters: [isnotnull(ss_quantity#6934), (ss_quantity#6934 >= 21), (ss_quantity#6934 <= 25), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,21), LessThanOrEqual(ss_quantity,25), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   +- BroadcastQueryStage 16
      +- BroadcastExchange IdentityBroadcastMode, [id=#56987]
         +- *(17) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#6959)), count(ss_list_price#6959), count(distinct ss_list_price#6959)], output=[B6_LP#6852, B6_CNT#6853L, B6_CNTD#6854L])
            +- ShuffleQueryStage 12
               +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#56664]
                  +- *(13) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#6959)), merge_count(ss_list_price#6959), partial_count(distinct ss_list_price#6959)], output=[sum#7058, count#7059L, count#7061L, count#7064L])
                     +- *(13) HashAggregate(keys=[ss_list_price#6959], functions=[merge_avg(UnscaledValue(ss_list_price#6959)), merge_count(ss_list_price#6959)], output=[ss_list_price#6959, sum#7058, count#7059L, count#7061L])
                        +- AQEShuffleRead coalesced
                           +- ShuffleQueryStage 5
                              +- Exchange hashpartitioning(ss_list_price#6959, 200), ENSURE_REQUIREMENTS, [id=#56199]
                                 +- *(6) HashAggregate(keys=[ss_list_price#6959], functions=[partial_avg(UnscaledValue(ss_list_price#6959)), partial_count(ss_list_price#6959)], output=[ss_list_price#6959, sum#7058, count#7059L, count#7061L])
                                    +- *(6) Project [ss_list_price#6959]
                                       +- *(6) Filter (((isnotnull(ss_quantity#6957) AND (ss_quantity#6957 >= 26)) AND (ss_quantity#6957 <= 30)) AND ((((ss_list_price#6959 >= 2.00) AND (ss_list_price#6959 <= 12.00)) OR ((ss_coupon_amt#6966 >= 16961.00) AND (ss_coupon_amt#6966 <= 17961.00))) OR ((ss_wholesale_cost#6958 >= 18.00) AND (ss_wholesale_cost#6958 <= 38.00))))
                                          +- *(6) ColumnarToRow
                                             +- FileScan parquet [ss_quantity#6957,ss_wholesale_cost#6958,ss_list_price#6959,ss_coupon_amt#6966] Batched: true, DataFilters: [isnotnull(ss_quantity#6957), (ss_quantity#6957 >= 26), (ss_quantity#6957 <= 30), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,26), LessThanOrEqual(ss_quantity,30), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
+- == Initial Plan ==
   BroadcastNestedLoopJoin BuildRight, Inner
   :- BroadcastNestedLoopJoin BuildRight, Inner
   :  :- BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :  :  :- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#676)), count(ss_list_price#676), count(distinct ss_list_price#676)], output=[B1_LP#6837, B1_CNT#6838L, B1_CNTD#6839L])
   :  :  :  :  :  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#55894]
   :  :  :  :  :     +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#676)), merge_count(ss_list_price#676), partial_count(distinct ss_list_price#676)], output=[sum#7008, count#7009L, count#7011L, count#7014L])
   :  :  :  :  :        +- HashAggregate(keys=[ss_list_price#676], functions=[merge_avg(UnscaledValue(ss_list_price#676)), merge_count(ss_list_price#676)], output=[ss_list_price#676, sum#7008, count#7009L, count#7011L])
   :  :  :  :  :           +- Exchange hashpartitioning(ss_list_price#676, 200), ENSURE_REQUIREMENTS, [id=#55890]
   :  :  :  :  :              +- HashAggregate(keys=[ss_list_price#676], functions=[partial_avg(UnscaledValue(ss_list_price#676)), partial_count(ss_list_price#676)], output=[ss_list_price#676, sum#7008, count#7009L, count#7011L])
   :  :  :  :  :                 +- Project [ss_list_price#676]
   :  :  :  :  :                    +- Filter (((isnotnull(ss_quantity#674) AND (ss_quantity#674 >= 0)) AND (ss_quantity#674 <= 5)) AND ((((ss_list_price#676 >= 19.00) AND (ss_list_price#676 <= 29.00)) OR ((ss_coupon_amt#683 >= 11468.00) AND (ss_coupon_amt#683 <= 12468.00))) OR ((ss_wholesale_cost#675 >= 20.00) AND (ss_wholesale_cost#675 <= 40.00))))
   :  :  :  :  :                       +- FileScan parquet [ss_quantity#674,ss_wholesale_cost#675,ss_list_price#676,ss_coupon_amt#683] Batched: true, DataFilters: [isnotnull(ss_quantity#674), (ss_quantity#674 >= 0), (ss_quantity#674 <= 5), ((((ss_list_price#67..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,0), LessThanOrEqual(ss_quantity,5), Or(Or..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#55903]
   :  :  :  :     +- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#6867)), count(ss_list_price#6867), count(distinct ss_list_price#6867)], output=[B2_LP#6840, B2_CNT#6841L, B2_CNTD#6842L])
   :  :  :  :        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#55900]
   :  :  :  :           +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#6867)), merge_count(ss_list_price#6867), partial_count(distinct ss_list_price#6867)], output=[sum#7018, count#7019L, count#7021L, count#7024L])
   :  :  :  :              +- HashAggregate(keys=[ss_list_price#6867], functions=[merge_avg(UnscaledValue(ss_list_price#6867)), merge_count(ss_list_price#6867)], output=[ss_list_price#6867, sum#7018, count#7019L, count#7021L])
   :  :  :  :                 +- Exchange hashpartitioning(ss_list_price#6867, 200), ENSURE_REQUIREMENTS, [id=#55896]
   :  :  :  :                    +- HashAggregate(keys=[ss_list_price#6867], functions=[partial_avg(UnscaledValue(ss_list_price#6867)), partial_count(ss_list_price#6867)], output=[ss_list_price#6867, sum#7018, count#7019L, count#7021L])
   :  :  :  :                       +- Project [ss_list_price#6867]
   :  :  :  :                          +- Filter (((isnotnull(ss_quantity#6865) AND (ss_quantity#6865 >= 6)) AND (ss_quantity#6865 <= 10)) AND ((((ss_list_price#6867 >= 14.00) AND (ss_list_price#6867 <= 24.00)) OR ((ss_coupon_amt#6874 >= 92.00) AND (ss_coupon_amt#6874 <= 1092.00))) OR ((ss_wholesale_cost#6866 >= 13.00) AND (ss_wholesale_cost#6866 <= 33.00))))
   :  :  :  :                             +- FileScan parquet [ss_quantity#6865,ss_wholesale_cost#6866,ss_list_price#6867,ss_coupon_amt#6874] Batched: true, DataFilters: [isnotnull(ss_quantity#6865), (ss_quantity#6865 >= 6), (ss_quantity#6865 <= 10), ((((ss_list_pric..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,6), LessThanOrEqual(ss_quantity,10), Or(O..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#55912]
   :  :  :     +- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#6890)), count(ss_list_price#6890), count(distinct ss_list_price#6890)], output=[B3_LP#6843, B3_CNT#6844L, B3_CNTD#6845L])
   :  :  :        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#55909]
   :  :  :           +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#6890)), merge_count(ss_list_price#6890), partial_count(distinct ss_list_price#6890)], output=[sum#7028, count#7029L, count#7031L, count#7034L])
   :  :  :              +- HashAggregate(keys=[ss_list_price#6890], functions=[merge_avg(UnscaledValue(ss_list_price#6890)), merge_count(ss_list_price#6890)], output=[ss_list_price#6890, sum#7028, count#7029L, count#7031L])
   :  :  :                 +- Exchange hashpartitioning(ss_list_price#6890, 200), ENSURE_REQUIREMENTS, [id=#55905]
   :  :  :                    +- HashAggregate(keys=[ss_list_price#6890], functions=[partial_avg(UnscaledValue(ss_list_price#6890)), partial_count(ss_list_price#6890)], output=[ss_list_price#6890, sum#7028, count#7029L, count#7031L])
   :  :  :                       +- Project [ss_list_price#6890]
   :  :  :                          +- Filter (((isnotnull(ss_quantity#6888) AND (ss_quantity#6888 >= 11)) AND (ss_quantity#6888 <= 15)) AND ((((ss_list_price#6890 >= 124.00) AND (ss_list_price#6890 <= 134.00)) OR ((ss_coupon_amt#6897 >= 4023.00) AND (ss_coupon_amt#6897 <= 5023.00))) OR ((ss_wholesale_cost#6889 >= 50.00) AND (ss_wholesale_cost#6889 <= 70.00))))
   :  :  :                             +- FileScan parquet [ss_quantity#6888,ss_wholesale_cost#6889,ss_list_price#6890,ss_coupon_amt#6897] Batched: true, DataFilters: [isnotnull(ss_quantity#6888), (ss_quantity#6888 >= 11), (ss_quantity#6888 <= 15), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,11), LessThanOrEqual(ss_quantity,15), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#55921]
   :  :     +- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#6913)), count(ss_list_price#6913), count(distinct ss_list_price#6913)], output=[B4_LP#6846, B4_CNT#6847L, B4_CNTD#6848L])
   :  :        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#55918]
   :  :           +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#6913)), merge_count(ss_list_price#6913), partial_count(distinct ss_list_price#6913)], output=[sum#7038, count#7039L, count#7041L, count#7044L])
   :  :              +- HashAggregate(keys=[ss_list_price#6913], functions=[merge_avg(UnscaledValue(ss_list_price#6913)), merge_count(ss_list_price#6913)], output=[ss_list_price#6913, sum#7038, count#7039L, count#7041L])
   :  :                 +- Exchange hashpartitioning(ss_list_price#6913, 200), ENSURE_REQUIREMENTS, [id=#55914]
   :  :                    +- HashAggregate(keys=[ss_list_price#6913], functions=[partial_avg(UnscaledValue(ss_list_price#6913)), partial_count(ss_list_price#6913)], output=[ss_list_price#6913, sum#7038, count#7039L, count#7041L])
   :  :                       +- Project [ss_list_price#6913]
   :  :                          +- Filter (((isnotnull(ss_quantity#6911) AND (ss_quantity#6911 >= 16)) AND (ss_quantity#6911 <= 20)) AND ((((ss_list_price#6913 >= 74.00) AND (ss_list_price#6913 <= 84.00)) OR ((ss_coupon_amt#6920 >= 3534.00) AND (ss_coupon_amt#6920 <= 4534.00))) OR ((ss_wholesale_cost#6912 >= 11.00) AND (ss_wholesale_cost#6912 <= 31.00))))
   :  :                             +- FileScan parquet [ss_quantity#6911,ss_wholesale_cost#6912,ss_list_price#6913,ss_coupon_amt#6920] Batched: true, DataFilters: [isnotnull(ss_quantity#6911), (ss_quantity#6911 >= 16), (ss_quantity#6911 <= 20), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,16), LessThanOrEqual(ss_quantity,20), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  +- BroadcastExchange IdentityBroadcastMode, [id=#55930]
   :     +- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#6936)), count(ss_list_price#6936), count(distinct ss_list_price#6936)], output=[B5_LP#6849, B5_CNT#6850L, B5_CNTD#6851L])
   :        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#55927]
   :           +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#6936)), merge_count(ss_list_price#6936), partial_count(distinct ss_list_price#6936)], output=[sum#7048, count#7049L, count#7051L, count#7054L])
   :              +- HashAggregate(keys=[ss_list_price#6936], functions=[merge_avg(UnscaledValue(ss_list_price#6936)), merge_count(ss_list_price#6936)], output=[ss_list_price#6936, sum#7048, count#7049L, count#7051L])
   :                 +- Exchange hashpartitioning(ss_list_price#6936, 200), ENSURE_REQUIREMENTS, [id=#55923]
   :                    +- HashAggregate(keys=[ss_list_price#6936], functions=[partial_avg(UnscaledValue(ss_list_price#6936)), partial_count(ss_list_price#6936)], output=[ss_list_price#6936, sum#7048, count#7049L, count#7051L])
   :                       +- Project [ss_list_price#6936]
   :                          +- Filter (((isnotnull(ss_quantity#6934) AND (ss_quantity#6934 >= 21)) AND (ss_quantity#6934 <= 25)) AND ((((ss_list_price#6936 >= 173.00) AND (ss_list_price#6936 <= 183.00)) OR ((ss_coupon_amt#6943 >= 6017.00) AND (ss_coupon_amt#6943 <= 7017.00))) OR ((ss_wholesale_cost#6935 >= 45.00) AND (ss_wholesale_cost#6935 <= 65.00))))
   :                             +- FileScan parquet [ss_quantity#6934,ss_wholesale_cost#6935,ss_list_price#6936,ss_coupon_amt#6943] Batched: true, DataFilters: [isnotnull(ss_quantity#6934), (ss_quantity#6934 >= 21), (ss_quantity#6934 <= 25), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,21), LessThanOrEqual(ss_quantity,25), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   +- BroadcastExchange IdentityBroadcastMode, [id=#55939]
      +- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#6959)), count(ss_list_price#6959), count(distinct ss_list_price#6959)], output=[B6_LP#6852, B6_CNT#6853L, B6_CNTD#6854L])
         +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#55936]
            +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#6959)), merge_count(ss_list_price#6959), partial_count(distinct ss_list_price#6959)], output=[sum#7058, count#7059L, count#7061L, count#7064L])
               +- HashAggregate(keys=[ss_list_price#6959], functions=[merge_avg(UnscaledValue(ss_list_price#6959)), merge_count(ss_list_price#6959)], output=[ss_list_price#6959, sum#7058, count#7059L, count#7061L])
                  +- Exchange hashpartitioning(ss_list_price#6959, 200), ENSURE_REQUIREMENTS, [id=#55932]
                     +- HashAggregate(keys=[ss_list_price#6959], functions=[partial_avg(UnscaledValue(ss_list_price#6959)), partial_count(ss_list_price#6959)], output=[ss_list_price#6959, sum#7058, count#7059L, count#7061L])
                        +- Project [ss_list_price#6959]
                           +- Filter (((isnotnull(ss_quantity#6957) AND (ss_quantity#6957 >= 26)) AND (ss_quantity#6957 <= 30)) AND ((((ss_list_price#6959 >= 2.00) AND (ss_list_price#6959 <= 12.00)) OR ((ss_coupon_amt#6966 >= 16961.00) AND (ss_coupon_amt#6966 <= 17961.00))) OR ((ss_wholesale_cost#6958 >= 18.00) AND (ss_wholesale_cost#6958 <= 38.00))))
                              +- FileScan parquet [ss_quantity#6957,ss_wholesale_cost#6958,ss_list_price#6959,ss_coupon_amt#6966] Batched: true, DataFilters: [isnotnull(ss_quantity#6957), (ss_quantity#6957 >= 26), (ss_quantity#6957 <= 30), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,26), LessThanOrEqual(ss_quantity,30), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
