AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   GpuColumnarToRow false
   +- GpuTopN(limit=100, orderBy=[w_state#780 ASC NULLS FIRST,i_item_id#669 ASC NULLS FIRST], output=[w_state#780,i_item_id#669,sales_before#15284,sales_after#15285])
      +- GpuShuffleCoalesce 2147483647
         +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#274648]
            +- GpuTopN(limit=100, orderBy=[w_state#780 ASC NULLS FIRST,i_item_id#669 ASC NULLS FIRST], output=[w_state#780,i_item_id#669,sales_before#15284,sales_after#15285])
               +- GpuRowToColumnar targetsize(2147483647)
                  +- *(2) HashAggregate(keys=[w_state#780, i_item_id#669], functions=[sum(CASE WHEN (d_date#614 < 2002-02-27) THEN CheckOverflow((promote_precision(cast(cs_sales_price#565 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#369 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END), sum(CASE WHEN (d_date#614 >= 2002-02-27) THEN CheckOverflow((promote_precision(cast(cs_sales_price#565 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#369 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)], output=[w_state#780, i_item_id#669, sales_before#15284, sales_after#15285])
                     +- AQEShuffleRead coalesced
                        +- ShuffleQueryStage 8
                           +- Exchange hashpartitioning(w_state#780, i_item_id#669, 200), ENSURE_REQUIREMENTS, [id=#274574]
                              +- *(1) HashAggregate(keys=[w_state#780, i_item_id#669], functions=[partial_sum(CASE WHEN (d_date#614 < 2002-02-27) THEN CheckOverflow((promote_precision(cast(cs_sales_price#565 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#369 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_date#614 >= 2002-02-27) THEN CheckOverflow((promote_precision(cast(cs_sales_price#565 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#369 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)], output=[w_state#780, i_item_id#669, sum#15296, isEmpty#15297, sum#15298, isEmpty#15299])
                                 +- GpuColumnarToRow false
                                    +- GpuProject [cs_sales_price#565, cr_refunded_cash#369, w_state#780, i_item_id#669, d_date#614], true
                                       +- GpuShuffledHashJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner, GpuBuildRight, false
                                          :- GpuShuffleCoalesce 2147483647
                                          :  +- GpuCustomShuffleReader coalesced
                                          :     +- ShuffleQueryStage 7
                                          :        +- GpuColumnarExchange gpuhashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#274427]
                                          :           +- GpuProject [cs_sold_date_sk#544, cs_sales_price#565, cr_refunded_cash#369, w_state#780, i_item_id#669], true
                                          :              +- GpuShuffledHashJoin [cs_item_sk#559], [i_item_sk#668], Inner, GpuBuildRight, false
                                          :                 :- GpuShuffleCoalesce 2147483647
                                          :                 :  +- GpuCustomShuffleReader coalesced
                                          :                 :     +- ShuffleQueryStage 6
                                          :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#274252]
                                          :                 :           +- GpuProject [cs_sold_date_sk#544, cs_item_sk#559, cs_sales_price#565, cr_refunded_cash#369, w_state#780], true
                                          :                 :              +- GpuShuffledHashJoin [cs_warehouse_sk#558], [w_warehouse_sk#770], Inner, GpuBuildRight, false
                                          :                 :                 :- GpuShuffleCoalesce 2147483647
                                          :                 :                 :  +- GpuCustomShuffleReader coalesced
                                          :                 :                 :     +- ShuffleQueryStage 5
                                          :                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_warehouse_sk#558, 200), ENSURE_REQUIREMENTS, [id=#273921]
                                          :                 :                 :           +- GpuProject [cs_sold_date_sk#544, cs_warehouse_sk#558, cs_item_sk#559, cs_sales_price#565, cr_refunded_cash#369], true
                                          :                 :                 :              +- GpuShuffledHashJoin [cs_order_number#561L, cs_item_sk#559], [cr_order_number#362L, cr_item_sk#348], LeftOuter, GpuBuildRight, false
                                          :                 :                 :                 :- GpuShuffleCoalesce 2147483647
                                          :                 :                 :                 :  +- GpuCustomShuffleReader coalesced
                                          :                 :                 :                 :     +- ShuffleQueryStage 0
                                          :                 :                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_order_number#561L, cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#273241]
                                          :                 :                 :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                          :                 :                 :                 :              +- GpuFilter ((gpuisnotnull(cs_warehouse_sk#558) AND gpuisnotnull(cs_item_sk#559)) AND gpuisnotnull(cs_sold_date_sk#544)), true
                                          :                 :                 :                 :                 +- GpuFileGpuScan parquet [cs_sold_date_sk#544,cs_warehouse_sk#558,cs_item_sk#559,cs_order_number#561L,cs_sales_price#565] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#558), isnotnull(cs_item_sk#559), isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_sales_pri...
                                          :                 :                 :                 +- GpuCustomShuffleReader coalesced
                                          :                 :                 :                    +- ShuffleQueryStage 1
                                          :                 :                 :                       +- GpuColumnarExchange gpuhashpartitioning(cr_order_number#362L, cr_item_sk#348, 200), ENSURE_REQUIREMENTS, [id=#273269]
                                          :                 :                 :                          +- GpuCoalesceBatches targetsize(2147483647)
                                          :                 :                 :                             +- GpuFilter (gpuisnotnull(cr_order_number#362L) AND gpuisnotnull(cr_item_sk#348)), true
                                          :                 :                 :                                +- GpuFileGpuScan parquet [cr_item_sk#348,cr_order_number#362L,cr_refunded_cash#369] Batched: true, DataFilters: [isnotnull(cr_order_number#362L), isnotnull(cr_item_sk#348)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_refunded_cash:decimal(7,2)>
                                          :                 :                 +- GpuCustomShuffleReader coalesced
                                          :                 :                    +- ShuffleQueryStage 2
                                          :                 :                       +- GpuColumnarExchange gpuhashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#273301]
                                          :                 :                          +- GpuCoalesceBatches targetsize(2147483647)
                                          :                 :                             +- GpuFilter gpuisnotnull(w_warehouse_sk#770), true
                                          :                 :                                +- GpuFileGpuScan parquet [w_warehouse_sk#770,w_state#780] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_state:string>
                                          :                 +- GpuCustomShuffleReader coalesced
                                          :                    +- ShuffleQueryStage 3
                                          :                       +- GpuColumnarExchange gpuhashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#273342]
                                          :                          +- GpuProject [i_item_sk#668, i_item_id#669], true
                                          :                             +- GpuCoalesceBatches targetsize(2147483647)
                                          :                                +- GpuFilter (((gpuisnotnull(i_current_price#673) AND (i_current_price#673 >= 0.99)) AND (i_current_price#673 <= 1.49)) AND gpuisnotnull(i_item_sk#668)), true
                                          :                                   +- GpuFileGpuScan parquet [i_item_sk#668,i_item_id#669,i_current_price#673] Batched: true, DataFilters: [isnotnull(i_current_price#673), (i_current_price#673 >= 0.99), (i_current_price#673 <= 1.49), is..., Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>
                                          +- GpuCustomShuffleReader coalesced
                                             +- ShuffleQueryStage 4
                                                +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#273376]
                                                   +- GpuCoalesceBatches targetsize(2147483647)
                                                      +- GpuFilter (((gpuisnotnull(d_date#614) AND (d_date#614 >= 11715)) AND (d_date#614 <= 11775)) AND gpuisnotnull(d_date_sk#612)), true
                                                         +- GpuFileGpuScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2002-01-28), (d_date#614 <= 2002-03-29), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2002-01-28), LessThanOrEqual(d_date,2002-03-29), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[w_state#780 ASC NULLS FIRST,i_item_id#669 ASC NULLS FIRST], output=[w_state#780,i_item_id#669,sales_before#15284,sales_after#15285])
   +- HashAggregate(keys=[w_state#780, i_item_id#669], functions=[sum(CASE WHEN (d_date#614 < 2002-02-27) THEN CheckOverflow((promote_precision(cast(cs_sales_price#565 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#369 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END), sum(CASE WHEN (d_date#614 >= 2002-02-27) THEN CheckOverflow((promote_precision(cast(cs_sales_price#565 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#369 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)], output=[w_state#780, i_item_id#669, sales_before#15284, sales_after#15285])
      +- Exchange hashpartitioning(w_state#780, i_item_id#669, 200), ENSURE_REQUIREMENTS, [id=#272726]
         +- HashAggregate(keys=[w_state#780, i_item_id#669], functions=[partial_sum(CASE WHEN (d_date#614 < 2002-02-27) THEN CheckOverflow((promote_precision(cast(cs_sales_price#565 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#369 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_date#614 >= 2002-02-27) THEN CheckOverflow((promote_precision(cast(cs_sales_price#565 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#369 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)], output=[w_state#780, i_item_id#669, sum#15296, isEmpty#15297, sum#15298, isEmpty#15299])
            +- Project [cs_sales_price#565, cr_refunded_cash#369, w_state#780, i_item_id#669, d_date#614]
               +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
                  :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#272718]
                  :     +- Project [cs_sold_date_sk#544, cs_sales_price#565, cr_refunded_cash#369, w_state#780, i_item_id#669]
                  :        +- SortMergeJoin [cs_item_sk#559], [i_item_sk#668], Inner
                  :           :- Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
                  :           :  +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#272710]
                  :           :     +- Project [cs_sold_date_sk#544, cs_item_sk#559, cs_sales_price#565, cr_refunded_cash#369, w_state#780]
                  :           :        +- SortMergeJoin [cs_warehouse_sk#558], [w_warehouse_sk#770], Inner
                  :           :           :- Sort [cs_warehouse_sk#558 ASC NULLS FIRST], false, 0
                  :           :           :  +- Exchange hashpartitioning(cs_warehouse_sk#558, 200), ENSURE_REQUIREMENTS, [id=#272702]
                  :           :           :     +- Project [cs_sold_date_sk#544, cs_warehouse_sk#558, cs_item_sk#559, cs_sales_price#565, cr_refunded_cash#369]
                  :           :           :        +- SortMergeJoin [cs_order_number#561L, cs_item_sk#559], [cr_order_number#362L, cr_item_sk#348], LeftOuter
                  :           :           :           :- Sort [cs_order_number#561L ASC NULLS FIRST, cs_item_sk#559 ASC NULLS FIRST], false, 0
                  :           :           :           :  +- Exchange hashpartitioning(cs_order_number#561L, cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#272694]
                  :           :           :           :     +- Filter ((isnotnull(cs_warehouse_sk#558) AND isnotnull(cs_item_sk#559)) AND isnotnull(cs_sold_date_sk#544))
                  :           :           :           :        +- FileScan parquet [cs_sold_date_sk#544,cs_warehouse_sk#558,cs_item_sk#559,cs_order_number#561L,cs_sales_price#565] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#558), isnotnull(cs_item_sk#559), isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_sales_pri...
                  :           :           :           +- Sort [cr_order_number#362L ASC NULLS FIRST, cr_item_sk#348 ASC NULLS FIRST], false, 0
                  :           :           :              +- Exchange hashpartitioning(cr_order_number#362L, cr_item_sk#348, 200), ENSURE_REQUIREMENTS, [id=#272695]
                  :           :           :                 +- Filter (isnotnull(cr_order_number#362L) AND isnotnull(cr_item_sk#348))
                  :           :           :                    +- FileScan parquet [cr_item_sk#348,cr_order_number#362L,cr_refunded_cash#369] Batched: true, DataFilters: [isnotnull(cr_order_number#362L), isnotnull(cr_item_sk#348)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_refunded_cash:decimal(7,2)>
                  :           :           +- Sort [w_warehouse_sk#770 ASC NULLS FIRST], false, 0
                  :           :              +- Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#272703]
                  :           :                 +- Filter isnotnull(w_warehouse_sk#770)
                  :           :                    +- FileScan parquet [w_warehouse_sk#770,w_state#780] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_state:string>
                  :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                  :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#272711]
                  :                 +- Project [i_item_sk#668, i_item_id#669]
                  :                    +- Filter (((isnotnull(i_current_price#673) AND (i_current_price#673 >= 0.99)) AND (i_current_price#673 <= 1.49)) AND isnotnull(i_item_sk#668))
                  :                       +- FileScan parquet [i_item_sk#668,i_item_id#669,i_current_price#673] Batched: true, DataFilters: [isnotnull(i_current_price#673), (i_current_price#673 >= 0.99), (i_current_price#673 <= 1.49), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>
                  +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                     +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#272719]
                        +- Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2002-01-28)) AND (d_date#614 <= 2002-03-29)) AND isnotnull(d_date_sk#612))
                           +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2002-01-28), (d_date#614 <= 2002-03-29), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2002-01-28), LessThanOrEqual(d_date,2002-03-29), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
