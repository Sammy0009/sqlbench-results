AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   GpuColumnarToRow false
   +- GpuTopN(limit=100, orderBy=[customer_id#1638 ASC NULLS FIRST,customer_first_name#1639 ASC NULLS FIRST,customer_last_name#1640 ASC NULLS FIRST,customer_login#1643 ASC NULLS FIRST], output=[customer_id#1638,customer_first_name#1639,customer_last_name#1640,customer_login#1643])
      +- GpuShuffleCoalesce 2147483647
         +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#21663]
            +- GpuTopN(limit=100, orderBy=[customer_id#1638 ASC NULLS FIRST,customer_first_name#1639 ASC NULLS FIRST,customer_last_name#1640 ASC NULLS FIRST,customer_login#1643 ASC NULLS FIRST], output=[customer_id#1638,customer_first_name#1639,customer_last_name#1640,customer_login#1643])
               +- GpuProject [customer_id#1638, customer_first_name#1639, customer_last_name#1640, customer_login#1643], true
                  +- GpuCoalesceBatches targetsize(2147483647)
                     +- GpuFilter (CASE WHEN (year_total#2168 > 0.000000) THEN (gpupromoteprecision(year_total#1666) / gpupromoteprecision(year_total#2168)) END > CASE WHEN (year_total#2646 > 0.000000) THEN (gpupromoteprecision(year_total#1686) / gpupromoteprecision(year_total#2646)) END), true
                        +- GpuShuffledHashJoin [customer_id#1513], [customer_id#1678], Inner, GpuBuildRight, false
                           :- GpuProject [customer_id#1513, customer_id#1638, customer_first_name#1639, customer_last_name#1640, customer_login#1643, year_total#2168, year_total#1666, year_total#2646], true
                           :  +- GpuShuffledHashJoin [customer_id#1513], [customer_id#2638], Inner, GpuBuildRight, false
                           :     :- GpuProject [customer_id#1513, customer_id#1638, customer_first_name#1639, customer_last_name#1640, customer_login#1643, year_total#2168, year_total#1666], true
                           :     :  +- GpuCoalesceBatches targetsize(2147483647)
                           :     :     +- GpuFilter (CASE WHEN (year_total#2168 > 0.000000) THEN (gpupromoteprecision(year_total#1666) / gpupromoteprecision(year_total#2168)) END > CASE WHEN (year_total#1521 > 0.000000) THEN (gpupromoteprecision(year_total#1646) / gpupromoteprecision(year_total#1521)) END), true
                           :     :        +- GpuShuffledHashJoin [customer_id#1513], [customer_id#1658], Inner, GpuBuildRight, false
                           :     :           :- GpuProject [customer_id#1513, year_total#1521, customer_id#1638, customer_first_name#1639, customer_last_name#1640, customer_login#1643, year_total#1646, year_total#2168], true
                           :     :           :  +- GpuShuffledHashJoin [customer_id#1513], [customer_id#2160], Inner, GpuBuildRight, false
                           :     :           :     :- GpuShuffledHashJoin [customer_id#1513], [customer_id#1638], Inner, GpuBuildRight, false
                           :     :           :     :  :- GpuShuffleCoalesce 2147483647
                           :     :           :     :  :  +- GpuCustomShuffleReader coalesced
                           :     :           :     :  :     +- ShuffleQueryStage 42
                           :     :           :     :  :        +- GpuColumnarExchange gpuhashpartitioning(customer_id#1513, 200), ENSURE_REQUIREMENTS, [id=#19641]
                           :     :           :     :  :           +- GpuCoalesceBatches targetsize(2147483647)
                           :     :           :     :  :              +- GpuFilter (gpuisnotnull(year_total#1521) AND (year_total#1521 > 0.000000)), true
                           :     :           :     :  :                 +- GpuRowToColumnar targetsize(2147483647)
                           :     :           :     :  :                    +- *(7) HashAggregate(keys=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#269 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#268 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#266 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#267 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1513, year_total#1521])
                           :     :           :     :  :                       +- AQEShuffleRead coalesced
                           :     :           :     :  :                          +- ShuffleQueryStage 36
                           :     :           :     :  :                             +- Exchange hashpartitioning(c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618, 200), ENSURE_REQUIREMENTS, [id=#17294]
                           :     :           :     :  :                                +- *(1) HashAggregate(keys=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#269 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#268 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#266 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#267 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618, sum#2989, isEmpty#2990])
                           :     :           :     :  :                                   +- GpuColumnarToRow false
                           :     :           :     :  :                                      +- GpuProject [ss_ext_discount_amt#266, ss_ext_sales_price#267, ss_ext_wholesale_cost#268, ss_ext_list_price#269, d_year#618, c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416], true
                           :     :           :     :  :                                         +- GpuShuffledHashJoin [ss_customer_sk#255], [c_customer_sk#400], Inner, GpuBuildRight, false
                           :     :           :     :  :                                            :- GpuShuffleCoalesce 2147483647
                           :     :           :     :  :                                            :  +- GpuCustomShuffleReader coalesced
                           :     :           :     :  :                                            :     +- ShuffleQueryStage 30
                           :     :           :     :  :                                            :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#14204]
                           :     :           :     :  :                                            :           +- GpuProject [ss_customer_sk#255, ss_ext_discount_amt#266, ss_ext_sales_price#267, ss_ext_wholesale_cost#268, ss_ext_list_price#269, d_year#618], true
                           :     :           :     :  :                                            :              +- GpuShuffledHashJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner, GpuBuildRight, false
                           :     :           :     :  :                                            :                 :- GpuShuffleCoalesce 2147483647
                           :     :           :     :  :                                            :                 :  +- GpuCustomShuffleReader coalesced
                           :     :           :     :  :                                            :                 :     +- ShuffleQueryStage 0
                           :     :           :     :  :                                            :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#9453]
                           :     :           :     :  :                                            :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                           :     :           :     :  :                                            :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#252) AND gpuisnotnull(ss_customer_sk#255)), true
                           :     :           :     :  :                                            :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#252,ss_customer_sk#255,ss_ext_discount_amt#266,ss_ext_sales_price#267,ss_ext_wholesale_cost#268,ss_ext_list_price#269] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_customer_sk#255)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price...
                           :     :           :     :  :                                            :                 +- GpuCustomShuffleReader coalesced
                           :     :           :     :  :                                            :                    +- ShuffleQueryStage 1
                           :     :           :     :  :                                            :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#9481]
                           :     :           :     :  :                                            :                          +- GpuCoalesceBatches targetsize(2147483647)
                           :     :           :     :  :                                            :                             +- GpuFilter ((gpuisnotnull(d_year#618) AND (d_year#618 = 2001)) AND gpuisnotnull(d_date_sk#612)), true
                           :     :           :     :  :                                            :                                +- GpuFileGpuScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2001), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                           :     :           :     :  :                                            +- GpuCustomShuffleReader coalesced
                           :     :           :     :  :                                               +- ShuffleQueryStage 2
                           :     :           :     :  :                                                  +- GpuColumnarExchange gpuhashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#9513]
                           :     :           :     :  :                                                     +- GpuCoalesceBatches targetsize(2147483647)
                           :     :           :     :  :                                                        +- GpuFilter (gpuisnotnull(c_customer_sk#400) AND gpuisnotnull(c_customer_id#401)), true
                           :     :           :     :  :                                                           +- GpuFileGpuScan parquet [c_customer_sk#400,c_customer_id#401,c_first_name#408,c_last_name#409,c_preferred_cust_flag#410,c_birth_country#414,c_login#415,c_email_address#416] Batched: true, DataFilters: [isnotnull(c_customer_sk#400), isnotnull(c_customer_id#401)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
                           :     :           :     :  +- GpuCoalesceBatches RequireSingleBatchWithFilter
                           :     :           :     :     +- GpuRowToColumnar targetsize(2147483647)
                           :     :           :     :        +- AQEShuffleRead coalesced
                           :     :           :     :           +- ShuffleQueryStage 44
                           :     :           :     :              +- Exchange hashpartitioning(customer_id#1638, 200), ENSURE_REQUIREMENTS, [id=#20091]
                           :     :           :     :                 +- *(9) HashAggregate(keys=[c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708, d_year#1739], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1727 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1726 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1724 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1725 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1638, customer_first_name#1639, customer_last_name#1640, customer_login#1643, year_total#1646])
                           :     :           :     :                    +- AQEShuffleRead coalesced
                           :     :           :     :                       +- ShuffleQueryStage 37
                           :     :           :     :                          +- Exchange hashpartitioning(c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708, d_year#1739, 200), ENSURE_REQUIREMENTS, [id=#17826]
                           :     :           :     :                             +- *(2) HashAggregate(keys=[c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708, d_year#1739], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1727 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1726 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1724 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1725 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708, d_year#1739, sum#2993, isEmpty#2994])
                           :     :           :     :                                +- GpuColumnarToRow false
                           :     :           :     :                                   +- GpuProject [ss_ext_discount_amt#1724, ss_ext_sales_price#1725, ss_ext_wholesale_cost#1726, ss_ext_list_price#1727, d_year#1739, c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708], true
                           :     :           :     :                                      +- GpuShuffledHashJoin [ss_customer_sk#1713], [c_customer_sk#1692], Inner, GpuBuildRight, false
                           :     :           :     :                                         :- GpuShuffleCoalesce 2147483647
                           :     :           :     :                                         :  +- GpuCustomShuffleReader coalesced
                           :     :           :     :                                         :     +- ShuffleQueryStage 31
                           :     :           :     :                                         :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#1713, 200), ENSURE_REQUIREMENTS, [id=#14275]
                           :     :           :     :                                         :           +- GpuProject [ss_customer_sk#1713, ss_ext_discount_amt#1724, ss_ext_sales_price#1725, ss_ext_wholesale_cost#1726, ss_ext_list_price#1727, d_year#1739], true
                           :     :           :     :                                         :              +- GpuShuffledHashJoin [ss_sold_date_sk#1710], [d_date_sk#1733], Inner, GpuBuildRight, false
                           :     :           :     :                                         :                 :- GpuShuffleCoalesce 2147483647
                           :     :           :     :                                         :                 :  +- GpuCustomShuffleReader coalesced
                           :     :           :     :                                         :                 :     +- ShuffleQueryStage 4
                           :     :           :     :                                         :                 :        +- ReusedExchange [ss_sold_date_sk#1710, ss_customer_sk#1713, ss_ext_discount_amt#1724, ss_ext_sales_price#1725, ss_ext_wholesale_cost#1726, ss_ext_list_price#1727], GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#9453]
                           :     :           :     :                                         :                 +- GpuCustomShuffleReader coalesced
                           :     :           :     :                                         :                    +- ShuffleQueryStage 5
                           :     :           :     :                                         :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#1733, 200), ENSURE_REQUIREMENTS, [id=#9620]
                           :     :           :     :                                         :                          +- GpuCoalesceBatches targetsize(2147483647)
                           :     :           :     :                                         :                             +- GpuFilter ((gpuisnotnull(d_year#1739) AND (d_year#1739 = 2002)) AND gpuisnotnull(d_date_sk#1733)), true
                           :     :           :     :                                         :                                +- GpuFileGpuScan parquet [d_date_sk#1733,d_year#1739] Batched: true, DataFilters: [isnotnull(d_year#1739), (d_year#1739 = 2002), isnotnull(d_date_sk#1733)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                           :     :           :     :                                         +- GpuCustomShuffleReader coalesced
                           :     :           :     :                                            +- ShuffleQueryStage 7
                           :     :           :     :                                               +- ReusedExchange [c_customer_sk#1692, c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#9513]
                           :     :           :     +- GpuCoalesceBatches RequireSingleBatchWithFilter
                           :     :           :        +- GpuShuffleCoalesce 2147483647
                           :     :           :           +- GpuCustomShuffleReader coalesced
                           :     :           :              +- ShuffleQueryStage 43
                           :     :           :                 +- GpuColumnarExchange gpuhashpartitioning(customer_id#2160, 200), ENSURE_REQUIREMENTS, [id=#19896]
                           :     :           :                    +- GpuProject [customer_id#1523 AS customer_id#2160, year_total#1531 AS year_total#2168], true
                           :     :           :                       +- GpuCoalesceBatches targetsize(2147483647)
                           :     :           :                          +- GpuFilter (gpuisnotnull(year_total#1531) AND (year_total#1531 > 0.000000)), true
                           :     :           :                             +- GpuRowToColumnar targetsize(2147483647)
                           :     :           :                                +- *(8) HashAggregate(keys=[c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016, d_year#2058], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2043 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2042 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2040 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2041 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1523, year_total#1531])
                           :     :           :                                   +- AQEShuffleRead coalesced
                           :     :           :                                      +- ShuffleQueryStage 38
                           :     :           :                                         +- Exchange hashpartitioning(c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016, d_year#2058, 200), ENSURE_REQUIREMENTS, [id=#18280]
                           :     :           :                                            +- *(3) HashAggregate(keys=[c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016, d_year#2058], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2043 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2042 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2040 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2041 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016, d_year#2058, sum#2997, isEmpty#2998])
                           :     :           :                                               +- GpuColumnarToRow false
                           :     :           :                                                  +- GpuProject [cs_ext_discount_amt#2040, cs_ext_sales_price#2041, cs_ext_wholesale_cost#2042, cs_ext_list_price#2043, d_year#2058, c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016], true
                           :     :           :                                                     +- GpuShuffledHashJoin [cs_bill_customer_sk#2021], [c_customer_sk#2000], Inner, GpuBuildRight, false
                           :     :           :                                                        :- GpuShuffleCoalesce 2147483647
                           :     :           :                                                        :  +- GpuCustomShuffleReader coalesced
                           :     :           :                                                        :     +- ShuffleQueryStage 32
                           :     :           :                                                        :        +- GpuColumnarExchange gpuhashpartitioning(cs_bill_customer_sk#2021, 200), ENSURE_REQUIREMENTS, [id=#15507]
                           :     :           :                                                        :           +- GpuProject [cs_bill_customer_sk#2021, cs_ext_discount_amt#2040, cs_ext_sales_price#2041, cs_ext_wholesale_cost#2042, cs_ext_list_price#2043, d_year#2058], true
                           :     :           :                                                        :              +- GpuShuffledHashJoin [cs_sold_date_sk#2018], [d_date_sk#2052], Inner, GpuBuildRight, false
                           :     :           :                                                        :                 :- GpuShuffleCoalesce 2147483647
                           :     :           :                                                        :                 :  +- GpuCustomShuffleReader coalesced
                           :     :           :                                                        :                 :     +- ShuffleQueryStage 8
                           :     :           :                                                        :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_sold_date_sk#2018, 200), ENSURE_REQUIREMENTS, [id=#9735]
                           :     :           :                                                        :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                           :     :           :                                                        :                 :              +- GpuFilter (gpuisnotnull(cs_sold_date_sk#2018) AND gpuisnotnull(cs_bill_customer_sk#2021)), true
                           :     :           :                                                        :                 :                 +- GpuFileGpuScan parquet [cs_sold_date_sk#2018,cs_bill_customer_sk#2021,cs_ext_discount_amt#2040,cs_ext_sales_price#2041,cs_ext_wholesale_cost#2042,cs_ext_list_price#2043] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#2018), isnotnull(cs_bill_customer_sk#2021)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_...
                           :     :           :                                                        :                 +- GpuCustomShuffleReader coalesced
                           :     :           :                                                        :                    +- ShuffleQueryStage 10
                           :     :           :                                                        :                       +- ReusedExchange [d_date_sk#2052, d_year#2058], GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#9481]
                           :     :           :                                                        +- GpuCustomShuffleReader coalesced
                           :     :           :                                                           +- ShuffleQueryStage 12
                           :     :           :                                                              +- ReusedExchange [c_customer_sk#2000, c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#9513]
                           :     :           +- GpuCoalesceBatches RequireSingleBatchWithFilter
                           :     :              +- GpuRowToColumnar targetsize(2147483647)
                           :     :                 +- AQEShuffleRead coalesced
                           :     :                    +- ShuffleQueryStage 46
                           :     :                       +- Exchange hashpartitioning(customer_id#1658, 200), ENSURE_REQUIREMENTS, [id=#21051]
                           :     :                          +- *(11) HashAggregate(keys=[c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255, d_year#2297], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2282 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2281 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2279 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2280 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1658, year_total#1666])
                           :     :                             +- AQEShuffleRead coalesced
                           :     :                                +- ShuffleQueryStage 39
                           :     :                                   +- Exchange hashpartitioning(c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255, d_year#2297, 200), ENSURE_REQUIREMENTS, [id=#18696]
                           :     :                                      +- *(4) HashAggregate(keys=[c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255, d_year#2297], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2282 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2281 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2279 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2280 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255, d_year#2297, sum#3001, isEmpty#3002])
                           :     :                                         +- GpuColumnarToRow false
                           :     :                                            +- GpuProject [cs_ext_discount_amt#2279, cs_ext_sales_price#2280, cs_ext_wholesale_cost#2281, cs_ext_list_price#2282, d_year#2297, c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255], true
                           :     :                                               +- GpuShuffledHashJoin [cs_bill_customer_sk#2260], [c_customer_sk#2239], Inner, GpuBuildRight, false
                           :     :                                                  :- GpuShuffleCoalesce 2147483647
                           :     :                                                  :  +- GpuCustomShuffleReader coalesced
                           :     :                                                  :     +- ShuffleQueryStage 33
                           :     :                                                  :        +- GpuColumnarExchange gpuhashpartitioning(cs_bill_customer_sk#2260, 200), ENSURE_REQUIREMENTS, [id=#15581]
                           :     :                                                  :           +- GpuProject [cs_bill_customer_sk#2260, cs_ext_discount_amt#2279, cs_ext_sales_price#2280, cs_ext_wholesale_cost#2281, cs_ext_list_price#2282, d_year#2297], true
                           :     :                                                  :              +- GpuShuffledHashJoin [cs_sold_date_sk#2257], [d_date_sk#2291], Inner, GpuBuildRight, false
                           :     :                                                  :                 :- GpuShuffleCoalesce 2147483647
                           :     :                                                  :                 :  +- GpuCustomShuffleReader coalesced
                           :     :                                                  :                 :     +- ShuffleQueryStage 14
                           :     :                                                  :                 :        +- ReusedExchange [cs_sold_date_sk#2257, cs_bill_customer_sk#2260, cs_ext_discount_amt#2279, cs_ext_sales_price#2280, cs_ext_wholesale_cost#2281, cs_ext_list_price#2282], GpuColumnarExchange gpuhashpartitioning(cs_sold_date_sk#2018, 200), ENSURE_REQUIREMENTS, [id=#9735]
                           :     :                                                  :                 +- GpuCustomShuffleReader coalesced
                           :     :                                                  :                    +- ShuffleQueryStage 16
                           :     :                                                  :                       +- ReusedExchange [d_date_sk#2291, d_year#2297], GpuColumnarExchange gpuhashpartitioning(d_date_sk#1733, 200), ENSURE_REQUIREMENTS, [id=#9620]
                           :     :                                                  +- GpuCustomShuffleReader coalesced
                           :     :                                                     +- ShuffleQueryStage 18
                           :     :                                                        +- ReusedExchange [c_customer_sk#2239, c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#9513]
                           :     +- GpuCoalesceBatches RequireSingleBatchWithFilter
                           :        +- GpuShuffleCoalesce 2147483647
                           :           +- GpuCustomShuffleReader coalesced
                           :              +- ShuffleQueryStage 45
                           :                 +- GpuColumnarExchange gpuhashpartitioning(customer_id#2638, 200), ENSURE_REQUIREMENTS, [id=#20617]
                           :                    +- GpuProject [customer_id#1533 AS customer_id#2638, year_total#1541 AS year_total#2646], true
                           :                       +- GpuCoalesceBatches targetsize(2147483647)
                           :                          +- GpuFilter (gpuisnotnull(year_total#1541) AND (year_total#1541 > 0.000000)), true
                           :                             +- GpuRowToColumnar targetsize(2147483647)
                           :                                +- *(10) HashAggregate(keys=[c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574, d_year#2616], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#2601 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2600 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2598 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2599 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1533, year_total#1541])
                           :                                   +- AQEShuffleRead coalesced
                           :                                      +- ShuffleQueryStage 40
                           :                                         +- Exchange hashpartitioning(c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574, d_year#2616, 200), ENSURE_REQUIREMENTS, [id=#19062]
                           :                                            +- *(5) HashAggregate(keys=[c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574, d_year#2616], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#2601 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2600 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2598 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2599 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574, d_year#2616, sum#3005, isEmpty#3006])
                           :                                               +- GpuColumnarToRow false
                           :                                                  +- GpuProject [ws_ext_discount_amt#2598, ws_ext_sales_price#2599, ws_ext_wholesale_cost#2600, ws_ext_list_price#2601, d_year#2616, c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574], true
                           :                                                     +- GpuShuffledHashJoin [ws_bill_customer_sk#2580], [c_customer_sk#2558], Inner, GpuBuildRight, false
                           :                                                        :- GpuShuffleCoalesce 2147483647
                           :                                                        :  +- GpuCustomShuffleReader coalesced
                           :                                                        :     +- ShuffleQueryStage 34
                           :                                                        :        +- GpuColumnarExchange gpuhashpartitioning(ws_bill_customer_sk#2580, 200), ENSURE_REQUIREMENTS, [id=#16692]
                           :                                                        :           +- GpuProject [ws_bill_customer_sk#2580, ws_ext_discount_amt#2598, ws_ext_sales_price#2599, ws_ext_wholesale_cost#2600, ws_ext_list_price#2601, d_year#2616], true
                           :                                                        :              +- GpuShuffledHashJoin [ws_sold_date_sk#2576], [d_date_sk#2610], Inner, GpuBuildRight, false
                           :                                                        :                 :- GpuShuffleCoalesce 2147483647
                           :                                                        :                 :  +- GpuCustomShuffleReader coalesced
                           :                                                        :                 :     +- ShuffleQueryStage 19
                           :                                                        :                 :        +- GpuColumnarExchange gpuhashpartitioning(ws_sold_date_sk#2576, 200), ENSURE_REQUIREMENTS, [id=#10027]
                           :                                                        :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                           :                                                        :                 :              +- GpuFilter (gpuisnotnull(ws_sold_date_sk#2576) AND gpuisnotnull(ws_bill_customer_sk#2580)), true
                           :                                                        :                 :                 +- GpuFileGpuScan parquet [ws_sold_date_sk#2576,ws_bill_customer_sk#2580,ws_ext_discount_amt#2598,ws_ext_sales_price#2599,ws_ext_wholesale_cost#2600,ws_ext_list_price#2601] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#2576), isnotnull(ws_bill_customer_sk#2580)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_...
                           :                                                        :                 +- GpuCustomShuffleReader coalesced
                           :                                                        :                    +- ShuffleQueryStage 21
                           :                                                        :                       +- ReusedExchange [d_date_sk#2610, d_year#2616], GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#9481]
                           :                                                        +- GpuCustomShuffleReader coalesced
                           :                                                           +- ShuffleQueryStage 23
                           :                                                              +- ReusedExchange [c_customer_sk#2558, c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#9513]
                           +- GpuCoalesceBatches RequireSingleBatchWithFilter
                              +- GpuRowToColumnar targetsize(2147483647)
                                 +- AQEShuffleRead coalesced
                                    +- ShuffleQueryStage 47
                                       +- Exchange hashpartitioning(customer_id#1678, 200), ENSURE_REQUIREMENTS, [id=#21338]
                                          +- *(12) HashAggregate(keys=[c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813, d_year#2855], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#2840 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2839 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2837 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2838 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1678, year_total#1686])
                                             +- AQEShuffleRead coalesced
                                                +- ShuffleQueryStage 41
                                                   +- Exchange hashpartitioning(c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813, d_year#2855, 200), ENSURE_REQUIREMENTS, [id=#19389]
                                                      +- *(6) HashAggregate(keys=[c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813, d_year#2855], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#2840 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2839 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2837 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2838 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813, d_year#2855, sum#3009, isEmpty#3010])
                                                         +- GpuColumnarToRow false
                                                            +- GpuProject [ws_ext_discount_amt#2837, ws_ext_sales_price#2838, ws_ext_wholesale_cost#2839, ws_ext_list_price#2840, d_year#2855, c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813], true
                                                               +- GpuShuffledHashJoin [ws_bill_customer_sk#2819], [c_customer_sk#2797], Inner, GpuBuildRight, false
                                                                  :- GpuShuffleCoalesce 2147483647
                                                                  :  +- GpuCustomShuffleReader coalesced
                                                                  :     +- ShuffleQueryStage 35
                                                                  :        +- GpuColumnarExchange gpuhashpartitioning(ws_bill_customer_sk#2819, 200), ENSURE_REQUIREMENTS, [id=#16766]
                                                                  :           +- GpuProject [ws_bill_customer_sk#2819, ws_ext_discount_amt#2837, ws_ext_sales_price#2838, ws_ext_wholesale_cost#2839, ws_ext_list_price#2840, d_year#2855], true
                                                                  :              +- GpuShuffledHashJoin [ws_sold_date_sk#2815], [d_date_sk#2849], Inner, GpuBuildRight, false
                                                                  :                 :- GpuShuffleCoalesce 2147483647
                                                                  :                 :  +- GpuCustomShuffleReader coalesced
                                                                  :                 :     +- ShuffleQueryStage 25
                                                                  :                 :        +- ReusedExchange [ws_sold_date_sk#2815, ws_bill_customer_sk#2819, ws_ext_discount_amt#2837, ws_ext_sales_price#2838, ws_ext_wholesale_cost#2839, ws_ext_list_price#2840], GpuColumnarExchange gpuhashpartitioning(ws_sold_date_sk#2576, 200), ENSURE_REQUIREMENTS, [id=#10027]
                                                                  :                 +- GpuCustomShuffleReader coalesced
                                                                  :                    +- ShuffleQueryStage 27
                                                                  :                       +- ReusedExchange [d_date_sk#2849, d_year#2855], GpuColumnarExchange gpuhashpartitioning(d_date_sk#1733, 200), ENSURE_REQUIREMENTS, [id=#9620]
                                                                  +- GpuCustomShuffleReader coalesced
                                                                     +- ShuffleQueryStage 29
                                                                        +- ReusedExchange [c_customer_sk#2797, c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#9513]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[customer_id#1638 ASC NULLS FIRST,customer_first_name#1639 ASC NULLS FIRST,customer_last_name#1640 ASC NULLS FIRST,customer_login#1643 ASC NULLS FIRST], output=[customer_id#1638,customer_first_name#1639,customer_last_name#1640,customer_login#1643])
   +- Project [customer_id#1638, customer_first_name#1639, customer_last_name#1640, customer_login#1643]
      +- SortMergeJoin [customer_id#1513], [customer_id#1678], Inner, (CASE WHEN (year_total#2168 > 0.000000) THEN CheckOverflow((promote_precision(year_total#1666) / promote_precision(year_total#2168)), DecimalType(38,14), true) END > CASE WHEN (year_total#2646 > 0.000000) THEN CheckOverflow((promote_precision(year_total#1686) / promote_precision(year_total#2646)), DecimalType(38,14), true) END)
         :- Project [customer_id#1513, customer_id#1638, customer_first_name#1639, customer_last_name#1640, customer_login#1643, year_total#2168, year_total#1666, year_total#2646]
         :  +- SortMergeJoin [customer_id#1513], [customer_id#2638], Inner
         :     :- Project [customer_id#1513, customer_id#1638, customer_first_name#1639, customer_last_name#1640, customer_login#1643, year_total#2168, year_total#1666]
         :     :  +- SortMergeJoin [customer_id#1513], [customer_id#1658], Inner, (CASE WHEN (year_total#2168 > 0.000000) THEN CheckOverflow((promote_precision(year_total#1666) / promote_precision(year_total#2168)), DecimalType(38,14), true) END > CASE WHEN (year_total#1521 > 0.000000) THEN CheckOverflow((promote_precision(year_total#1646) / promote_precision(year_total#1521)), DecimalType(38,14), true) END)
         :     :     :- Project [customer_id#1513, year_total#1521, customer_id#1638, customer_first_name#1639, customer_last_name#1640, customer_login#1643, year_total#1646, year_total#2168]
         :     :     :  +- SortMergeJoin [customer_id#1513], [customer_id#2160], Inner
         :     :     :     :- SortMergeJoin [customer_id#1513], [customer_id#1638], Inner
         :     :     :     :  :- Sort [customer_id#1513 ASC NULLS FIRST], false, 0
         :     :     :     :  :  +- Exchange hashpartitioning(customer_id#1513, 200), ENSURE_REQUIREMENTS, [id=#7581]
         :     :     :     :  :     +- Filter (isnotnull(year_total#1521) AND (year_total#1521 > 0.000000))
         :     :     :     :  :        +- HashAggregate(keys=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#269 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#268 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#266 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#267 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1513, year_total#1521])
         :     :     :     :  :           +- Exchange hashpartitioning(c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618, 200), ENSURE_REQUIREMENTS, [id=#7557]
         :     :     :     :  :              +- HashAggregate(keys=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#269 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#268 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#266 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#267 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618, sum#2989, isEmpty#2990])
         :     :     :     :  :                 +- Project [ss_ext_discount_amt#266, ss_ext_sales_price#267, ss_ext_wholesale_cost#268, ss_ext_list_price#269, d_year#618, c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416]
         :     :     :     :  :                    +- SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
         :     :     :     :  :                       :- Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
         :     :     :     :  :                       :  +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#7549]
         :     :     :     :  :                       :     +- Project [ss_customer_sk#255, ss_ext_discount_amt#266, ss_ext_sales_price#267, ss_ext_wholesale_cost#268, ss_ext_list_price#269, d_year#618]
         :     :     :     :  :                       :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
         :     :     :     :  :                       :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :     :     :     :  :                       :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#7541]
         :     :     :     :  :                       :           :     +- Filter (isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_customer_sk#255))
         :     :     :     :  :                       :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_customer_sk#255,ss_ext_discount_amt#266,ss_ext_sales_price#267,ss_ext_wholesale_cost#268,ss_ext_list_price#269] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_customer_sk#255)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price...
         :     :     :     :  :                       :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :     :     :     :  :                       :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#7542]
         :     :     :     :  :                       :                 +- Filter ((isnotnull(d_year#618) AND (d_year#618 = 2001)) AND isnotnull(d_date_sk#612))
         :     :     :     :  :                       :                    +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2001), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     :     :  :                       +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
         :     :     :     :  :                          +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#7550]
         :     :     :     :  :                             +- Filter (isnotnull(c_customer_sk#400) AND isnotnull(c_customer_id#401))
         :     :     :     :  :                                +- FileScan parquet [c_customer_sk#400,c_customer_id#401,c_first_name#408,c_last_name#409,c_preferred_cust_flag#410,c_birth_country#414,c_login#415,c_email_address#416] Batched: true, DataFilters: [isnotnull(c_customer_sk#400), isnotnull(c_customer_id#401)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :     :     :  +- Sort [customer_id#1638 ASC NULLS FIRST], false, 0
         :     :     :     :     +- Exchange hashpartitioning(customer_id#1638, 200), ENSURE_REQUIREMENTS, [id=#7582]
         :     :     :     :        +- HashAggregate(keys=[c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708, d_year#1739], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1727 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1726 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1724 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1725 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1638, customer_first_name#1639, customer_last_name#1640, customer_login#1643, year_total#1646])
         :     :     :     :           +- Exchange hashpartitioning(c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708, d_year#1739, 200), ENSURE_REQUIREMENTS, [id=#7577]
         :     :     :     :              +- HashAggregate(keys=[c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708, d_year#1739], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1727 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1726 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1724 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1725 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708, d_year#1739, sum#2993, isEmpty#2994])
         :     :     :     :                 +- Project [ss_ext_discount_amt#1724, ss_ext_sales_price#1725, ss_ext_wholesale_cost#1726, ss_ext_list_price#1727, d_year#1739, c_customer_id#1693, c_first_name#1700, c_last_name#1701, c_preferred_cust_flag#1702, c_birth_country#1706, c_login#1707, c_email_address#1708]
         :     :     :     :                    +- SortMergeJoin [ss_customer_sk#1713], [c_customer_sk#1692], Inner
         :     :     :     :                       :- Sort [ss_customer_sk#1713 ASC NULLS FIRST], false, 0
         :     :     :     :                       :  +- Exchange hashpartitioning(ss_customer_sk#1713, 200), ENSURE_REQUIREMENTS, [id=#7569]
         :     :     :     :                       :     +- Project [ss_customer_sk#1713, ss_ext_discount_amt#1724, ss_ext_sales_price#1725, ss_ext_wholesale_cost#1726, ss_ext_list_price#1727, d_year#1739]
         :     :     :     :                       :        +- SortMergeJoin [ss_sold_date_sk#1710], [d_date_sk#1733], Inner
         :     :     :     :                       :           :- Sort [ss_sold_date_sk#1710 ASC NULLS FIRST], false, 0
         :     :     :     :                       :           :  +- Exchange hashpartitioning(ss_sold_date_sk#1710, 200), ENSURE_REQUIREMENTS, [id=#7561]
         :     :     :     :                       :           :     +- Filter (isnotnull(ss_sold_date_sk#1710) AND isnotnull(ss_customer_sk#1713))
         :     :     :     :                       :           :        +- FileScan parquet [ss_sold_date_sk#1710,ss_customer_sk#1713,ss_ext_discount_amt#1724,ss_ext_sales_price#1725,ss_ext_wholesale_cost#1726,ss_ext_list_price#1727] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#1710), isnotnull(ss_customer_sk#1713)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price...
         :     :     :     :                       :           +- Sort [d_date_sk#1733 ASC NULLS FIRST], false, 0
         :     :     :     :                       :              +- Exchange hashpartitioning(d_date_sk#1733, 200), ENSURE_REQUIREMENTS, [id=#7562]
         :     :     :     :                       :                 +- Filter ((isnotnull(d_year#1739) AND (d_year#1739 = 2002)) AND isnotnull(d_date_sk#1733))
         :     :     :     :                       :                    +- FileScan parquet [d_date_sk#1733,d_year#1739] Batched: true, DataFilters: [isnotnull(d_year#1739), (d_year#1739 = 2002), isnotnull(d_date_sk#1733)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     :     :                       +- Sort [c_customer_sk#1692 ASC NULLS FIRST], false, 0
         :     :     :     :                          +- Exchange hashpartitioning(c_customer_sk#1692, 200), ENSURE_REQUIREMENTS, [id=#7570]
         :     :     :     :                             +- Filter (isnotnull(c_customer_sk#1692) AND isnotnull(c_customer_id#1693))
         :     :     :     :                                +- FileScan parquet [c_customer_sk#1692,c_customer_id#1693,c_first_name#1700,c_last_name#1701,c_preferred_cust_flag#1702,c_birth_country#1706,c_login#1707,c_email_address#1708] Batched: true, DataFilters: [isnotnull(c_customer_sk#1692), isnotnull(c_customer_id#1693)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :     :     +- Sort [customer_id#2160 ASC NULLS FIRST], false, 0
         :     :     :        +- Exchange hashpartitioning(customer_id#2160, 200), ENSURE_REQUIREMENTS, [id=#7609]
         :     :     :           +- Project [customer_id#1523 AS customer_id#2160, year_total#1531 AS year_total#2168]
         :     :     :              +- Filter (isnotnull(year_total#1531) AND (year_total#1531 > 0.000000))
         :     :     :                 +- HashAggregate(keys=[c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016, d_year#2058], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2043 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2042 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2040 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2041 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1523, year_total#1531])
         :     :     :                    +- Exchange hashpartitioning(c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016, d_year#2058, 200), ENSURE_REQUIREMENTS, [id=#7603]
         :     :     :                       +- HashAggregate(keys=[c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016, d_year#2058], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2043 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2042 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2040 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2041 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016, d_year#2058, sum#2997, isEmpty#2998])
         :     :     :                          +- Project [cs_ext_discount_amt#2040, cs_ext_sales_price#2041, cs_ext_wholesale_cost#2042, cs_ext_list_price#2043, d_year#2058, c_customer_id#2001, c_first_name#2008, c_last_name#2009, c_preferred_cust_flag#2010, c_birth_country#2014, c_login#2015, c_email_address#2016]
         :     :     :                             +- SortMergeJoin [cs_bill_customer_sk#2021], [c_customer_sk#2000], Inner
         :     :     :                                :- Sort [cs_bill_customer_sk#2021 ASC NULLS FIRST], false, 0
         :     :     :                                :  +- Exchange hashpartitioning(cs_bill_customer_sk#2021, 200), ENSURE_REQUIREMENTS, [id=#7595]
         :     :     :                                :     +- Project [cs_bill_customer_sk#2021, cs_ext_discount_amt#2040, cs_ext_sales_price#2041, cs_ext_wholesale_cost#2042, cs_ext_list_price#2043, d_year#2058]
         :     :     :                                :        +- SortMergeJoin [cs_sold_date_sk#2018], [d_date_sk#2052], Inner
         :     :     :                                :           :- Sort [cs_sold_date_sk#2018 ASC NULLS FIRST], false, 0
         :     :     :                                :           :  +- Exchange hashpartitioning(cs_sold_date_sk#2018, 200), ENSURE_REQUIREMENTS, [id=#7587]
         :     :     :                                :           :     +- Filter (isnotnull(cs_sold_date_sk#2018) AND isnotnull(cs_bill_customer_sk#2021))
         :     :     :                                :           :        +- FileScan parquet [cs_sold_date_sk#2018,cs_bill_customer_sk#2021,cs_ext_discount_amt#2040,cs_ext_sales_price#2041,cs_ext_wholesale_cost#2042,cs_ext_list_price#2043] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#2018), isnotnull(cs_bill_customer_sk#2021)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_...
         :     :     :                                :           +- Sort [d_date_sk#2052 ASC NULLS FIRST], false, 0
         :     :     :                                :              +- Exchange hashpartitioning(d_date_sk#2052, 200), ENSURE_REQUIREMENTS, [id=#7588]
         :     :     :                                :                 +- Filter ((isnotnull(d_year#2058) AND (d_year#2058 = 2001)) AND isnotnull(d_date_sk#2052))
         :     :     :                                :                    +- FileScan parquet [d_date_sk#2052,d_year#2058] Batched: true, DataFilters: [isnotnull(d_year#2058), (d_year#2058 = 2001), isnotnull(d_date_sk#2052)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     :                                +- Sort [c_customer_sk#2000 ASC NULLS FIRST], false, 0
         :     :     :                                   +- Exchange hashpartitioning(c_customer_sk#2000, 200), ENSURE_REQUIREMENTS, [id=#7596]
         :     :     :                                      +- Filter (isnotnull(c_customer_sk#2000) AND isnotnull(c_customer_id#2001))
         :     :     :                                         +- FileScan parquet [c_customer_sk#2000,c_customer_id#2001,c_first_name#2008,c_last_name#2009,c_preferred_cust_flag#2010,c_birth_country#2014,c_login#2015,c_email_address#2016] Batched: true, DataFilters: [isnotnull(c_customer_sk#2000), isnotnull(c_customer_id#2001)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :     +- Sort [customer_id#1658 ASC NULLS FIRST], false, 0
         :     :        +- Exchange hashpartitioning(customer_id#1658, 200), ENSURE_REQUIREMENTS, [id=#7634]
         :     :           +- HashAggregate(keys=[c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255, d_year#2297], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2282 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2281 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2279 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2280 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1658, year_total#1666])
         :     :              +- Exchange hashpartitioning(c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255, d_year#2297, 200), ENSURE_REQUIREMENTS, [id=#7630]
         :     :                 +- HashAggregate(keys=[c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255, d_year#2297], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2282 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2281 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2279 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2280 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255, d_year#2297, sum#3001, isEmpty#3002])
         :     :                    +- Project [cs_ext_discount_amt#2279, cs_ext_sales_price#2280, cs_ext_wholesale_cost#2281, cs_ext_list_price#2282, d_year#2297, c_customer_id#2240, c_first_name#2247, c_last_name#2248, c_preferred_cust_flag#2249, c_birth_country#2253, c_login#2254, c_email_address#2255]
         :     :                       +- SortMergeJoin [cs_bill_customer_sk#2260], [c_customer_sk#2239], Inner
         :     :                          :- Sort [cs_bill_customer_sk#2260 ASC NULLS FIRST], false, 0
         :     :                          :  +- Exchange hashpartitioning(cs_bill_customer_sk#2260, 200), ENSURE_REQUIREMENTS, [id=#7622]
         :     :                          :     +- Project [cs_bill_customer_sk#2260, cs_ext_discount_amt#2279, cs_ext_sales_price#2280, cs_ext_wholesale_cost#2281, cs_ext_list_price#2282, d_year#2297]
         :     :                          :        +- SortMergeJoin [cs_sold_date_sk#2257], [d_date_sk#2291], Inner
         :     :                          :           :- Sort [cs_sold_date_sk#2257 ASC NULLS FIRST], false, 0
         :     :                          :           :  +- Exchange hashpartitioning(cs_sold_date_sk#2257, 200), ENSURE_REQUIREMENTS, [id=#7614]
         :     :                          :           :     +- Filter (isnotnull(cs_sold_date_sk#2257) AND isnotnull(cs_bill_customer_sk#2260))
         :     :                          :           :        +- FileScan parquet [cs_sold_date_sk#2257,cs_bill_customer_sk#2260,cs_ext_discount_amt#2279,cs_ext_sales_price#2280,cs_ext_wholesale_cost#2281,cs_ext_list_price#2282] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#2257), isnotnull(cs_bill_customer_sk#2260)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_...
         :     :                          :           +- Sort [d_date_sk#2291 ASC NULLS FIRST], false, 0
         :     :                          :              +- Exchange hashpartitioning(d_date_sk#2291, 200), ENSURE_REQUIREMENTS, [id=#7615]
         :     :                          :                 +- Filter ((isnotnull(d_year#2297) AND (d_year#2297 = 2002)) AND isnotnull(d_date_sk#2291))
         :     :                          :                    +- FileScan parquet [d_date_sk#2291,d_year#2297] Batched: true, DataFilters: [isnotnull(d_year#2297), (d_year#2297 = 2002), isnotnull(d_date_sk#2291)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :                          +- Sort [c_customer_sk#2239 ASC NULLS FIRST], false, 0
         :     :                             +- Exchange hashpartitioning(c_customer_sk#2239, 200), ENSURE_REQUIREMENTS, [id=#7623]
         :     :                                +- Filter (isnotnull(c_customer_sk#2239) AND isnotnull(c_customer_id#2240))
         :     :                                   +- FileScan parquet [c_customer_sk#2239,c_customer_id#2240,c_first_name#2247,c_last_name#2248,c_preferred_cust_flag#2249,c_birth_country#2253,c_login#2254,c_email_address#2255] Batched: true, DataFilters: [isnotnull(c_customer_sk#2239), isnotnull(c_customer_id#2240)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     +- Sort [customer_id#2638 ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(customer_id#2638, 200), ENSURE_REQUIREMENTS, [id=#7661]
         :           +- Project [customer_id#1533 AS customer_id#2638, year_total#1541 AS year_total#2646]
         :              +- Filter (isnotnull(year_total#1541) AND (year_total#1541 > 0.000000))
         :                 +- HashAggregate(keys=[c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574, d_year#2616], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#2601 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2600 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2598 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2599 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1533, year_total#1541])
         :                    +- Exchange hashpartitioning(c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574, d_year#2616, 200), ENSURE_REQUIREMENTS, [id=#7655]
         :                       +- HashAggregate(keys=[c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574, d_year#2616], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#2601 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2600 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2598 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2599 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574, d_year#2616, sum#3005, isEmpty#3006])
         :                          +- Project [ws_ext_discount_amt#2598, ws_ext_sales_price#2599, ws_ext_wholesale_cost#2600, ws_ext_list_price#2601, d_year#2616, c_customer_id#2559, c_first_name#2566, c_last_name#2567, c_preferred_cust_flag#2568, c_birth_country#2572, c_login#2573, c_email_address#2574]
         :                             +- SortMergeJoin [ws_bill_customer_sk#2580], [c_customer_sk#2558], Inner
         :                                :- Sort [ws_bill_customer_sk#2580 ASC NULLS FIRST], false, 0
         :                                :  +- Exchange hashpartitioning(ws_bill_customer_sk#2580, 200), ENSURE_REQUIREMENTS, [id=#7647]
         :                                :     +- Project [ws_bill_customer_sk#2580, ws_ext_discount_amt#2598, ws_ext_sales_price#2599, ws_ext_wholesale_cost#2600, ws_ext_list_price#2601, d_year#2616]
         :                                :        +- SortMergeJoin [ws_sold_date_sk#2576], [d_date_sk#2610], Inner
         :                                :           :- Sort [ws_sold_date_sk#2576 ASC NULLS FIRST], false, 0
         :                                :           :  +- Exchange hashpartitioning(ws_sold_date_sk#2576, 200), ENSURE_REQUIREMENTS, [id=#7639]
         :                                :           :     +- Filter (isnotnull(ws_sold_date_sk#2576) AND isnotnull(ws_bill_customer_sk#2580))
         :                                :           :        +- FileScan parquet [ws_sold_date_sk#2576,ws_bill_customer_sk#2580,ws_ext_discount_amt#2598,ws_ext_sales_price#2599,ws_ext_wholesale_cost#2600,ws_ext_list_price#2601] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#2576), isnotnull(ws_bill_customer_sk#2580)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_...
         :                                :           +- Sort [d_date_sk#2610 ASC NULLS FIRST], false, 0
         :                                :              +- Exchange hashpartitioning(d_date_sk#2610, 200), ENSURE_REQUIREMENTS, [id=#7640]
         :                                :                 +- Filter ((isnotnull(d_year#2616) AND (d_year#2616 = 2001)) AND isnotnull(d_date_sk#2610))
         :                                :                    +- FileScan parquet [d_date_sk#2610,d_year#2616] Batched: true, DataFilters: [isnotnull(d_year#2616), (d_year#2616 = 2001), isnotnull(d_date_sk#2610)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                                +- Sort [c_customer_sk#2558 ASC NULLS FIRST], false, 0
         :                                   +- Exchange hashpartitioning(c_customer_sk#2558, 200), ENSURE_REQUIREMENTS, [id=#7648]
         :                                      +- Filter (isnotnull(c_customer_sk#2558) AND isnotnull(c_customer_id#2559))
         :                                         +- FileScan parquet [c_customer_sk#2558,c_customer_id#2559,c_first_name#2566,c_last_name#2567,c_preferred_cust_flag#2568,c_birth_country#2572,c_login#2573,c_email_address#2574] Batched: true, DataFilters: [isnotnull(c_customer_sk#2558), isnotnull(c_customer_id#2559)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         +- Sort [customer_id#1678 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(customer_id#1678, 200), ENSURE_REQUIREMENTS, [id=#7686]
               +- HashAggregate(keys=[c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813, d_year#2855], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#2840 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2839 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2837 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2838 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[customer_id#1678, year_total#1686])
                  +- Exchange hashpartitioning(c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813, d_year#2855, 200), ENSURE_REQUIREMENTS, [id=#7682]
                     +- HashAggregate(keys=[c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813, d_year#2855], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#2840 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2839 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2837 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2838 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))], output=[c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813, d_year#2855, sum#3009, isEmpty#3010])
                        +- Project [ws_ext_discount_amt#2837, ws_ext_sales_price#2838, ws_ext_wholesale_cost#2839, ws_ext_list_price#2840, d_year#2855, c_customer_id#2798, c_first_name#2805, c_last_name#2806, c_preferred_cust_flag#2807, c_birth_country#2811, c_login#2812, c_email_address#2813]
                           +- SortMergeJoin [ws_bill_customer_sk#2819], [c_customer_sk#2797], Inner
                              :- Sort [ws_bill_customer_sk#2819 ASC NULLS FIRST], false, 0
                              :  +- Exchange hashpartitioning(ws_bill_customer_sk#2819, 200), ENSURE_REQUIREMENTS, [id=#7674]
                              :     +- Project [ws_bill_customer_sk#2819, ws_ext_discount_amt#2837, ws_ext_sales_price#2838, ws_ext_wholesale_cost#2839, ws_ext_list_price#2840, d_year#2855]
                              :        +- SortMergeJoin [ws_sold_date_sk#2815], [d_date_sk#2849], Inner
                              :           :- Sort [ws_sold_date_sk#2815 ASC NULLS FIRST], false, 0
                              :           :  +- Exchange hashpartitioning(ws_sold_date_sk#2815, 200), ENSURE_REQUIREMENTS, [id=#7666]
                              :           :     +- Filter (isnotnull(ws_sold_date_sk#2815) AND isnotnull(ws_bill_customer_sk#2819))
                              :           :        +- FileScan parquet [ws_sold_date_sk#2815,ws_bill_customer_sk#2819,ws_ext_discount_amt#2837,ws_ext_sales_price#2838,ws_ext_wholesale_cost#2839,ws_ext_list_price#2840] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#2815), isnotnull(ws_bill_customer_sk#2819)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_...
                              :           +- Sort [d_date_sk#2849 ASC NULLS FIRST], false, 0
                              :              +- Exchange hashpartitioning(d_date_sk#2849, 200), ENSURE_REQUIREMENTS, [id=#7667]
                              :                 +- Filter ((isnotnull(d_year#2855) AND (d_year#2855 = 2002)) AND isnotnull(d_date_sk#2849))
                              :                    +- FileScan parquet [d_date_sk#2849,d_year#2855] Batched: true, DataFilters: [isnotnull(d_year#2855), (d_year#2855 = 2002), isnotnull(d_date_sk#2849)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                              +- Sort [c_customer_sk#2797 ASC NULLS FIRST], false, 0
                                 +- Exchange hashpartitioning(c_customer_sk#2797, 200), ENSURE_REQUIREMENTS, [id=#7675]
                                    +- Filter (isnotnull(c_customer_sk#2797) AND isnotnull(c_customer_id#2798))
                                       +- FileScan parquet [c_customer_sk#2797,c_customer_id#2798,c_first_name#2805,c_last_name#2806,c_preferred_cust_flag#2807,c_birth_country#2811,c_login#2812,c_email_address#2813] Batched: true, DataFilters: [isnotnull(c_customer_sk#2797), isnotnull(c_customer_id#2798)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
