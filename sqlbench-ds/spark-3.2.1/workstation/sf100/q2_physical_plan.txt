AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   GpuColumnarToRow false
   +- GpuSort [d_week_seq1#985 ASC NULLS FIRST], true, com.nvidia.spark.rapids.OutOfCoreSort$@59d99269
      +- GpuShuffleCoalesce 2147483647
         +- GpuCustomShuffleReader coalesced
            +- ShuffleQueryStage 12
               +- GpuColumnarExchange gpurangepartitioning(d_week_seq1#985 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#6082]
                  +- GpuProject [d_week_seq1#985, gpuround((gpupromoteprecision(sun_sales1#986) / gpupromoteprecision(sun_sales2#994)), 2, DecimalType(37,2)) AS round((sun_sales1 / sun_sales2), 2)#1075, gpuround((gpupromoteprecision(mon_sales1#987) / gpupromoteprecision(mon_sales2#995)), 2, DecimalType(37,2)) AS round((mon_sales1 / mon_sales2), 2)#1076, gpuround((gpupromoteprecision(tue_sales1#988) / gpupromoteprecision(tue_sales2#996)), 2, DecimalType(37,2)) AS round((tue_sales1 / tue_sales2), 2)#1077, gpuround((gpupromoteprecision(wed_sales1#989) / gpupromoteprecision(wed_sales2#997)), 2, DecimalType(37,2)) AS round((wed_sales1 / wed_sales2), 2)#1078, gpuround((gpupromoteprecision(thu_sales1#990) / gpupromoteprecision(thu_sales2#998)), 2, DecimalType(37,2)) AS round((thu_sales1 / thu_sales2), 2)#1079, gpuround((gpupromoteprecision(fri_sales1#991) / gpupromoteprecision(fri_sales2#999)), 2, DecimalType(37,2)) AS round((fri_sales1 / fri_sales2), 2)#1080, gpuround((gpupromoteprecision(sat_sales1#992) / gpupromoteprecision(sat_sales2#1000)), 2, DecimalType(37,2)) AS round((sat_sales1 / sat_sales2), 2)#1081], true
                     +- GpuShuffledHashJoin [d_week_seq1#985], [(d_week_seq2#993 - 53)], Inner, GpuBuildRight, false
                        :- GpuProject [d_week_seq#616 AS d_week_seq1#985, sun_sales#1005 AS sun_sales1#986, mon_sales#1006 AS mon_sales1#987, tue_sales#1007 AS tue_sales1#988, wed_sales#1008 AS wed_sales1#989, thu_sales#1009 AS thu_sales1#990, fri_sales#1010 AS fri_sales1#991, sat_sales#1011 AS sat_sales1#992], true
                        :  +- GpuShuffledHashJoin [d_week_seq#616], [d_week_seq#1016], Inner, GpuBuildRight, false
                        :     :- GpuHashAggregate(keys=[d_week_seq#616], functions=[gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN sales_price#1002 END), LongType, false)], output=[d_week_seq#616, sun_sales#1005, mon_sales#1006, tue_sales#1007, wed_sales#1008, thu_sales#1009, fri_sales#1010, sat_sales#1011])
                        :     :  +- GpuShuffleCoalesce 2147483647
                        :     :     +- GpuCustomShuffleReader coalesced
                        :     :        +- ShuffleQueryStage 8
                        :     :           +- GpuColumnarExchange gpuhashpartitioning(d_week_seq#616, 200), ENSURE_REQUIREMENTS, [id=#5470]
                        :     :              +- GpuHashAggregate(keys=[d_week_seq#616], functions=[partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN sales_price#1002 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN sales_price#1002 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN sales_price#1002 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN sales_price#1002 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN sales_price#1002 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN sales_price#1002 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN sales_price#1002 END), LongType, false)], output=[d_week_seq#616, sum#1097L, sum#1098L, sum#1099L, sum#1100L, sum#1101L, sum#1102L, sum#1103L])
                        :     :                 +- GpuProject [sales_price#1002, d_week_seq#616, d_day_name#626], true
                        :     :                    +- GpuShuffledHashJoin [sold_date_sk#1001], [d_date_sk#612], Inner, GpuBuildRight, false
                        :     :                       :- GpuShuffleCoalesce 2147483647
                        :     :                       :  +- GpuCustomShuffleReader coalesced
                        :     :                       :     +- ShuffleQueryStage 0
                        :     :                       :        +- GpuColumnarExchange gpuhashpartitioning(sold_date_sk#1001, 200), ENSURE_REQUIREMENTS, [id=#4390]
                        :     :                       :           +- GpuUnion
                        :     :                       :              :- GpuProject [ws_sold_date_sk#476 AS sold_date_sk#1001, ws_ext_sales_price#499 AS sales_price#1002], true
                        :     :                       :              :  +- GpuCoalesceBatches targetsize(2147483647)
                        :     :                       :              :     +- GpuFilter gpuisnotnull(ws_sold_date_sk#476), true
                        :     :                       :              :        +- GpuFileGpuScan parquet [ws_sold_date_sk#476,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_ext_sales_price:decimal(7,2)>
                        :     :                       :              +- GpuProject [cs_sold_date_sk#544 AS sold_date_sk#1003, cs_ext_sales_price#567 AS sales_price#1004], true
                        :     :                       :                 +- GpuCoalesceBatches targetsize(2147483647)
                        :     :                       :                    +- GpuFilter gpuisnotnull(cs_sold_date_sk#544), true
                        :     :                       :                       +- GpuFileGpuScan parquet [cs_sold_date_sk#544,cs_ext_sales_price#567] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ext_sales_price:decimal(7,2)>
                        :     :                       +- GpuCustomShuffleReader coalesced
                        :     :                          +- ShuffleQueryStage 1
                        :     :                             +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#4427]
                        :     :                                +- GpuCoalesceBatches targetsize(2147483647)
                        :     :                                   +- GpuFilter (gpuisnotnull(d_date_sk#612) AND gpuisnotnull(d_week_seq#616)), true
                        :     :                                      +- GpuFileGpuScan parquet [d_date_sk#612,d_week_seq#616,d_day_name#626] Batched: true, DataFilters: [isnotnull(d_date_sk#612), isnotnull(d_week_seq#616)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
                        :     +- GpuCoalesceBatches RequireSingleBatchWithFilter
                        :        +- GpuShuffleCoalesce 2147483647
                        :           +- GpuCustomShuffleReader coalesced
                        :              +- ShuffleQueryStage 2
                        :                 +- GpuColumnarExchange gpuhashpartitioning(d_week_seq#1016, 200), ENSURE_REQUIREMENTS, [id=#4470]
                        :                    +- GpuProject [d_week_seq#1016], true
                        :                       +- GpuCoalesceBatches targetsize(2147483647)
                        :                          +- GpuFilter ((gpuisnotnull(d_year#1018) AND (d_year#1018 = 1999)) AND gpuisnotnull(d_week_seq#1016)), true
                        :                             +- GpuFileGpuScan parquet [d_week_seq#1016,d_year#1018] Batched: true, DataFilters: [isnotnull(d_year#1018), (d_year#1018 = 1999), isnotnull(d_week_seq#1016)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_week_seq)], ReadSchema: struct<d_week_seq:int,d_year:int>
                        +- GpuCoalesceBatches RequireSingleBatchWithFilter
                           +- GpuShuffleCoalesce 2147483647
                              +- GpuCustomShuffleReader coalesced
                                 +- ShuffleQueryStage 11
                                    +- GpuColumnarExchange gpuhashpartitioning((d_week_seq2#993 - 53), 200), ENSURE_REQUIREMENTS, [id=#5845]
                                       +- GpuProject [d_week_seq#616 AS d_week_seq2#993, sun_sales#1005 AS sun_sales2#994, mon_sales#1006 AS mon_sales2#995, tue_sales#1007 AS tue_sales2#996, wed_sales#1008 AS wed_sales2#997, thu_sales#1009 AS thu_sales2#998, fri_sales#1010 AS fri_sales2#999, sat_sales#1011 AS sat_sales2#1000], true
                                          +- GpuShuffledHashJoin [d_week_seq#616], [d_week_seq#1044], Inner, GpuBuildRight, false
                                             :- GpuHashAggregate(keys=[d_week_seq#616], functions=[gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN sales_price#1002 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN sales_price#1002 END), LongType, false)], output=[d_week_seq#616, sun_sales#1005, mon_sales#1006, tue_sales#1007, wed_sales#1008, thu_sales#1009, fri_sales#1010, sat_sales#1011])
                                             :  +- GpuShuffleCoalesce 2147483647
                                             :     +- GpuCustomShuffleReader coalesced
                                             :        +- ShuffleQueryStage 10
                                             :           +- ReusedExchange [d_week_seq#616, sum#1111L, sum#1112L, sum#1113L, sum#1114L, sum#1115L, sum#1116L, sum#1117L], GpuColumnarExchange gpuhashpartitioning(d_week_seq#616, 200), ENSURE_REQUIREMENTS, [id=#5470]
                                             +- GpuCoalesceBatches RequireSingleBatchWithFilter
                                                +- GpuShuffleCoalesce 2147483647
                                                   +- GpuCustomShuffleReader coalesced
                                                      +- ShuffleQueryStage 7
                                                         +- GpuColumnarExchange gpuhashpartitioning(d_week_seq#1044, 200), ENSURE_REQUIREMENTS, [id=#4614]
                                                            +- GpuProject [d_week_seq#1044], true
                                                               +- GpuCoalesceBatches targetsize(2147483647)
                                                                  +- GpuFilter ((gpuisnotnull(d_year#1046) AND (d_year#1046 = 2000)) AND gpuisnotnull(d_week_seq#1044)), true
                                                                     +- GpuFileGpuScan parquet [d_week_seq#1044,d_year#1046] Batched: true, DataFilters: [isnotnull(d_year#1046), (d_year#1046 = 2000), isnotnull(d_week_seq#1044)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_week_seq)], ReadSchema: struct<d_week_seq:int,d_year:int>
+- == Initial Plan ==
   Sort [d_week_seq1#985 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(d_week_seq1#985 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#3625]
      +- Project [d_week_seq1#985, round(CheckOverflow((promote_precision(sun_sales1#986) / promote_precision(sun_sales2#994)), DecimalType(37,20), true), 2) AS round((sun_sales1 / sun_sales2), 2)#1075, round(CheckOverflow((promote_precision(mon_sales1#987) / promote_precision(mon_sales2#995)), DecimalType(37,20), true), 2) AS round((mon_sales1 / mon_sales2), 2)#1076, round(CheckOverflow((promote_precision(tue_sales1#988) / promote_precision(tue_sales2#996)), DecimalType(37,20), true), 2) AS round((tue_sales1 / tue_sales2), 2)#1077, round(CheckOverflow((promote_precision(wed_sales1#989) / promote_precision(wed_sales2#997)), DecimalType(37,20), true), 2) AS round((wed_sales1 / wed_sales2), 2)#1078, round(CheckOverflow((promote_precision(thu_sales1#990) / promote_precision(thu_sales2#998)), DecimalType(37,20), true), 2) AS round((thu_sales1 / thu_sales2), 2)#1079, round(CheckOverflow((promote_precision(fri_sales1#991) / promote_precision(fri_sales2#999)), DecimalType(37,20), true), 2) AS round((fri_sales1 / fri_sales2), 2)#1080, round(CheckOverflow((promote_precision(sat_sales1#992) / promote_precision(sat_sales2#1000)), DecimalType(37,20), true), 2) AS round((sat_sales1 / sat_sales2), 2)#1081]
         +- SortMergeJoin [d_week_seq1#985], [(d_week_seq2#993 - 53)], Inner
            :- Project [d_week_seq#616 AS d_week_seq1#985, sun_sales#1005 AS sun_sales1#986, mon_sales#1006 AS mon_sales1#987, tue_sales#1007 AS tue_sales1#988, wed_sales#1008 AS wed_sales1#989, thu_sales#1009 AS thu_sales1#990, fri_sales#1010 AS fri_sales1#991, sat_sales#1011 AS sat_sales1#992]
            :  +- SortMergeJoin [d_week_seq#616], [d_week_seq#1016], Inner
            :     :- Sort [d_week_seq#616 ASC NULLS FIRST], false, 0
            :     :  +- HashAggregate(keys=[d_week_seq#616], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN sales_price#1002 END))], output=[d_week_seq#616, sun_sales#1005, mon_sales#1006, tue_sales#1007, wed_sales#1008, thu_sales#1009, fri_sales#1010, sat_sales#1011])
            :     :     +- Exchange hashpartitioning(d_week_seq#616, 200), ENSURE_REQUIREMENTS, [id=#3591]
            :     :        +- HashAggregate(keys=[d_week_seq#616], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN sales_price#1002 END))], output=[d_week_seq#616, sum#1097L, sum#1098L, sum#1099L, sum#1100L, sum#1101L, sum#1102L, sum#1103L])
            :     :           +- Project [sales_price#1002, d_week_seq#616, d_day_name#626]
            :     :              +- SortMergeJoin [sold_date_sk#1001], [d_date_sk#612], Inner
            :     :                 :- Sort [sold_date_sk#1001 ASC NULLS FIRST], false, 0
            :     :                 :  +- Exchange hashpartitioning(sold_date_sk#1001, 200), ENSURE_REQUIREMENTS, [id=#3583]
            :     :                 :     +- Union
            :     :                 :        :- Project [ws_sold_date_sk#476 AS sold_date_sk#1001, ws_ext_sales_price#499 AS sales_price#1002]
            :     :                 :        :  +- Filter isnotnull(ws_sold_date_sk#476)
            :     :                 :        :     +- FileScan parquet [ws_sold_date_sk#476,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_ext_sales_price:decimal(7,2)>
            :     :                 :        +- Project [cs_sold_date_sk#544 AS sold_date_sk#1003, cs_ext_sales_price#567 AS sales_price#1004]
            :     :                 :           +- Filter isnotnull(cs_sold_date_sk#544)
            :     :                 :              +- FileScan parquet [cs_sold_date_sk#544,cs_ext_sales_price#567] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ext_sales_price:decimal(7,2)>
            :     :                 +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
            :     :                    +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#3584]
            :     :                       +- Filter (isnotnull(d_date_sk#612) AND isnotnull(d_week_seq#616))
            :     :                          +- FileScan parquet [d_date_sk#612,d_week_seq#616,d_day_name#626] Batched: true, DataFilters: [isnotnull(d_date_sk#612), isnotnull(d_week_seq#616)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
            :     +- Sort [d_week_seq#1016 ASC NULLS FIRST], false, 0
            :        +- Exchange hashpartitioning(d_week_seq#1016, 200), ENSURE_REQUIREMENTS, [id=#3595]
            :           +- Project [d_week_seq#1016]
            :              +- Filter ((isnotnull(d_year#1018) AND (d_year#1018 = 1999)) AND isnotnull(d_week_seq#1016))
            :                 +- FileScan parquet [d_week_seq#1016,d_year#1018] Batched: true, DataFilters: [isnotnull(d_year#1018), (d_year#1018 = 1999), isnotnull(d_week_seq#1016)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_week_seq)], ReadSchema: struct<d_week_seq:int,d_year:int>
            +- Sort [(d_week_seq2#993 - 53) ASC NULLS FIRST], false, 0
               +- Exchange hashpartitioning((d_week_seq2#993 - 53), 200), ENSURE_REQUIREMENTS, [id=#3620]
                  +- Project [d_week_seq#616 AS d_week_seq2#993, sun_sales#1005 AS sun_sales2#994, mon_sales#1006 AS mon_sales2#995, tue_sales#1007 AS tue_sales2#996, wed_sales#1008 AS wed_sales2#997, thu_sales#1009 AS thu_sales2#998, fri_sales#1010 AS fri_sales2#999, sat_sales#1011 AS sat_sales2#1000]
                     +- SortMergeJoin [d_week_seq#616], [d_week_seq#1044], Inner
                        :- Sort [d_week_seq#616 ASC NULLS FIRST], false, 0
                        :  +- HashAggregate(keys=[d_week_seq#616], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN sales_price#1002 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN sales_price#1002 END))], output=[d_week_seq#616, sun_sales#1005, mon_sales#1006, tue_sales#1007, wed_sales#1008, thu_sales#1009, fri_sales#1010, sat_sales#1011])
                        :     +- Exchange hashpartitioning(d_week_seq#616, 200), ENSURE_REQUIREMENTS, [id=#3609]
                        :        +- HashAggregate(keys=[d_week_seq#616], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN sales_price#1002 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN sales_price#1002 END))], output=[d_week_seq#616, sum#1111L, sum#1112L, sum#1113L, sum#1114L, sum#1115L, sum#1116L, sum#1117L])
                        :           +- Project [sales_price#1002, d_week_seq#616, d_day_name#626]
                        :              +- SortMergeJoin [sold_date_sk#1001], [d_date_sk#612], Inner
                        :                 :- Sort [sold_date_sk#1001 ASC NULLS FIRST], false, 0
                        :                 :  +- Exchange hashpartitioning(sold_date_sk#1001, 200), ENSURE_REQUIREMENTS, [id=#3601]
                        :                 :     +- Union
                        :                 :        :- Project [ws_sold_date_sk#476 AS sold_date_sk#1001, ws_ext_sales_price#499 AS sales_price#1002]
                        :                 :        :  +- Filter isnotnull(ws_sold_date_sk#476)
                        :                 :        :     +- FileScan parquet [ws_sold_date_sk#476,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_ext_sales_price:decimal(7,2)>
                        :                 :        +- Project [cs_sold_date_sk#544 AS sold_date_sk#1003, cs_ext_sales_price#567 AS sales_price#1004]
                        :                 :           +- Filter isnotnull(cs_sold_date_sk#544)
                        :                 :              +- FileScan parquet [cs_sold_date_sk#544,cs_ext_sales_price#567] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ext_sales_price:decimal(7,2)>
                        :                 +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                        :                    +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#3602]
                        :                       +- Filter (isnotnull(d_date_sk#612) AND isnotnull(d_week_seq#616))
                        :                          +- FileScan parquet [d_date_sk#612,d_week_seq#616,d_day_name#626] Batched: true, DataFilters: [isnotnull(d_date_sk#612), isnotnull(d_week_seq#616)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
                        +- Sort [d_week_seq#1044 ASC NULLS FIRST], false, 0
                           +- Exchange hashpartitioning(d_week_seq#1044, 200), ENSURE_REQUIREMENTS, [id=#3613]
                              +- Project [d_week_seq#1044]
                                 +- Filter ((isnotnull(d_year#1046) AND (d_year#1046 = 2000)) AND isnotnull(d_week_seq#1044))
                                    +- FileScan parquet [d_week_seq#1044,d_year#1046] Batched: true, DataFilters: [isnotnull(d_year#1046), (d_year#1046 = 2000), isnotnull(d_week_seq#1044)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_week_seq)], ReadSchema: struct<d_week_seq:int,d_year:int>
