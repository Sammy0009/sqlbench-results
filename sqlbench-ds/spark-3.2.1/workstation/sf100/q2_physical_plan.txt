AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(13) Sort [d_week_seq1#891 ASC NULLS FIRST], true, 0
   +- AQEShuffleRead coalesced
      +- ShuffleQueryStage 10
         +- Exchange rangepartitioning(d_week_seq1#891 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#2237]
            +- *(12) Project [d_week_seq1#891, round(CheckOverflow((promote_precision(sun_sales1#892) / promote_precision(sun_sales2#900)), DecimalType(37,20), true), 2) AS round((sun_sales1 / sun_sales2), 2)#981, round(CheckOverflow((promote_precision(mon_sales1#893) / promote_precision(mon_sales2#901)), DecimalType(37,20), true), 2) AS round((mon_sales1 / mon_sales2), 2)#982, round(CheckOverflow((promote_precision(tue_sales1#894) / promote_precision(tue_sales2#902)), DecimalType(37,20), true), 2) AS round((tue_sales1 / tue_sales2), 2)#983, round(CheckOverflow((promote_precision(wed_sales1#895) / promote_precision(wed_sales2#903)), DecimalType(37,20), true), 2) AS round((wed_sales1 / wed_sales2), 2)#984, round(CheckOverflow((promote_precision(thu_sales1#896) / promote_precision(thu_sales2#904)), DecimalType(37,20), true), 2) AS round((thu_sales1 / thu_sales2), 2)#985, round(CheckOverflow((promote_precision(fri_sales1#897) / promote_precision(fri_sales2#905)), DecimalType(37,20), true), 2) AS round((fri_sales1 / fri_sales2), 2)#986, round(CheckOverflow((promote_precision(sat_sales1#898) / promote_precision(sat_sales2#906)), DecimalType(37,20), true), 2) AS round((sat_sales1 / sat_sales2), 2)#987]
               +- *(12) BroadcastHashJoin [d_week_seq1#891], [(d_week_seq2#899 - 53)], Inner, BuildRight, false
                  :- *(12) Project [d_week_seq#602 AS d_week_seq1#891, sun_sales#911 AS sun_sales1#892, mon_sales#912 AS mon_sales1#893, tue_sales#913 AS tue_sales1#894, wed_sales#914 AS wed_sales1#895, thu_sales#915 AS thu_sales1#896, fri_sales#916 AS fri_sales1#897, sat_sales#917 AS sat_sales1#898]
                  :  +- *(12) BroadcastHashJoin [d_week_seq#602], [d_week_seq#922], Inner, BuildRight, false
                  :     :- *(12) HashAggregate(keys=[d_week_seq#602], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN sales_price#908 END))], output=[d_week_seq#602, sun_sales#911, mon_sales#912, tue_sales#913, wed_sales#914, thu_sales#915, fri_sales#916, sat_sales#917])
                  :     :  +- AQEShuffleRead coalesced
                  :     :     +- ShuffleQueryStage 5
                  :     :        +- Exchange hashpartitioning(d_week_seq#602, 200), ENSURE_REQUIREMENTS, [id=#1920]
                  :     :           +- *(7) HashAggregate(keys=[d_week_seq#602], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN sales_price#908 END))], output=[d_week_seq#602, sum#1003L, sum#1004L, sum#1005L, sum#1006L, sum#1007L, sum#1008L, sum#1009L])
                  :     :              +- *(7) Project [sales_price#908, d_week_seq#602, d_day_name#612]
                  :     :                 +- *(7) BroadcastHashJoin [sold_date_sk#907], [d_date_sk#598], Inner, BuildRight, false
                  :     :                    :- Union
                  :     :                    :  :- *(5) Project [ws_sold_date_sk#384 AS sold_date_sk#907, ws_ext_sales_price#407 AS sales_price#908]
                  :     :                    :  :  +- *(5) Filter isnotnull(ws_sold_date_sk#384)
                  :     :                    :  :     +- *(5) ColumnarToRow
                  :     :                    :  :        +- FileScan parquet [ws_sold_date_sk#384,ws_ext_sales_price#407] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#384)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_ext_sales_price:decimal(7,2)>
                  :     :                    :  +- *(6) Project [cs_sold_date_sk#118 AS sold_date_sk#909, cs_ext_sales_price#141 AS sales_price#910]
                  :     :                    :     +- *(6) Filter isnotnull(cs_sold_date_sk#118)
                  :     :                    :        +- *(6) ColumnarToRow
                  :     :                    :           +- FileScan parquet [cs_sold_date_sk#118,cs_ext_sales_price#141] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#118)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ext_sales_price:decimal(7,2)>
                  :     :                    +- BroadcastQueryStage 0
                  :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#1486]
                  :     :                          +- *(1) Filter (isnotnull(d_date_sk#598) AND isnotnull(d_week_seq#602))
                  :     :                             +- *(1) ColumnarToRow
                  :     :                                +- FileScan parquet [d_date_sk#598,d_week_seq#602,d_day_name#612] Batched: true, DataFilters: [isnotnull(d_date_sk#598), isnotnull(d_week_seq#602)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
                  :     +- BroadcastQueryStage 1
                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#1508]
                  :           +- *(2) Project [d_week_seq#922]
                  :              +- *(2) Filter ((isnotnull(d_year#924) AND (d_year#924 = 1999)) AND isnotnull(d_week_seq#922))
                  :                 +- *(2) ColumnarToRow
                  :                    +- FileScan parquet [d_week_seq#922,d_year#924] Batched: true, DataFilters: [isnotnull(d_year#924), (d_year#924 = 1999), isnotnull(d_week_seq#922)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_week_seq)], ReadSchema: struct<d_week_seq:int,d_year:int>
                  +- BroadcastQueryStage 9
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast((input[0, int, true] - 53) as bigint)),false), [id=#2185]
                        +- AQEShuffleRead local
                           +- ShuffleQueryStage 8
                              +- Exchange hashpartitioning((d_week_seq2#899 - 53), 200), ENSURE_REQUIREMENTS, [id=#2091]
                                 +- *(11) Project [d_week_seq#602 AS d_week_seq2#899, sun_sales#911 AS sun_sales2#900, mon_sales#912 AS mon_sales2#901, tue_sales#913 AS tue_sales2#902, wed_sales#914 AS wed_sales2#903, thu_sales#915 AS thu_sales2#904, fri_sales#916 AS fri_sales2#905, sat_sales#917 AS sat_sales2#906]
                                    +- *(11) BroadcastHashJoin [d_week_seq#602], [d_week_seq#950], Inner, BuildRight, false
                                       :- *(11) HashAggregate(keys=[d_week_seq#602], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN sales_price#908 END))], output=[d_week_seq#602, sun_sales#911, mon_sales#912, tue_sales#913, wed_sales#914, thu_sales#915, fri_sales#916, sat_sales#917])
                                       :  +- AQEShuffleRead coalesced
                                       :     +- ShuffleQueryStage 7
                                       :        +- ReusedExchange [d_week_seq#602, sum#1017L, sum#1018L, sum#1019L, sum#1020L, sum#1021L, sum#1022L, sum#1023L], Exchange hashpartitioning(d_week_seq#602, 200), ENSURE_REQUIREMENTS, [id=#1920]
                                       +- BroadcastQueryStage 4
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#1552]
                                             +- *(4) Project [d_week_seq#950]
                                                +- *(4) Filter ((isnotnull(d_year#952) AND (d_year#952 = 2000)) AND isnotnull(d_week_seq#950))
                                                   +- *(4) ColumnarToRow
                                                      +- FileScan parquet [d_week_seq#950,d_year#952] Batched: true, DataFilters: [isnotnull(d_year#952), (d_year#952 = 2000), isnotnull(d_week_seq#950)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_week_seq)], ReadSchema: struct<d_week_seq:int,d_year:int>
+- == Initial Plan ==
   Sort [d_week_seq1#891 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(d_week_seq1#891 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#1395]
      +- Project [d_week_seq1#891, round(CheckOverflow((promote_precision(sun_sales1#892) / promote_precision(sun_sales2#900)), DecimalType(37,20), true), 2) AS round((sun_sales1 / sun_sales2), 2)#981, round(CheckOverflow((promote_precision(mon_sales1#893) / promote_precision(mon_sales2#901)), DecimalType(37,20), true), 2) AS round((mon_sales1 / mon_sales2), 2)#982, round(CheckOverflow((promote_precision(tue_sales1#894) / promote_precision(tue_sales2#902)), DecimalType(37,20), true), 2) AS round((tue_sales1 / tue_sales2), 2)#983, round(CheckOverflow((promote_precision(wed_sales1#895) / promote_precision(wed_sales2#903)), DecimalType(37,20), true), 2) AS round((wed_sales1 / wed_sales2), 2)#984, round(CheckOverflow((promote_precision(thu_sales1#896) / promote_precision(thu_sales2#904)), DecimalType(37,20), true), 2) AS round((thu_sales1 / thu_sales2), 2)#985, round(CheckOverflow((promote_precision(fri_sales1#897) / promote_precision(fri_sales2#905)), DecimalType(37,20), true), 2) AS round((fri_sales1 / fri_sales2), 2)#986, round(CheckOverflow((promote_precision(sat_sales1#898) / promote_precision(sat_sales2#906)), DecimalType(37,20), true), 2) AS round((sat_sales1 / sat_sales2), 2)#987]
         +- SortMergeJoin [d_week_seq1#891], [(d_week_seq2#899 - 53)], Inner
            :- Sort [d_week_seq1#891 ASC NULLS FIRST], false, 0
            :  +- Project [d_week_seq#602 AS d_week_seq1#891, sun_sales#911 AS sun_sales1#892, mon_sales#912 AS mon_sales1#893, tue_sales#913 AS tue_sales1#894, wed_sales#914 AS wed_sales1#895, thu_sales#915 AS thu_sales1#896, fri_sales#916 AS fri_sales1#897, sat_sales#917 AS sat_sales1#898]
            :     +- BroadcastHashJoin [d_week_seq#602], [d_week_seq#922], Inner, BuildRight, false
            :        :- HashAggregate(keys=[d_week_seq#602], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN sales_price#908 END))], output=[d_week_seq#602, sun_sales#911, mon_sales#912, tue_sales#913, wed_sales#914, thu_sales#915, fri_sales#916, sat_sales#917])
            :        :  +- Exchange hashpartitioning(d_week_seq#602, 200), ENSURE_REQUIREMENTS, [id=#1370]
            :        :     +- HashAggregate(keys=[d_week_seq#602], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN sales_price#908 END))], output=[d_week_seq#602, sum#1003L, sum#1004L, sum#1005L, sum#1006L, sum#1007L, sum#1008L, sum#1009L])
            :        :        +- Project [sales_price#908, d_week_seq#602, d_day_name#612]
            :        :           +- BroadcastHashJoin [sold_date_sk#907], [d_date_sk#598], Inner, BuildRight, false
            :        :              :- Union
            :        :              :  :- Project [ws_sold_date_sk#384 AS sold_date_sk#907, ws_ext_sales_price#407 AS sales_price#908]
            :        :              :  :  +- Filter isnotnull(ws_sold_date_sk#384)
            :        :              :  :     +- FileScan parquet [ws_sold_date_sk#384,ws_ext_sales_price#407] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#384)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_ext_sales_price:decimal(7,2)>
            :        :              :  +- Project [cs_sold_date_sk#118 AS sold_date_sk#909, cs_ext_sales_price#141 AS sales_price#910]
            :        :              :     +- Filter isnotnull(cs_sold_date_sk#118)
            :        :              :        +- FileScan parquet [cs_sold_date_sk#118,cs_ext_sales_price#141] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#118)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ext_sales_price:decimal(7,2)>
            :        :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#1365]
            :        :                 +- Filter (isnotnull(d_date_sk#598) AND isnotnull(d_week_seq#602))
            :        :                    +- FileScan parquet [d_date_sk#598,d_week_seq#602,d_day_name#612] Batched: true, DataFilters: [isnotnull(d_date_sk#598), isnotnull(d_week_seq#602)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
            :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#1373]
            :           +- Project [d_week_seq#922]
            :              +- Filter ((isnotnull(d_year#924) AND (d_year#924 = 1999)) AND isnotnull(d_week_seq#922))
            :                 +- FileScan parquet [d_week_seq#922,d_year#924] Batched: true, DataFilters: [isnotnull(d_year#924), (d_year#924 = 1999), isnotnull(d_week_seq#922)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_week_seq)], ReadSchema: struct<d_week_seq:int,d_year:int>
            +- Sort [(d_week_seq2#899 - 53) ASC NULLS FIRST], false, 0
               +- Exchange hashpartitioning((d_week_seq2#899 - 53), 200), ENSURE_REQUIREMENTS, [id=#1389]
                  +- Project [d_week_seq#602 AS d_week_seq2#899, sun_sales#911 AS sun_sales2#900, mon_sales#912 AS mon_sales2#901, tue_sales#913 AS tue_sales2#902, wed_sales#914 AS wed_sales2#903, thu_sales#915 AS thu_sales2#904, fri_sales#916 AS fri_sales2#905, sat_sales#917 AS sat_sales2#906]
                     +- BroadcastHashJoin [d_week_seq#602], [d_week_seq#950], Inner, BuildRight, false
                        :- HashAggregate(keys=[d_week_seq#602], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN sales_price#908 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN sales_price#908 END))], output=[d_week_seq#602, sun_sales#911, mon_sales#912, tue_sales#913, wed_sales#914, thu_sales#915, fri_sales#916, sat_sales#917])
                        :  +- Exchange hashpartitioning(d_week_seq#602, 200), ENSURE_REQUIREMENTS, [id=#1381]
                        :     +- HashAggregate(keys=[d_week_seq#602], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN sales_price#908 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN sales_price#908 END))], output=[d_week_seq#602, sum#1017L, sum#1018L, sum#1019L, sum#1020L, sum#1021L, sum#1022L, sum#1023L])
                        :        +- Project [sales_price#908, d_week_seq#602, d_day_name#612]
                        :           +- BroadcastHashJoin [sold_date_sk#907], [d_date_sk#598], Inner, BuildRight, false
                        :              :- Union
                        :              :  :- Project [ws_sold_date_sk#384 AS sold_date_sk#907, ws_ext_sales_price#407 AS sales_price#908]
                        :              :  :  +- Filter isnotnull(ws_sold_date_sk#384)
                        :              :  :     +- FileScan parquet [ws_sold_date_sk#384,ws_ext_sales_price#407] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#384)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_ext_sales_price:decimal(7,2)>
                        :              :  +- Project [cs_sold_date_sk#118 AS sold_date_sk#909, cs_ext_sales_price#141 AS sales_price#910]
                        :              :     +- Filter isnotnull(cs_sold_date_sk#118)
                        :              :        +- FileScan parquet [cs_sold_date_sk#118,cs_ext_sales_price#141] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#118)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ext_sales_price:decimal(7,2)>
                        :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#1376]
                        :                 +- Filter (isnotnull(d_date_sk#598) AND isnotnull(d_week_seq#602))
                        :                    +- FileScan parquet [d_date_sk#598,d_week_seq#602,d_day_name#612] Batched: true, DataFilters: [isnotnull(d_date_sk#598), isnotnull(d_week_seq#602)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#1384]
                           +- Project [d_week_seq#950]
                              +- Filter ((isnotnull(d_year#952) AND (d_year#952 = 2000)) AND isnotnull(d_week_seq#950))
                                 +- FileScan parquet [d_week_seq#950,d_year#952] Batched: true, DataFilters: [isnotnull(d_year#952), (d_year#952 = 2000), isnotnull(d_week_seq#950)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_week_seq)], ReadSchema: struct<d_week_seq:int,d_year:int>
