AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_category#14846 ASC NULLS FIRST,i_class#14847 ASC NULLS FIRST,i_brand#14848 ASC NULLS FIRST,i_product_name#14849 ASC NULLS FIRST,d_year#14850 ASC NULLS FIRST,d_qoy#14851 ASC NULLS FIRST,d_moy#14852 ASC NULLS FIRST,s_store_id#14853 ASC NULLS FIRST,sumsales#14832 ASC NULLS FIRST,rk#14833 ASC NULLS FIRST], output=[i_category#14846,i_class#14847,i_brand#14848,i_product_name#14849,d_year#14850,d_qoy#14851,d_moy#14852,s_store_id#14853,sumsales#14832,rk#14833])
   +- *(7) Filter (rk#14833 <= 100)
      +- Window [rank(sumsales#14832) windowspecdefinition(i_category#14846, sumsales#14832 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#14833], [i_category#14846], [sumsales#14832 DESC NULLS LAST]
         +- *(6) Sort [i_category#14846 ASC NULLS FIRST, sumsales#14832 DESC NULLS LAST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 4
                  +- Exchange hashpartitioning(i_category#14846, 200), ENSURE_REQUIREMENTS, [id=#113982]
                     +- *(5) HashAggregate(keys=[i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, spark_grouping_id#14845L], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#677 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#674 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, sumsales#14832])
                        +- ShuffleQueryStage 3
                           +- Exchange hashpartitioning(i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, spark_grouping_id#14845L, 200), ENSURE_REQUIREMENTS, [id=#113927]
                              +- *(4) HashAggregate(keys=[i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, spark_grouping_id#14845L], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#677 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#674 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, spark_grouping_id#14845L, sum#14872, isEmpty#14873])
                                 +- *(4) Expand [[ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, d_year#604, d_qoy#608, d_moy#606, s_store_id#327, 0], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, d_year#604, d_qoy#608, d_moy#606, null, 1], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, d_year#604, d_qoy#608, null, null, 3], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, d_year#604, null, null, null, 7], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, null, null, null, null, 15], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, null, null, null, null, null, 31], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, null, null, null, null, null, null, 63], [ss_quantity#674, ss_sales_price#677, i_category#512, null, null, null, null, null, null, null, 127], [ss_quantity#674, ss_sales_price#677, null, null, null, null, null, null, null, null, 255]], [ss_quantity#674, ss_sales_price#677, i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, spark_grouping_id#14845L]
                                    +- *(4) Project [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, d_year#604, d_qoy#608, d_moy#606, s_store_id#327]
                                       +- *(4) BroadcastHashJoin [ss_item_sk#666], [i_item_sk#500], Inner, BuildRight, false
                                          :- *(4) Project [ss_item_sk#666, ss_quantity#674, ss_sales_price#677, d_year#604, d_moy#606, d_qoy#608, s_store_id#327]
                                          :  +- *(4) BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                                          :     :- *(4) Project [ss_item_sk#666, ss_store_sk#671, ss_quantity#674, ss_sales_price#677, d_year#604, d_moy#606, d_qoy#608]
                                          :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
                                          :     :     :- *(4) Filter ((isnotnull(ss_sold_date_sk#664) AND isnotnull(ss_store_sk#671)) AND isnotnull(ss_item_sk#666))
                                          :     :     :  +- *(4) ColumnarToRow
                                          :     :     :     +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_store_sk#671,ss_quantity#674,ss_sales_price#677] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#664), isnotnull(ss_store_sk#671), isnotnull(ss_item_sk#666)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(...
                                          :     :     +- BroadcastQueryStage 0
                                          :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#113632]
                                          :     :           +- *(1) Project [d_date_sk#598, d_year#604, d_moy#606, d_qoy#608]
                                          :     :              +- *(1) Filter (((isnotnull(d_month_seq#601) AND (d_month_seq#601 >= 1208)) AND (d_month_seq#601 <= 1219)) AND isnotnull(d_date_sk#598))
                                          :     :                 +- *(1) ColumnarToRow
                                          :     :                    +- FileScan parquet [d_date_sk#598,d_month_seq#601,d_year#604,d_moy#606,d_qoy#608] Batched: true, DataFilters: [isnotnull(d_month_seq#601), (d_month_seq#601 >= 1208), (d_month_seq#601 <= 1219), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1208), LessThanOrEqual(d_month_seq,1219),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
                                          :     +- BroadcastQueryStage 1
                                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#113651]
                                          :           +- *(2) Filter isnotnull(s_store_sk#326)
                                          :              +- *(2) ColumnarToRow
                                          :                 +- FileScan parquet [s_store_sk#326,s_store_id#327] Batched: true, DataFilters: [isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                                          +- BroadcastQueryStage 2
                                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#113668]
                                                +- *(3) Filter isnotnull(i_item_sk#500)
                                                   +- *(3) ColumnarToRow
                                                      +- FileScan parquet [i_item_sk#500,i_brand#508,i_class#510,i_category#512,i_product_name#521] Batched: true, DataFilters: [isnotnull(i_item_sk#500)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_category#14846 ASC NULLS FIRST,i_class#14847 ASC NULLS FIRST,i_brand#14848 ASC NULLS FIRST,i_product_name#14849 ASC NULLS FIRST,d_year#14850 ASC NULLS FIRST,d_qoy#14851 ASC NULLS FIRST,d_moy#14852 ASC NULLS FIRST,s_store_id#14853 ASC NULLS FIRST,sumsales#14832 ASC NULLS FIRST,rk#14833 ASC NULLS FIRST], output=[i_category#14846,i_class#14847,i_brand#14848,i_product_name#14849,d_year#14850,d_qoy#14851,d_moy#14852,s_store_id#14853,sumsales#14832,rk#14833])
   +- Filter (rk#14833 <= 100)
      +- Window [rank(sumsales#14832) windowspecdefinition(i_category#14846, sumsales#14832 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#14833], [i_category#14846], [sumsales#14832 DESC NULLS LAST]
         +- Sort [i_category#14846 ASC NULLS FIRST, sumsales#14832 DESC NULLS LAST], false, 0
            +- Exchange hashpartitioning(i_category#14846, 200), ENSURE_REQUIREMENTS, [id=#113579]
               +- HashAggregate(keys=[i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, spark_grouping_id#14845L], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#677 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#674 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, sumsales#14832])
                  +- Exchange hashpartitioning(i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, spark_grouping_id#14845L, 200), ENSURE_REQUIREMENTS, [id=#113576]
                     +- HashAggregate(keys=[i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, spark_grouping_id#14845L], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#677 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#674 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, spark_grouping_id#14845L, sum#14872, isEmpty#14873])
                        +- Expand [[ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, d_year#604, d_qoy#608, d_moy#606, s_store_id#327, 0], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, d_year#604, d_qoy#608, d_moy#606, null, 1], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, d_year#604, d_qoy#608, null, null, 3], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, d_year#604, null, null, null, 7], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, null, null, null, null, 15], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, null, null, null, null, null, 31], [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, null, null, null, null, null, null, 63], [ss_quantity#674, ss_sales_price#677, i_category#512, null, null, null, null, null, null, null, 127], [ss_quantity#674, ss_sales_price#677, null, null, null, null, null, null, null, null, 255]], [ss_quantity#674, ss_sales_price#677, i_category#14846, i_class#14847, i_brand#14848, i_product_name#14849, d_year#14850, d_qoy#14851, d_moy#14852, s_store_id#14853, spark_grouping_id#14845L]
                           +- Project [ss_quantity#674, ss_sales_price#677, i_category#512, i_class#510, i_brand#508, i_product_name#521, d_year#604, d_qoy#608, d_moy#606, s_store_id#327]
                              +- BroadcastHashJoin [ss_item_sk#666], [i_item_sk#500], Inner, BuildRight, false
                                 :- Project [ss_item_sk#666, ss_quantity#674, ss_sales_price#677, d_year#604, d_moy#606, d_qoy#608, s_store_id#327]
                                 :  +- BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                                 :     :- Project [ss_item_sk#666, ss_store_sk#671, ss_quantity#674, ss_sales_price#677, d_year#604, d_moy#606, d_qoy#608]
                                 :     :  +- BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
                                 :     :     :- Filter ((isnotnull(ss_sold_date_sk#664) AND isnotnull(ss_store_sk#671)) AND isnotnull(ss_item_sk#666))
                                 :     :     :  +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_store_sk#671,ss_quantity#674,ss_sales_price#677] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#664), isnotnull(ss_store_sk#671), isnotnull(ss_item_sk#666)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(...
                                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#113562]
                                 :     :        +- Project [d_date_sk#598, d_year#604, d_moy#606, d_qoy#608]
                                 :     :           +- Filter (((isnotnull(d_month_seq#601) AND (d_month_seq#601 >= 1208)) AND (d_month_seq#601 <= 1219)) AND isnotnull(d_date_sk#598))
                                 :     :              +- FileScan parquet [d_date_sk#598,d_month_seq#601,d_year#604,d_moy#606,d_qoy#608] Batched: true, DataFilters: [isnotnull(d_month_seq#601), (d_month_seq#601 >= 1208), (d_month_seq#601 <= 1219), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1208), LessThanOrEqual(d_month_seq,1219),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#113566]
                                 :        +- Filter isnotnull(s_store_sk#326)
                                 :           +- FileScan parquet [s_store_sk#326,s_store_id#327] Batched: true, DataFilters: [isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#113570]
                                    +- Filter isnotnull(i_item_sk#500)
                                       +- FileScan parquet [i_item_sk#500,i_brand#508,i_class#510,i_category#512,i_product_name#521] Batched: true, DataFilters: [isnotnull(i_item_sk#500)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
