AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   GpuColumnarToRow false
   +- GpuTopN(limit=100, orderBy=[i_category#24874 ASC NULLS FIRST,i_class#24875 ASC NULLS FIRST,i_brand#24876 ASC NULLS FIRST,i_product_name#24877 ASC NULLS FIRST,d_year#24878 ASC NULLS FIRST,d_qoy#24879 ASC NULLS FIRST,d_moy#24880 ASC NULLS FIRST,s_store_id#24881 ASC NULLS FIRST,sumsales#24860 ASC NULLS FIRST,rk#24861 ASC NULLS FIRST], output=[i_category#24874,i_class#24875,i_brand#24876,i_product_name#24877,d_year#24878,d_qoy#24879,d_moy#24880,s_store_id#24881,sumsales#24860,rk#24861])
      +- GpuShuffleCoalesce 2147483647
         +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#418614]
            +- GpuTopN(limit=100, orderBy=[i_category#24874 ASC NULLS FIRST,i_class#24875 ASC NULLS FIRST,i_brand#24876 ASC NULLS FIRST,i_product_name#24877 ASC NULLS FIRST,d_year#24878 ASC NULLS FIRST,d_qoy#24879 ASC NULLS FIRST,d_moy#24880 ASC NULLS FIRST,s_store_id#24881 ASC NULLS FIRST,sumsales#24860 ASC NULLS FIRST,rk#24861 ASC NULLS FIRST], output=[i_category#24874,i_class#24875,i_brand#24876,i_product_name#24877,d_year#24878,d_qoy#24879,d_moy#24880,s_store_id#24881,sumsales#24860,rk#24861])
               +- GpuCoalesceBatches targetsize(2147483647)
                  +- GpuFilter (rk#24861 <= 100), true
                     +- GpuRunningWindow [i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, sumsales#24860, gpurank(sumsales#24860) gpuwindowspecdefinition(i_category#24874, sumsales#24860 DESC NULLS LAST, gpuspecifiedwindowframe(RowFrame, gpuspecialframeboundary(unboundedpreceding$()), gpuspecialframeboundary(currentrow$()))) AS rk#24861], [i_category#24874], [sumsales#24860 DESC NULLS LAST]
                        +- GpuSort [i_category#24874 ASC NULLS FIRST, sumsales#24860 DESC NULLS LAST], false, com.nvidia.spark.rapids.OutOfCoreSort$@59d99269
                           +- GpuRowToColumnar targetsize(2147483647)
                              +- AQEShuffleRead coalesced
                                 +- ShuffleQueryStage 7
                                    +- Exchange hashpartitioning(i_category#24874, 200), ENSURE_REQUIREMENTS, [id=#418512]
                                       +- *(2) HashAggregate(keys=[i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, spark_grouping_id#24873L], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#265 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#262 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, sumsales#24860])
                                          +- AQEShuffleRead coalesced
                                             +- ShuffleQueryStage 6
                                                +- Exchange hashpartitioning(i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, spark_grouping_id#24873L, 200), ENSURE_REQUIREMENTS, [id=#418436]
                                                   +- *(1) HashAggregate(keys=[i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, spark_grouping_id#24873L], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#265 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#262 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, spark_grouping_id#24873L, sum#24900, isEmpty#24901])
                                                      +- GpuColumnarToRow false
                                                         +- GpuExpand [[ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, s_store_id#713, 0], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, null, 1], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, null, null, 3], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, null, null, null, 7], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, null, null, null, null, 15], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, null, null, null, null, null, 31], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, null, null, null, null, null, null, 63], [ss_quantity#262, ss_sales_price#265, i_category#680, null, null, null, null, null, null, null, 127], [ss_quantity#262, ss_sales_price#265, null, null, null, null, null, null, null, null, 255]], [ss_quantity#262, ss_sales_price#265, i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, spark_grouping_id#24873L]
                                                            +- GpuProject [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, s_store_id#713], true
                                                               +- GpuShuffledHashJoin [ss_item_sk#254], [i_item_sk#668], Inner, GpuBuildRight, false
                                                                  :- GpuShuffleCoalesce 2147483647
                                                                  :  +- GpuCustomShuffleReader coalesced
                                                                  :     +- ShuffleQueryStage 5
                                                                  :        +- GpuColumnarExchange gpuhashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#418241]
                                                                  :           +- GpuProject [ss_item_sk#254, ss_quantity#262, ss_sales_price#265, s_store_id#713, d_year#618, d_moy#620, d_qoy#622], true
                                                                  :              +- GpuShuffledHashJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner, GpuBuildRight, false
                                                                  :                 :- GpuShuffleCoalesce 2147483647
                                                                  :                 :  +- GpuCustomShuffleReader coalesced
                                                                  :                 :     +- ShuffleQueryStage 4
                                                                  :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#418025]
                                                                  :                 :           +- GpuProject [ss_sold_date_sk#252, ss_item_sk#254, ss_quantity#262, ss_sales_price#265, s_store_id#713], true
                                                                  :                 :              +- GpuShuffledHashJoin [ss_store_sk#259], [s_store_sk#712], Inner, GpuBuildRight, false
                                                                  :                 :                 :- GpuShuffleCoalesce 2147483647
                                                                  :                 :                 :  +- GpuCustomShuffleReader coalesced
                                                                  :                 :                 :     +- ShuffleQueryStage 0
                                                                  :                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#417232]
                                                                  :                 :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                  :                 :                 :              +- GpuFilter ((gpuisnotnull(ss_store_sk#259) AND gpuisnotnull(ss_sold_date_sk#252)) AND gpuisnotnull(ss_item_sk#254)), true
                                                                  :                 :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_quantity#262,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_store_sk#259), isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(...
                                                                  :                 :                 +- GpuCustomShuffleReader coalesced
                                                                  :                 :                    +- ShuffleQueryStage 1
                                                                  :                 :                       +- GpuColumnarExchange gpuhashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#417260]
                                                                  :                 :                          +- GpuCoalesceBatches targetsize(2147483647)
                                                                  :                 :                             +- GpuFilter gpuisnotnull(s_store_sk#712), true
                                                                  :                 :                                +- GpuFileGpuScan parquet [s_store_sk#712,s_store_id#713] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                                                                  :                 +- GpuCustomShuffleReader coalesced
                                                                  :                    +- ShuffleQueryStage 2
                                                                  :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#417301]
                                                                  :                          +- GpuProject [d_date_sk#612, d_year#618, d_moy#620, d_qoy#622], true
                                                                  :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                  :                                +- GpuFilter (((gpuisnotnull(d_month_seq#615) AND (d_month_seq#615 >= 1208)) AND (d_month_seq#615 <= 1219)) AND gpuisnotnull(d_date_sk#612)), true
                                                                  :                                   +- GpuFileGpuScan parquet [d_date_sk#612,d_month_seq#615,d_year#618,d_moy#620,d_qoy#622] Batched: true, DataFilters: [isnotnull(d_month_seq#615), (d_month_seq#615 >= 1208), (d_month_seq#615 <= 1219), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1208), LessThanOrEqual(d_month_seq,1219),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
                                                                  +- GpuCustomShuffleReader coalesced
                                                                     +- ShuffleQueryStage 3
                                                                        +- GpuColumnarExchange gpuhashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#417335]
                                                                           +- GpuCoalesceBatches targetsize(2147483647)
                                                                              +- GpuFilter gpuisnotnull(i_item_sk#668), true
                                                                                 +- GpuFileGpuScan parquet [i_item_sk#668,i_brand#676,i_class#678,i_category#680,i_product_name#689] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_category#24874 ASC NULLS FIRST,i_class#24875 ASC NULLS FIRST,i_brand#24876 ASC NULLS FIRST,i_product_name#24877 ASC NULLS FIRST,d_year#24878 ASC NULLS FIRST,d_qoy#24879 ASC NULLS FIRST,d_moy#24880 ASC NULLS FIRST,s_store_id#24881 ASC NULLS FIRST,sumsales#24860 ASC NULLS FIRST,rk#24861 ASC NULLS FIRST], output=[i_category#24874,i_class#24875,i_brand#24876,i_product_name#24877,d_year#24878,d_qoy#24879,d_moy#24880,s_store_id#24881,sumsales#24860,rk#24861])
   +- Filter (rk#24861 <= 100)
      +- Window [rank(sumsales#24860) windowspecdefinition(i_category#24874, sumsales#24860 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#24861], [i_category#24874], [sumsales#24860 DESC NULLS LAST]
         +- Sort [i_category#24874 ASC NULLS FIRST, sumsales#24860 DESC NULLS LAST], false, 0
            +- Exchange hashpartitioning(i_category#24874, 200), ENSURE_REQUIREMENTS, [id=#416747]
               +- HashAggregate(keys=[i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, spark_grouping_id#24873L], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#265 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#262 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, sumsales#24860])
                  +- Exchange hashpartitioning(i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, spark_grouping_id#24873L, 200), ENSURE_REQUIREMENTS, [id=#416744]
                     +- HashAggregate(keys=[i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, spark_grouping_id#24873L], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#265 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#262 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, spark_grouping_id#24873L, sum#24900, isEmpty#24901])
                        +- Expand [[ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, s_store_id#713, 0], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, null, 1], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, null, null, 3], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, null, null, null, 7], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, null, null, null, null, 15], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, null, null, null, null, null, 31], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, null, null, null, null, null, null, 63], [ss_quantity#262, ss_sales_price#265, i_category#680, null, null, null, null, null, null, null, 127], [ss_quantity#262, ss_sales_price#265, null, null, null, null, null, null, null, null, 255]], [ss_quantity#262, ss_sales_price#265, i_category#24874, i_class#24875, i_brand#24876, i_product_name#24877, d_year#24878, d_qoy#24879, d_moy#24880, s_store_id#24881, spark_grouping_id#24873L]
                           +- Project [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, s_store_id#713]
                              +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                 :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                 :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#416735]
                                 :     +- Project [ss_item_sk#254, ss_quantity#262, ss_sales_price#265, s_store_id#713, d_year#618, d_moy#620, d_qoy#622]
                                 :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                                 :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                                 :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#416727]
                                 :           :     +- Project [ss_sold_date_sk#252, ss_item_sk#254, ss_quantity#262, ss_sales_price#265, s_store_id#713]
                                 :           :        +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                 :           :           :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                 :           :           :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#416719]
                                 :           :           :     +- Filter ((isnotnull(ss_store_sk#259) AND isnotnull(ss_sold_date_sk#252)) AND isnotnull(ss_item_sk#254))
                                 :           :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_quantity#262,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_store_sk#259), isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(...
                                 :           :           +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                 :           :              +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#416720]
                                 :           :                 +- Filter isnotnull(s_store_sk#712)
                                 :           :                    +- FileScan parquet [s_store_sk#712,s_store_id#713] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                                 :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                 :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#416728]
                                 :                 +- Project [d_date_sk#612, d_year#618, d_moy#620, d_qoy#622]
                                 :                    +- Filter (((isnotnull(d_month_seq#615) AND (d_month_seq#615 >= 1208)) AND (d_month_seq#615 <= 1219)) AND isnotnull(d_date_sk#612))
                                 :                       +- FileScan parquet [d_date_sk#612,d_month_seq#615,d_year#618,d_moy#620,d_qoy#622] Batched: true, DataFilters: [isnotnull(d_month_seq#615), (d_month_seq#615 >= 1208), (d_month_seq#615 <= 1219), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1208), LessThanOrEqual(d_month_seq,1219),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
                                 +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                    +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#416736]
                                       +- Filter isnotnull(i_item_sk#668)
                                          +- FileScan parquet [i_item_sk#668,i_brand#676,i_class#678,i_category#680,i_product_name#689] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
