AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   GpuColumnarToRow false
   +- GpuTopN(limit=100, orderBy=[w_warehouse_name#772 ASC NULLS FIRST], output=[w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782,ship_carriers#22645,year#22646,jan_sales#22697,feb_sales#22698,mar_sales#22699,apr_sales#22700,may_sales#22701,jun_sales#22702,jul_sales#22703,aug_sales#22704,sep_sales#22705,oct_sales#22706,nov_sales#22707,dec_sales#22708,jan_sales_per_sq_foot#22709,feb_sales_per_sq_foot#22710,mar_sales_per_sq_foot#22711,apr_sales_per_sq_foot#22712,... 20 more fields])
      +- GpuRowToColumnar targetsize(2147483647)
         +- *(6) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646], functions=[sum(jan_sales#22647), sum(feb_sales#22648), sum(mar_sales#22649), sum(apr_sales#22650), sum(may_sales#22651), sum(jun_sales#22652), sum(jul_sales#22653), sum(aug_sales#22654), sum(sep_sales#22655), sum(oct_sales#22656), sum(nov_sales#22657), sum(dec_sales#22658), sum(CheckOverflow((promote_precision(jan_sales#22647) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#22648) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#22649) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#22650) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#22651) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#22652) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#22653) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#22654) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#22655) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#22656) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#22657) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#22658) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646, jan_sales#22697, feb_sales#22698, mar_sales#22699, apr_sales#22700, may_sales#22701, jun_sales#22702, jul_sales#22703, aug_sales#22704, sep_sales#22705, oct_sales#22706, nov_sales#22707, dec_sales#22708, jan_sales_per_sq_foot#22709, feb_sales_per_sq_foot#22710, mar_sales_per_sq_foot#22711, apr_sales_per_sq_foot#22712, ... 20 more fields])
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 22
                  +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646, 200), ENSURE_REQUIREMENTS, [id=#416562]
                     +- *(5) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646], functions=[partial_sum(jan_sales#22647), partial_sum(feb_sales#22648), partial_sum(mar_sales#22649), partial_sum(apr_sales#22650), partial_sum(may_sales#22651), partial_sum(jun_sales#22652), partial_sum(jul_sales#22653), partial_sum(aug_sales#22654), partial_sum(sep_sales#22655), partial_sum(oct_sales#22656), partial_sum(nov_sales#22657), partial_sum(dec_sales#22658), partial_sum(CheckOverflow((promote_precision(jan_sales#22647) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#22648) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#22649) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#22650) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#22651) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#22652) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#22653) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#22654) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#22655) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#22656) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#22657) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#22658) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646, sum#22991, isEmpty#22992, sum#22993, isEmpty#22994, sum#22995, isEmpty#22996, sum#22997, isEmpty#22998, sum#22999, isEmpty#23000, sum#23001, isEmpty#23002, sum#23003, isEmpty#23004, sum#23005, isEmpty#23006, ... 56 more fields])
                        +- GpuColumnarToRow false
                           +- GpuUnion
                              :- GpuRowToColumnar targetsize(2147483647)
                              :  +- *(3) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646, jan_sales#22647, feb_sales#22648, mar_sales#22649, apr_sales#22650, may_sales#22651, jun_sales#22652, jul_sales#22653, aug_sales#22654, sep_sales#22655, oct_sales#22656, nov_sales#22657, dec_sales#22658, jan_net#22659, feb_net#22660, mar_net#22661, apr_net#22662, ... 8 more fields])
                              :     +- AQEShuffleRead coalesced
                              :        +- ShuffleQueryStage 18
                              :           +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, 200), ENSURE_REQUIREMENTS, [id=#415677]
                              :              +- *(1) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, sum#23111, isEmpty#23112, sum#23113, isEmpty#23114, sum#23115, isEmpty#23116, sum#23117, isEmpty#23118, sum#23119, isEmpty#23120, sum#23121, isEmpty#23122, sum#23123, isEmpty#23124, sum#23125, isEmpty#23126, sum#23127, ... 31 more fields])
                              :                 +- GpuColumnarToRow false
                              :                    +- GpuProject [ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620], true
                              :                       +- GpuShuffledHashJoin [ws_sold_time_sk#477], [t_time_sk#456], Inner, GpuBuildRight, false
                              :                          :- GpuShuffleCoalesce 2147483647
                              :                          :  +- GpuCustomShuffleReader coalesced
                              :                          :     +- ShuffleQueryStage 17
                              :                          :        +- GpuColumnarExchange gpuhashpartitioning(ws_sold_time_sk#477, 200), ENSURE_REQUIREMENTS, [id=#415387]
                              :                          :           +- GpuProject [ws_sold_time_sk#477, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620], true
                              :                          :              +- GpuShuffledHashJoin [ws_sold_date_sk#476], [d_date_sk#612], Inner, GpuBuildRight, false
                              :                          :                 :- GpuShuffleCoalesce 2147483647
                              :                          :                 :  +- GpuCustomShuffleReader coalesced
                              :                          :                 :     +- ShuffleQueryStage 16
                              :                          :                 :        +- GpuColumnarExchange gpuhashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#415069]
                              :                          :                 :           +- GpuProject [ws_sold_date_sk#476, ws_sold_time_sk#477, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782], true
                              :                          :                 :              +- GpuShuffledHashJoin(skew=true) [ws_ship_mode_sk#490], [sm_ship_mode_sk#444], Inner, GpuBuildRight, true
                              :                          :                 :                 :- GpuShuffleCoalesce 2147483647
                              :                          :                 :                 :  +- GpuCustomShuffleReader coalesced and skewed
                              :                          :                 :                 :     +- ShuffleQueryStage 14
                              :                          :                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(ws_ship_mode_sk#490, 200), ENSURE_REQUIREMENTS, [id=#414313]
                              :                          :                 :                 :           +- GpuProject [ws_sold_date_sk#476, ws_sold_time_sk#477, ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782], true
                              :                          :                 :                 :              +- GpuShuffledHashJoin [ws_warehouse_sk#491], [w_warehouse_sk#770], Inner, GpuBuildRight, false
                              :                          :                 :                 :                 :- GpuShuffleCoalesce 2147483647
                              :                          :                 :                 :                 :  +- GpuCustomShuffleReader coalesced
                              :                          :                 :                 :                 :     +- ShuffleQueryStage 0
                              :                          :                 :                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(ws_warehouse_sk#491, 200), ENSURE_REQUIREMENTS, [id=#412588]
                              :                          :                 :                 :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                              :                          :                 :                 :                 :              +- GpuFilter (((gpuisnotnull(ws_warehouse_sk#491) AND gpuisnotnull(ws_ship_mode_sk#490)) AND gpuisnotnull(ws_sold_date_sk#476)) AND gpuisnotnull(ws_sold_time_sk#477)), true
                              :                          :                 :                 :                 :                 +- GpuFileGpuScan parquet [ws_sold_date_sk#476,ws_sold_time_sk#477,ws_ship_mode_sk#490,ws_warehouse_sk#491,ws_quantity#494,ws_sales_price#497,ws_net_paid_inc_tax#506] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#491), isnotnull(ws_ship_mode_sk#490), isnotnull(ws_sold_date_sk#476), ..., Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_ship_mode_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
                              :                          :                 :                 :                 +- GpuCustomShuffleReader coalesced
                              :                          :                 :                 :                    +- ShuffleQueryStage 1
                              :                          :                 :                 :                       +- GpuColumnarExchange gpuhashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#412616]
                              :                          :                 :                 :                          +- GpuCoalesceBatches targetsize(2147483647)
                              :                          :                 :                 :                             +- GpuFilter gpuisnotnull(w_warehouse_sk#770), true
                              :                          :                 :                 :                                +- GpuFileGpuScan parquet [w_warehouse_sk#770,w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
                              :                          :                 :                 +- GpuCustomShuffleReader coalesced
                              :                          :                 :                    +- ShuffleQueryStage 2
                              :                          :                 :                       +- GpuColumnarExchange gpuhashpartitioning(sm_ship_mode_sk#444, 200), ENSURE_REQUIREMENTS, [id=#412657]
                              :                          :                 :                          +- GpuProject [sm_ship_mode_sk#444], true
                              :                          :                 :                             +- GpuCoalesceBatches targetsize(2147483647)
                              :                          :                 :                                +- GpuFilter (sm_carrier#448 INSET MSC, ZHOU AND gpuisnotnull(sm_ship_mode_sk#444)), true
                              :                          :                 :                                   +- GpuFileGpuScan parquet [sm_ship_mode_sk#444,sm_carrier#448] Batched: true, DataFilters: [sm_carrier#448 IN (ZHOU,MSC), isnotnull(sm_ship_mode_sk#444)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/ship_mode.parquet], PartitionFilters: [], PushedFilters: [In(sm_carrier, [MSC,ZHOU]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
                              :                          :                 +- GpuCustomShuffleReader coalesced
                              :                          :                    +- ShuffleQueryStage 3
                              :                          :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#412691]
                              :                          :                          +- GpuCoalesceBatches targetsize(2147483647)
                              :                          :                             +- GpuFilter ((gpuisnotnull(d_year#618) AND (d_year#618 = 2000)) AND gpuisnotnull(d_date_sk#612)), true
                              :                          :                                +- GpuFileGpuScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                              :                          +- GpuCustomShuffleReader coalesced
                              :                             +- ShuffleQueryStage 4
                              :                                +- GpuColumnarExchange gpuhashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#412732]
                              :                                   +- GpuProject [t_time_sk#456], true
                              :                                      +- GpuCoalesceBatches targetsize(2147483647)
                              :                                         +- GpuFilter (((gpuisnotnull(t_time#458) AND (t_time#458 >= 12143)) AND (t_time#458 <= 40943)) AND gpuisnotnull(t_time_sk#456)), true
                              :                                            +- GpuFileGpuScan parquet [t_time_sk#456,t_time#458] Batched: true, DataFilters: [isnotnull(t_time#458), (t_time#458 >= 12143), (t_time#458 <= 40943), isnotnull(t_time_sk#456)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,12143), LessThanOrEqual(t_time,40943), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
                              +- GpuRowToColumnar targetsize(2147483647)
                                 +- *(4) HashAggregate(keys=[w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753], functions=[sum(CASE WHEN (d_moy#22755 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, ship_carriers#22671, year#22672, jan_sales#22673, feb_sales#22674, mar_sales#22675, apr_sales#22676, may_sales#22677, jun_sales#22678, jul_sales#22679, aug_sales#22680, sep_sales#22681, oct_sales#22682, nov_sales#22683, dec_sales#22684, jan_net#22685, feb_net#22686, mar_net#22687, apr_net#22688, ... 8 more fields])
                                    +- AQEShuffleRead coalesced
                                       +- ShuffleQueryStage 21
                                          +- Exchange hashpartitioning(w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753, 200), ENSURE_REQUIREMENTS, [id=#416429]
                                             +- *(2) HashAggregate(keys=[w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753], functions=[partial_sum(CASE WHEN (d_moy#22755 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753, sum#23207, isEmpty#23208, sum#23209, isEmpty#23210, sum#23211, isEmpty#23212, sum#23213, isEmpty#23214, sum#23215, isEmpty#23216, sum#23217, isEmpty#23218, sum#23219, isEmpty#23220, sum#23221, isEmpty#23222, sum#23223, ... 31 more fields])
                                                +- GpuColumnarToRow false
                                                   +- GpuProject [cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753, d_moy#22755], true
                                                      +- GpuShuffledHashJoin [cs_sold_time_sk#545], [t_time_sk#22775], Inner, GpuBuildRight, false
                                                         :- GpuShuffleCoalesce 2147483647
                                                         :  +- GpuCustomShuffleReader coalesced
                                                         :     +- ShuffleQueryStage 20
                                                         :        +- GpuColumnarExchange gpuhashpartitioning(cs_sold_time_sk#545, 200), ENSURE_REQUIREMENTS, [id=#416240]
                                                         :           +- GpuProject [cs_sold_time_sk#545, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753, d_moy#22755], true
                                                         :              +- GpuShuffledHashJoin [cs_sold_date_sk#544], [d_date_sk#22747], Inner, GpuBuildRight, false
                                                         :                 :- GpuShuffleCoalesce 2147483647
                                                         :                 :  +- GpuCustomShuffleReader coalesced
                                                         :                 :     +- ShuffleQueryStage 19
                                                         :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#415908]
                                                         :                 :           +- GpuProject [cs_sold_date_sk#544, cs_sold_time_sk#545, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745], true
                                                         :                 :              +- GpuShuffledHashJoin(skew=true) [cs_ship_mode_sk#557], [sm_ship_mode_sk#22785], Inner, GpuBuildRight, true
                                                         :                 :                 :- GpuShuffleCoalesce 2147483647
                                                         :                 :                 :  +- GpuCustomShuffleReader skewed
                                                         :                 :                 :     +- ShuffleQueryStage 15
                                                         :                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_ship_mode_sk#557, 200), ENSURE_REQUIREMENTS, [id=#414703]
                                                         :                 :                 :           +- GpuProject [cs_sold_date_sk#544, cs_sold_time_sk#545, cs_ship_mode_sk#557, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745], true
                                                         :                 :                 :              +- GpuShuffledHashJoin [cs_warehouse_sk#558], [w_warehouse_sk#22733], Inner, GpuBuildRight, false
                                                         :                 :                 :                 :- GpuShuffleCoalesce 2147483647
                                                         :                 :                 :                 :  +- GpuCustomShuffleReader coalesced
                                                         :                 :                 :                 :     +- ShuffleQueryStage 5
                                                         :                 :                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_warehouse_sk#558, 200), ENSURE_REQUIREMENTS, [id=#412767]
                                                         :                 :                 :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                         :                 :                 :                 :              +- GpuFilter (((gpuisnotnull(cs_warehouse_sk#558) AND gpuisnotnull(cs_ship_mode_sk#557)) AND gpuisnotnull(cs_sold_date_sk#544)) AND gpuisnotnull(cs_sold_time_sk#545)), true
                                                         :                 :                 :                 :                 +- GpuFileGpuScan parquet [cs_sold_date_sk#544,cs_sold_time_sk#545,cs_ship_mode_sk#557,cs_warehouse_sk#558,cs_quantity#562,cs_ext_list_price#569,cs_net_paid_inc_tax#574] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#558), isnotnull(cs_ship_mode_sk#557), isnotnull(cs_sold_date_sk#544), ..., Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_ship_mode_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                                                         :                 :                 :                 +- GpuCustomShuffleReader coalesced
                                                         :                 :                 :                    +- ShuffleQueryStage 7
                                                         :                 :                 :                       +- ReusedExchange [w_warehouse_sk#22733, w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745], GpuColumnarExchange gpuhashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#412616]
                                                         :                 :                 +- GpuCustomShuffleReader coalesced
                                                         :                 :                    +- ShuffleQueryStage 9
                                                         :                 :                       +- ReusedExchange [sm_ship_mode_sk#22785], GpuColumnarExchange gpuhashpartitioning(sm_ship_mode_sk#444, 200), ENSURE_REQUIREMENTS, [id=#412657]
                                                         :                 +- GpuCustomShuffleReader coalesced
                                                         :                    +- ShuffleQueryStage 11
                                                         :                       +- ReusedExchange [d_date_sk#22747, d_year#22753, d_moy#22755], GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#412691]
                                                         +- GpuCustomShuffleReader coalesced
                                                            +- ShuffleQueryStage 13
                                                               +- ReusedExchange [t_time_sk#22775], GpuColumnarExchange gpuhashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#412732]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#772 ASC NULLS FIRST], output=[w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782,ship_carriers#22645,year#22646,jan_sales#22697,feb_sales#22698,mar_sales#22699,apr_sales#22700,may_sales#22701,jun_sales#22702,jul_sales#22703,aug_sales#22704,sep_sales#22705,oct_sales#22706,nov_sales#22707,dec_sales#22708,jan_sales_per_sq_foot#22709,feb_sales_per_sq_foot#22710,mar_sales_per_sq_foot#22711,apr_sales_per_sq_foot#22712,... 20 more fields])
   +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646], functions=[sum(jan_sales#22647), sum(feb_sales#22648), sum(mar_sales#22649), sum(apr_sales#22650), sum(may_sales#22651), sum(jun_sales#22652), sum(jul_sales#22653), sum(aug_sales#22654), sum(sep_sales#22655), sum(oct_sales#22656), sum(nov_sales#22657), sum(dec_sales#22658), sum(CheckOverflow((promote_precision(jan_sales#22647) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#22648) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#22649) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#22650) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#22651) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#22652) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#22653) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#22654) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#22655) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#22656) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#22657) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#22658) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646, jan_sales#22697, feb_sales#22698, mar_sales#22699, apr_sales#22700, may_sales#22701, jun_sales#22702, jul_sales#22703, aug_sales#22704, sep_sales#22705, oct_sales#22706, nov_sales#22707, dec_sales#22708, jan_sales_per_sq_foot#22709, feb_sales_per_sq_foot#22710, mar_sales_per_sq_foot#22711, apr_sales_per_sq_foot#22712, ... 20 more fields])
      +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646, 200), ENSURE_REQUIREMENTS, [id=#411513]
         +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646], functions=[partial_sum(jan_sales#22647), partial_sum(feb_sales#22648), partial_sum(mar_sales#22649), partial_sum(apr_sales#22650), partial_sum(may_sales#22651), partial_sum(jun_sales#22652), partial_sum(jul_sales#22653), partial_sum(aug_sales#22654), partial_sum(sep_sales#22655), partial_sum(oct_sales#22656), partial_sum(nov_sales#22657), partial_sum(dec_sales#22658), partial_sum(CheckOverflow((promote_precision(jan_sales#22647) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#22648) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#22649) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#22650) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#22651) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#22652) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#22653) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#22654) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#22655) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#22656) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#22657) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#22658) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646, sum#22991, isEmpty#22992, sum#22993, isEmpty#22994, sum#22995, isEmpty#22996, sum#22997, isEmpty#22998, sum#22999, isEmpty#23000, sum#23001, isEmpty#23002, sum#23003, isEmpty#23004, sum#23005, isEmpty#23006, ... 56 more fields])
            +- Union
               :- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#22645, year#22646, jan_sales#22647, feb_sales#22648, mar_sales#22649, apr_sales#22650, may_sales#22651, jun_sales#22652, jul_sales#22653, aug_sales#22654, sep_sales#22655, oct_sales#22656, nov_sales#22657, dec_sales#22658, jan_net#22659, feb_net#22660, mar_net#22661, apr_net#22662, ... 8 more fields])
               :  +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, 200), ENSURE_REQUIREMENTS, [id=#411473]
               :     +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, sum#23111, isEmpty#23112, sum#23113, isEmpty#23114, sum#23115, isEmpty#23116, sum#23117, isEmpty#23118, sum#23119, isEmpty#23120, sum#23121, isEmpty#23122, sum#23123, isEmpty#23124, sum#23125, isEmpty#23126, sum#23127, ... 31 more fields])
               :        +- Project [ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
               :           +- SortMergeJoin [ws_sold_time_sk#477], [t_time_sk#456], Inner
               :              :- Sort [ws_sold_time_sk#477 ASC NULLS FIRST], false, 0
               :              :  +- Exchange hashpartitioning(ws_sold_time_sk#477, 200), ENSURE_REQUIREMENTS, [id=#411465]
               :              :     +- Project [ws_sold_time_sk#477, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
               :              :        +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#612], Inner
               :              :           :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
               :              :           :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#411457]
               :              :           :     +- Project [ws_sold_date_sk#476, ws_sold_time_sk#477, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782]
               :              :           :        +- SortMergeJoin [ws_ship_mode_sk#490], [sm_ship_mode_sk#444], Inner
               :              :           :           :- Sort [ws_ship_mode_sk#490 ASC NULLS FIRST], false, 0
               :              :           :           :  +- Exchange hashpartitioning(ws_ship_mode_sk#490, 200), ENSURE_REQUIREMENTS, [id=#411449]
               :              :           :           :     +- Project [ws_sold_date_sk#476, ws_sold_time_sk#477, ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782]
               :              :           :           :        +- SortMergeJoin [ws_warehouse_sk#491], [w_warehouse_sk#770], Inner
               :              :           :           :           :- Sort [ws_warehouse_sk#491 ASC NULLS FIRST], false, 0
               :              :           :           :           :  +- Exchange hashpartitioning(ws_warehouse_sk#491, 200), ENSURE_REQUIREMENTS, [id=#411441]
               :              :           :           :           :     +- Filter (((isnotnull(ws_warehouse_sk#491) AND isnotnull(ws_ship_mode_sk#490)) AND isnotnull(ws_sold_date_sk#476)) AND isnotnull(ws_sold_time_sk#477))
               :              :           :           :           :        +- FileScan parquet [ws_sold_date_sk#476,ws_sold_time_sk#477,ws_ship_mode_sk#490,ws_warehouse_sk#491,ws_quantity#494,ws_sales_price#497,ws_net_paid_inc_tax#506] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#491), isnotnull(ws_ship_mode_sk#490), isnotnull(ws_sold_date_sk#476), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_ship_mode_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
               :              :           :           :           +- Sort [w_warehouse_sk#770 ASC NULLS FIRST], false, 0
               :              :           :           :              +- Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#411442]
               :              :           :           :                 +- Filter isnotnull(w_warehouse_sk#770)
               :              :           :           :                    +- FileScan parquet [w_warehouse_sk#770,w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
               :              :           :           +- Sort [sm_ship_mode_sk#444 ASC NULLS FIRST], false, 0
               :              :           :              +- Exchange hashpartitioning(sm_ship_mode_sk#444, 200), ENSURE_REQUIREMENTS, [id=#411450]
               :              :           :                 +- Project [sm_ship_mode_sk#444]
               :              :           :                    +- Filter (sm_carrier#448 IN (ZHOU,MSC) AND isnotnull(sm_ship_mode_sk#444))
               :              :           :                       +- FileScan parquet [sm_ship_mode_sk#444,sm_carrier#448] Batched: true, DataFilters: [sm_carrier#448 IN (ZHOU,MSC), isnotnull(sm_ship_mode_sk#444)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/ship_mode.parquet], PartitionFilters: [], PushedFilters: [In(sm_carrier, [MSC,ZHOU]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
               :              :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
               :              :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#411458]
               :              :                 +- Filter ((isnotnull(d_year#618) AND (d_year#618 = 2000)) AND isnotnull(d_date_sk#612))
               :              :                    +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :              +- Sort [t_time_sk#456 ASC NULLS FIRST], false, 0
               :                 +- Exchange hashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#411466]
               :                    +- Project [t_time_sk#456]
               :                       +- Filter (((isnotnull(t_time#458) AND (t_time#458 >= 12143)) AND (t_time#458 <= 40943)) AND isnotnull(t_time_sk#456))
               :                          +- FileScan parquet [t_time_sk#456,t_time#458] Batched: true, DataFilters: [isnotnull(t_time#458), (t_time#458 >= 12143), (t_time#458 <= 40943), isnotnull(t_time_sk#456)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,12143), LessThanOrEqual(t_time,40943), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
               +- HashAggregate(keys=[w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753], functions=[sum(CASE WHEN (d_moy#22755 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#22755 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, ship_carriers#22671, year#22672, jan_sales#22673, feb_sales#22674, mar_sales#22675, apr_sales#22676, may_sales#22677, jun_sales#22678, jul_sales#22679, aug_sales#22680, sep_sales#22681, oct_sales#22682, nov_sales#22683, dec_sales#22684, jan_net#22685, feb_net#22686, mar_net#22687, apr_net#22688, ... 8 more fields])
                  +- Exchange hashpartitioning(w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753, 200), ENSURE_REQUIREMENTS, [id=#411508]
                     +- HashAggregate(keys=[w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753], functions=[partial_sum(CASE WHEN (d_moy#22755 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#22755 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753, sum#23207, isEmpty#23208, sum#23209, isEmpty#23210, sum#23211, isEmpty#23212, sum#23213, isEmpty#23214, sum#23215, isEmpty#23216, sum#23217, isEmpty#23218, sum#23219, isEmpty#23220, sum#23221, isEmpty#23222, sum#23223, ... 31 more fields])
                        +- Project [cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753, d_moy#22755]
                           +- SortMergeJoin [cs_sold_time_sk#545], [t_time_sk#22775], Inner
                              :- Sort [cs_sold_time_sk#545 ASC NULLS FIRST], false, 0
                              :  +- Exchange hashpartitioning(cs_sold_time_sk#545, 200), ENSURE_REQUIREMENTS, [id=#411500]
                              :     +- Project [cs_sold_time_sk#545, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745, d_year#22753, d_moy#22755]
                              :        +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#22747], Inner
                              :           :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                              :           :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#411492]
                              :           :     +- Project [cs_sold_date_sk#544, cs_sold_time_sk#545, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745]
                              :           :        +- SortMergeJoin [cs_ship_mode_sk#557], [sm_ship_mode_sk#22785], Inner
                              :           :           :- Sort [cs_ship_mode_sk#557 ASC NULLS FIRST], false, 0
                              :           :           :  +- Exchange hashpartitioning(cs_ship_mode_sk#557, 200), ENSURE_REQUIREMENTS, [id=#411484]
                              :           :           :     +- Project [cs_sold_date_sk#544, cs_sold_time_sk#545, cs_ship_mode_sk#557, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#22735, w_warehouse_sq_ft#22736, w_city#22741, w_county#22742, w_state#22743, w_country#22745]
                              :           :           :        +- SortMergeJoin [cs_warehouse_sk#558], [w_warehouse_sk#22733], Inner
                              :           :           :           :- Sort [cs_warehouse_sk#558 ASC NULLS FIRST], false, 0
                              :           :           :           :  +- Exchange hashpartitioning(cs_warehouse_sk#558, 200), ENSURE_REQUIREMENTS, [id=#411476]
                              :           :           :           :     +- Filter (((isnotnull(cs_warehouse_sk#558) AND isnotnull(cs_ship_mode_sk#557)) AND isnotnull(cs_sold_date_sk#544)) AND isnotnull(cs_sold_time_sk#545))
                              :           :           :           :        +- FileScan parquet [cs_sold_date_sk#544,cs_sold_time_sk#545,cs_ship_mode_sk#557,cs_warehouse_sk#558,cs_quantity#562,cs_ext_list_price#569,cs_net_paid_inc_tax#574] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#558), isnotnull(cs_ship_mode_sk#557), isnotnull(cs_sold_date_sk#544), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_ship_mode_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                              :           :           :           +- Sort [w_warehouse_sk#22733 ASC NULLS FIRST], false, 0
                              :           :           :              +- Exchange hashpartitioning(w_warehouse_sk#22733, 200), ENSURE_REQUIREMENTS, [id=#411477]
                              :           :           :                 +- Filter isnotnull(w_warehouse_sk#22733)
                              :           :           :                    +- FileScan parquet [w_warehouse_sk#22733,w_warehouse_name#22735,w_warehouse_sq_ft#22736,w_city#22741,w_county#22742,w_state#22743,w_country#22745] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#22733)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
                              :           :           +- Sort [sm_ship_mode_sk#22785 ASC NULLS FIRST], false, 0
                              :           :              +- Exchange hashpartitioning(sm_ship_mode_sk#22785, 200), ENSURE_REQUIREMENTS, [id=#411485]
                              :           :                 +- Project [sm_ship_mode_sk#22785]
                              :           :                    +- Filter (sm_carrier#22789 IN (ZHOU,MSC) AND isnotnull(sm_ship_mode_sk#22785))
                              :           :                       +- FileScan parquet [sm_ship_mode_sk#22785,sm_carrier#22789] Batched: true, DataFilters: [sm_carrier#22789 IN (ZHOU,MSC), isnotnull(sm_ship_mode_sk#22785)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/ship_mode.parquet], PartitionFilters: [], PushedFilters: [In(sm_carrier, [MSC,ZHOU]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
                              :           +- Sort [d_date_sk#22747 ASC NULLS FIRST], false, 0
                              :              +- Exchange hashpartitioning(d_date_sk#22747, 200), ENSURE_REQUIREMENTS, [id=#411493]
                              :                 +- Filter ((isnotnull(d_year#22753) AND (d_year#22753 = 2000)) AND isnotnull(d_date_sk#22747))
                              :                    +- FileScan parquet [d_date_sk#22747,d_year#22753,d_moy#22755] Batched: true, DataFilters: [isnotnull(d_year#22753), (d_year#22753 = 2000), isnotnull(d_date_sk#22747)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                              +- Sort [t_time_sk#22775 ASC NULLS FIRST], false, 0
                                 +- Exchange hashpartitioning(t_time_sk#22775, 200), ENSURE_REQUIREMENTS, [id=#411501]
                                    +- Project [t_time_sk#22775]
                                       +- Filter (((isnotnull(t_time#22777) AND (t_time#22777 >= 12143)) AND (t_time#22777 <= 40943)) AND isnotnull(t_time_sk#22775))
                                          +- FileScan parquet [t_time_sk#22775,t_time#22777] Batched: true, DataFilters: [isnotnull(t_time#22777), (t_time#22777 >= 12143), (t_time#22777 <= 40943), isnotnull(t_time_sk#2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,12143), LessThanOrEqual(t_time,40943), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
