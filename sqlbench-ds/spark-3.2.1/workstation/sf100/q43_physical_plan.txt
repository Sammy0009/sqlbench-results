AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   GpuColumnarToRow false
   +- GpuTopN(limit=100, orderBy=[s_store_name#717 ASC NULLS FIRST,s_store_id#713 ASC NULLS FIRST,sun_sales#15406 ASC NULLS FIRST,mon_sales#15407 ASC NULLS FIRST,tue_sales#15408 ASC NULLS FIRST,wed_sales#15409 ASC NULLS FIRST,thu_sales#15410 ASC NULLS FIRST,fri_sales#15411 ASC NULLS FIRST,sat_sales#15412 ASC NULLS FIRST], output=[s_store_name#717,s_store_id#713,sun_sales#15406,mon_sales#15407,tue_sales#15408,wed_sales#15409,thu_sales#15410,fri_sales#15411,sat_sales#15412])
      +- GpuHashAggregate(keys=[s_store_name#717, s_store_id#713], functions=[gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN ss_sales_price#265 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN ss_sales_price#265 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN ss_sales_price#265 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN ss_sales_price#265 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN ss_sales_price#265 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN ss_sales_price#265 END), LongType, false), gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN ss_sales_price#265 END), LongType, false)], output=[s_store_name#717, s_store_id#713, sun_sales#15406, mon_sales#15407, tue_sales#15408, wed_sales#15409, thu_sales#15410, fri_sales#15411, sat_sales#15412])
         +- GpuShuffleCoalesce 2147483647
            +- GpuCustomShuffleReader coalesced
               +- ShuffleQueryStage 4
                  +- GpuColumnarExchange gpuhashpartitioning(s_store_name#717, s_store_id#713, 200), ENSURE_REQUIREMENTS, [id=#277328]
                     +- GpuHashAggregate(keys=[s_store_name#717, s_store_id#713], functions=[partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN ss_sales_price#265 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN ss_sales_price#265 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN ss_sales_price#265 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN ss_sales_price#265 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN ss_sales_price#265 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN ss_sales_price#265 END), LongType, false), partial_gpubasicsum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN ss_sales_price#265 END), LongType, false)], output=[s_store_name#717, s_store_id#713, sum#15436L, sum#15437L, sum#15438L, sum#15439L, sum#15440L, sum#15441L, sum#15442L])
                        +- GpuProject [ss_sales_price#265, s_store_id#713, s_store_name#717, d_day_name#626], true
                           +- GpuShuffledHashJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner, GpuBuildRight, false
                              :- GpuShuffleCoalesce 2147483647
                              :  +- GpuCustomShuffleReader coalesced
                              :     +- ShuffleQueryStage 3
                              :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#277188]
                              :           +- GpuProject [ss_sold_date_sk#252, ss_sales_price#265, s_store_id#713, s_store_name#717], true
                              :              +- GpuShuffledHashJoin [ss_store_sk#259], [s_store_sk#712], Inner, GpuBuildRight, false
                              :                 :- GpuShuffleCoalesce 2147483647
                              :                 :  +- GpuCustomShuffleReader coalesced
                              :                 :     +- ShuffleQueryStage 0
                              :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#276761]
                              :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                              :                 :              +- GpuFilter (gpuisnotnull(ss_store_sk#259) AND gpuisnotnull(ss_sold_date_sk#252)), true
                              :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#252,ss_store_sk#259,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_store_sk#259), isnotnull(ss_sold_date_sk#252)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                              :                 +- GpuCustomShuffleReader coalesced
                              :                    +- ShuffleQueryStage 1
                              :                       +- GpuColumnarExchange gpuhashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#276798]
                              :                          +- GpuProject [s_store_sk#712, s_store_id#713, s_store_name#717], true
                              :                             +- GpuCoalesceBatches targetsize(2147483647)
                              :                                +- GpuFilter ((gpuisnotnull(s_gmt_offset#739) AND (s_gmt_offset#739 = -5.00)) AND gpuisnotnull(s_store_sk#712)), true
                              :                                   +- GpuFileGpuScan parquet [s_store_sk#712,s_store_id#713,s_store_name#717,s_gmt_offset#739] Batched: true, DataFilters: [isnotnull(s_gmt_offset#739), (s_gmt_offset#739 = -5.00), isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_gmt_offset), EqualTo(s_gmt_offset,-5.00), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string,s_gmt_offset:decimal(5,2)>
                              +- GpuCustomShuffleReader coalesced
                                 +- ShuffleQueryStage 2
                                    +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#276841]
                                       +- GpuProject [d_date_sk#612, d_day_name#626], true
                                          +- GpuCoalesceBatches targetsize(2147483647)
                                             +- GpuFilter ((gpuisnotnull(d_year#618) AND (d_year#618 = 2000)) AND gpuisnotnull(d_date_sk#612)), true
                                                +- GpuFileGpuScan parquet [d_date_sk#612,d_year#618,d_day_name#626] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_day_name:string>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#717 ASC NULLS FIRST,s_store_id#713 ASC NULLS FIRST,sun_sales#15406 ASC NULLS FIRST,mon_sales#15407 ASC NULLS FIRST,tue_sales#15408 ASC NULLS FIRST,wed_sales#15409 ASC NULLS FIRST,thu_sales#15410 ASC NULLS FIRST,fri_sales#15411 ASC NULLS FIRST,sat_sales#15412 ASC NULLS FIRST], output=[s_store_name#717,s_store_id#713,sun_sales#15406,mon_sales#15407,tue_sales#15408,wed_sales#15409,thu_sales#15410,fri_sales#15411,sat_sales#15412])
   +- HashAggregate(keys=[s_store_name#717, s_store_id#713], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN ss_sales_price#265 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN ss_sales_price#265 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN ss_sales_price#265 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN ss_sales_price#265 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN ss_sales_price#265 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN ss_sales_price#265 END)), sum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN ss_sales_price#265 END))], output=[s_store_name#717, s_store_id#713, sun_sales#15406, mon_sales#15407, tue_sales#15408, wed_sales#15409, thu_sales#15410, fri_sales#15411, sat_sales#15412])
      +- Exchange hashpartitioning(s_store_name#717, s_store_id#713, 200), ENSURE_REQUIREMENTS, [id=#276437]
         +- HashAggregate(keys=[s_store_name#717, s_store_id#713], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Sunday) THEN ss_sales_price#265 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Monday) THEN ss_sales_price#265 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Tuesday) THEN ss_sales_price#265 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Wednesday) THEN ss_sales_price#265 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Thursday) THEN ss_sales_price#265 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Friday) THEN ss_sales_price#265 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#626 = Saturday) THEN ss_sales_price#265 END))], output=[s_store_name#717, s_store_id#713, sum#15436L, sum#15437L, sum#15438L, sum#15439L, sum#15440L, sum#15441L, sum#15442L])
            +- Project [ss_sales_price#265, s_store_id#713, s_store_name#717, d_day_name#626]
               +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                  :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#276429]
                  :     +- Project [ss_sold_date_sk#252, ss_sales_price#265, s_store_id#713, s_store_name#717]
                  :        +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                  :           :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                  :           :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#276421]
                  :           :     +- Filter (isnotnull(ss_store_sk#259) AND isnotnull(ss_sold_date_sk#252))
                  :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_store_sk#259,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_store_sk#259), isnotnull(ss_sold_date_sk#252)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                  :           +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                  :              +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#276422]
                  :                 +- Project [s_store_sk#712, s_store_id#713, s_store_name#717]
                  :                    +- Filter ((isnotnull(s_gmt_offset#739) AND (s_gmt_offset#739 = -5.00)) AND isnotnull(s_store_sk#712))
                  :                       +- FileScan parquet [s_store_sk#712,s_store_id#713,s_store_name#717,s_gmt_offset#739] Batched: true, DataFilters: [isnotnull(s_gmt_offset#739), (s_gmt_offset#739 = -5.00), isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_gmt_offset), EqualTo(s_gmt_offset,-5.00), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string,s_gmt_offset:decimal(5,2)>
                  +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                     +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#276430]
                        +- Project [d_date_sk#612, d_day_name#626]
                           +- Filter ((isnotnull(d_year#618) AND (d_year#618 = 2000)) AND isnotnull(d_date_sk#612))
                              +- FileScan parquet [d_date_sk#612,d_year#618,d_day_name#626] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_day_name:string>
