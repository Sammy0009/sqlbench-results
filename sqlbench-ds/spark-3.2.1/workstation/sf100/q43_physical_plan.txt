AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#331 ASC NULLS FIRST,s_store_id#327 ASC NULLS FIRST,sun_sales#9066 ASC NULLS FIRST,mon_sales#9067 ASC NULLS FIRST,tue_sales#9068 ASC NULLS FIRST,wed_sales#9069 ASC NULLS FIRST,thu_sales#9070 ASC NULLS FIRST,fri_sales#9071 ASC NULLS FIRST,sat_sales#9072 ASC NULLS FIRST], output=[s_store_name#331,s_store_id#327,sun_sales#9066,mon_sales#9067,tue_sales#9068,wed_sales#9069,thu_sales#9070,fri_sales#9071,sat_sales#9072])
   +- *(4) HashAggregate(keys=[s_store_name#331, s_store_id#327], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[s_store_name#331, s_store_id#327, sun_sales#9066, mon_sales#9067, tue_sales#9068, wed_sales#9069, thu_sales#9070, fri_sales#9071, sat_sales#9072])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 2
            +- Exchange hashpartitioning(s_store_name#331, s_store_id#327, 200), ENSURE_REQUIREMENTS, [id=#74338]
               +- *(3) HashAggregate(keys=[s_store_name#331, s_store_id#327], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[s_store_name#331, s_store_id#327, sum#9096L, sum#9097L, sum#9098L, sum#9099L, sum#9100L, sum#9101L, sum#9102L])
                  +- *(3) Project [d_day_name#612, ss_sales_price#677, s_store_id#327, s_store_name#331]
                     +- *(3) BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                        :- *(3) Project [d_day_name#612, ss_store_sk#671, ss_sales_price#677]
                        :  +- *(3) BroadcastHashJoin [d_date_sk#598], [ss_sold_date_sk#664], Inner, BuildLeft, false
                        :     :- BroadcastQueryStage 0
                        :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#74196]
                        :     :     +- *(1) Project [d_date_sk#598, d_day_name#612]
                        :     :        +- *(1) Filter ((isnotnull(d_year#604) AND (d_year#604 = 2000)) AND isnotnull(d_date_sk#598))
                        :     :           +- *(1) ColumnarToRow
                        :     :              +- FileScan parquet [d_date_sk#598,d_year#604,d_day_name#612] Batched: true, DataFilters: [isnotnull(d_year#604), (d_year#604 = 2000), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_day_name:string>
                        :     +- *(3) Filter (isnotnull(ss_sold_date_sk#664) AND isnotnull(ss_store_sk#671))
                        :        +- *(3) ColumnarToRow
                        :           +- FileScan parquet [ss_sold_date_sk#664,ss_store_sk#671,ss_sales_price#677] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#664), isnotnull(ss_store_sk#671)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                        +- BroadcastQueryStage 1
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#74217]
                              +- *(2) Project [s_store_sk#326, s_store_id#327, s_store_name#331]
                                 +- *(2) Filter ((isnotnull(s_gmt_offset#353) AND (s_gmt_offset#353 = -5.00)) AND isnotnull(s_store_sk#326))
                                    +- *(2) ColumnarToRow
                                       +- FileScan parquet [s_store_sk#326,s_store_id#327,s_store_name#331,s_gmt_offset#353] Batched: true, DataFilters: [isnotnull(s_gmt_offset#353), (s_gmt_offset#353 = -5.00), isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_gmt_offset), EqualTo(s_gmt_offset,-5.00), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string,s_gmt_offset:decimal(5,2)>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#331 ASC NULLS FIRST,s_store_id#327 ASC NULLS FIRST,sun_sales#9066 ASC NULLS FIRST,mon_sales#9067 ASC NULLS FIRST,tue_sales#9068 ASC NULLS FIRST,wed_sales#9069 ASC NULLS FIRST,thu_sales#9070 ASC NULLS FIRST,fri_sales#9071 ASC NULLS FIRST,sat_sales#9072 ASC NULLS FIRST], output=[s_store_name#331,s_store_id#327,sun_sales#9066,mon_sales#9067,tue_sales#9068,wed_sales#9069,thu_sales#9070,fri_sales#9071,sat_sales#9072])
   +- HashAggregate(keys=[s_store_name#331, s_store_id#327], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[s_store_name#331, s_store_id#327, sun_sales#9066, mon_sales#9067, tue_sales#9068, wed_sales#9069, thu_sales#9070, fri_sales#9071, sat_sales#9072])
      +- Exchange hashpartitioning(s_store_name#331, s_store_id#327, 200), ENSURE_REQUIREMENTS, [id=#74157]
         +- HashAggregate(keys=[s_store_name#331, s_store_id#327], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[s_store_name#331, s_store_id#327, sum#9096L, sum#9097L, sum#9098L, sum#9099L, sum#9100L, sum#9101L, sum#9102L])
            +- Project [d_day_name#612, ss_sales_price#677, s_store_id#327, s_store_name#331]
               +- BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                  :- Project [d_day_name#612, ss_store_sk#671, ss_sales_price#677]
                  :  +- BroadcastHashJoin [d_date_sk#598], [ss_sold_date_sk#664], Inner, BuildLeft, false
                  :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#74148]
                  :     :  +- Project [d_date_sk#598, d_day_name#612]
                  :     :     +- Filter ((isnotnull(d_year#604) AND (d_year#604 = 2000)) AND isnotnull(d_date_sk#598))
                  :     :        +- FileScan parquet [d_date_sk#598,d_year#604,d_day_name#612] Batched: true, DataFilters: [isnotnull(d_year#604), (d_year#604 = 2000), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_day_name:string>
                  :     +- Filter (isnotnull(ss_sold_date_sk#664) AND isnotnull(ss_store_sk#671))
                  :        +- FileScan parquet [ss_sold_date_sk#664,ss_store_sk#671,ss_sales_price#677] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#664), isnotnull(ss_store_sk#671)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#74152]
                     +- Project [s_store_sk#326, s_store_id#327, s_store_name#331]
                        +- Filter ((isnotnull(s_gmt_offset#353) AND (s_gmt_offset#353 = -5.00)) AND isnotnull(s_store_sk#326))
                           +- FileScan parquet [s_store_sk#326,s_store_id#327,s_store_name#331,s_gmt_offset#353] Batched: true, DataFilters: [isnotnull(s_gmt_offset#353), (s_gmt_offset#353 = -5.00), isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_gmt_offset), EqualTo(s_gmt_offset,-5.00), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string,s_gmt_offset:decimal(5,2)>
