AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   GpuColumnarToRow false
   +- GpuSort [w_warehouse_sk#770 ASC NULLS FIRST, i_item_sk#668 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST, mean#14907 ASC NULLS FIRST, cov#14908 ASC NULLS FIRST, d_moy#15008 ASC NULLS FIRST, mean#14940 ASC NULLS FIRST, cov#14941 ASC NULLS FIRST], true, com.nvidia.spark.rapids.OutOfCoreSort$@59d99269
      +- GpuShuffleCoalesce 2147483647
         +- GpuCustomShuffleReader coalesced
            +- ShuffleQueryStage 17
               +- GpuColumnarExchange gpurangepartitioning(w_warehouse_sk#770 ASC NULLS FIRST, i_item_sk#668 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST, mean#14907 ASC NULLS FIRST, cov#14908 ASC NULLS FIRST, d_moy#15008 ASC NULLS FIRST, mean#14940 ASC NULLS FIRST, cov#14941 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#272563]
                  +- GpuShuffledHashJoin [i_item_sk#668, w_warehouse_sk#770], [i_item_sk#14964, w_warehouse_sk#14986], Inner, GpuBuildRight, false
                     :- GpuShuffleCoalesce 2147483647
                     :  +- GpuCustomShuffleReader coalesced
                     :     +- ShuffleQueryStage 14
                     :        +- GpuColumnarExchange gpuhashpartitioning(i_item_sk#668, w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#271962]
                     :           +- GpuProject [w_warehouse_sk#770, i_item_sk#668, d_moy#620, mean#14907, CASE WHEN (mean#14907 = 0.0) THEN null ELSE (stdev#14906 / mean#14907) END AS cov#14908], true
                     :              +- GpuCoalesceBatches targetsize(2147483647)
                     :                 +- GpuFilter ((gpuisnotnull(stdev#14906) AND gpuisnotnull(mean#14907)) AND ((NOT gpucoalesce((mean#14907 = 0.0), false) AND ((stdev#14906 / mean#14907) > 1.0)) AND ((stdev#14906 / mean#14907) > 1.5))), true
                     :                    +- GpuRowToColumnar targetsize(2147483647)
                     :                       +- *(1) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sk#770, i_item_sk#668, d_moy#620], functions=[stddev_samp(cast(inv_quantity_on_hand#439 as double)), avg(inv_quantity_on_hand#439)], output=[w_warehouse_sk#770, i_item_sk#668, d_moy#620, stdev#14906, mean#14907])
                     :                          +- *(1) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sk#770, i_item_sk#668, d_moy#620], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#439 as double)), partial_avg(inv_quantity_on_hand#439)], output=[w_warehouse_name#772, w_warehouse_sk#770, i_item_sk#668, d_moy#620, n#14932, avg#14933, m2#14934, sum#15039, count#15040L])
                     :                             +- GpuColumnarToRow false
                     :                                +- GpuProject [inv_quantity_on_hand#439, d_moy#620, i_item_sk#668, w_warehouse_sk#770, w_warehouse_name#772], true
                     :                                   +- GpuShuffledHashJoin [inv_warehouse_sk#438], [w_warehouse_sk#770], Inner, GpuBuildRight, false
                     :                                      :- GpuShuffleCoalesce 2147483647
                     :                                      :  +- GpuCustomShuffleReader coalesced
                     :                                      :     +- ShuffleQueryStage 13
                     :                                      :        +- GpuColumnarExchange gpuhashpartitioning(inv_warehouse_sk#438, 200), ENSURE_REQUIREMENTS, [id=#271624]
                     :                                      :           +- GpuProject [inv_warehouse_sk#438, inv_quantity_on_hand#439, d_moy#620, i_item_sk#668], true
                     :                                      :              +- GpuShuffledHashJoin [inv_item_sk#437], [i_item_sk#668], Inner, GpuBuildRight, false
                     :                                      :                 :- GpuShuffleCoalesce 2147483647
                     :                                      :                 :  +- GpuCustomShuffleReader coalesced
                     :                                      :                 :     +- ShuffleQueryStage 11
                     :                                      :                 :        +- GpuColumnarExchange gpuhashpartitioning(inv_item_sk#437, 200), ENSURE_REQUIREMENTS, [id=#271209]
                     :                                      :                 :           +- GpuProject [inv_item_sk#437, inv_warehouse_sk#438, inv_quantity_on_hand#439, d_moy#620], true
                     :                                      :                 :              +- GpuShuffledHashJoin [inv_date_sk#436], [d_date_sk#612], Inner, GpuBuildRight, false
                     :                                      :                 :                 :- GpuShuffleCoalesce 2147483647
                     :                                      :                 :                 :  +- GpuCustomShuffleReader coalesced
                     :                                      :                 :                 :     +- ShuffleQueryStage 0
                     :                                      :                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(inv_date_sk#436, 200), ENSURE_REQUIREMENTS, [id=#269471]
                     :                                      :                 :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                     :                                      :                 :                 :              +- GpuFilter ((gpuisnotnull(inv_date_sk#436) AND gpuisnotnull(inv_item_sk#437)) AND gpuisnotnull(inv_warehouse_sk#438)), true
                     :                                      :                 :                 :                 +- GpuFileGpuScan parquet [inv_date_sk#436,inv_item_sk#437,inv_warehouse_sk#438,inv_quantity_on_hand#439] Batched: true, DataFilters: [isnotnull(inv_date_sk#436), isnotnull(inv_item_sk#437), isnotnull(inv_warehouse_sk#438)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/inventory.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(inv_date_sk), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)], ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
                     :                                      :                 :                 +- GpuCustomShuffleReader coalesced
                     :                                      :                 :                    +- ShuffleQueryStage 1
                     :                                      :                 :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#269508]
                     :                                      :                 :                          +- GpuProject [d_date_sk#612, d_moy#620], true
                     :                                      :                 :                             +- GpuCoalesceBatches targetsize(2147483647)
                     :                                      :                 :                                +- GpuFilter ((((gpuisnotnull(d_year#618) AND gpuisnotnull(d_moy#620)) AND (d_year#618 = 2001)) AND (d_moy#620 = 1)) AND gpuisnotnull(d_date_sk#612)), true
                     :                                      :                 :                                   +- GpuFileGpuScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_year#618), isnotnull(d_moy#620), (d_year#618 = 2001), (d_moy#620 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :                                      :                 +- GpuCustomShuffleReader coalesced
                     :                                      :                    +- ShuffleQueryStage 2
                     :                                      :                       +- GpuColumnarExchange gpuhashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#269542]
                     :                                      :                          +- GpuCoalesceBatches targetsize(2147483647)
                     :                                      :                             +- GpuFilter gpuisnotnull(i_item_sk#668), true
                     :                                      :                                +- GpuFileGpuScan parquet [i_item_sk#668] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int>
                     :                                      +- GpuCustomShuffleReader coalesced
                     :                                         +- ShuffleQueryStage 3
                     :                                            +- GpuColumnarExchange gpuhashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#269574]
                     :                                               +- GpuCoalesceBatches targetsize(2147483647)
                     :                                                  +- GpuFilter gpuisnotnull(w_warehouse_sk#770), true
                     :                                                     +- GpuFileGpuScan parquet [w_warehouse_sk#770,w_warehouse_name#772] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
                     +- GpuCustomShuffleReader coalesced
                        +- ShuffleQueryStage 16
                           +- GpuColumnarExchange gpuhashpartitioning(i_item_sk#14964, w_warehouse_sk#14986, 200), ENSURE_REQUIREMENTS, [id=#272419]
                              +- GpuProject [w_warehouse_sk#14986, i_item_sk#14964, d_moy#15008, mean#14907 AS mean#14940, CASE WHEN (mean#14907 = 0.0) THEN null ELSE (stdev#14906 / mean#14907) END AS cov#14941], true
                                 +- GpuCoalesceBatches targetsize(2147483647)
                                    +- GpuFilter ((gpuisnotnull(stdev#14906) AND gpuisnotnull(mean#14907)) AND (NOT gpucoalesce((mean#14907 = 0.0), false) AND ((stdev#14906 / mean#14907) > 1.0))), true
                                       +- GpuRowToColumnar targetsize(2147483647)
                                          +- *(2) HashAggregate(keys=[w_warehouse_name#14988, w_warehouse_sk#14986, i_item_sk#14964, d_moy#15008], functions=[stddev_samp(cast(inv_quantity_on_hand#14963 as double)), avg(inv_quantity_on_hand#14963)], output=[w_warehouse_sk#14986, i_item_sk#14964, d_moy#15008, stdev#14906, mean#14907])
                                             +- *(2) HashAggregate(keys=[w_warehouse_name#14988, w_warehouse_sk#14986, i_item_sk#14964, d_moy#15008], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#14963 as double)), partial_avg(inv_quantity_on_hand#14963)], output=[w_warehouse_name#14988, w_warehouse_sk#14986, i_item_sk#14964, d_moy#15008, n#15033, avg#15034, m2#15035, sum#15051, count#15052L])
                                                +- GpuColumnarToRow false
                                                   +- GpuProject [inv_quantity_on_hand#14963, d_moy#15008, i_item_sk#14964, w_warehouse_sk#14986, w_warehouse_name#14988], true
                                                      +- GpuShuffledHashJoin [inv_warehouse_sk#14962], [w_warehouse_sk#14986], Inner, GpuBuildRight, false
                                                         :- GpuShuffleCoalesce 2147483647
                                                         :  +- GpuCustomShuffleReader coalesced
                                                         :     +- ShuffleQueryStage 15
                                                         :        +- GpuColumnarExchange gpuhashpartitioning(inv_warehouse_sk#14962, 200), ENSURE_REQUIREMENTS, [id=#272167]
                                                         :           +- GpuProject [inv_warehouse_sk#14962, inv_quantity_on_hand#14963, d_moy#15008, i_item_sk#14964], true
                                                         :              +- GpuShuffledHashJoin [inv_item_sk#14961], [i_item_sk#14964], Inner, GpuBuildRight, false
                                                         :                 :- GpuShuffleCoalesce 2147483647
                                                         :                 :  +- GpuCustomShuffleReader coalesced
                                                         :                 :     +- ShuffleQueryStage 12
                                                         :                 :        +- GpuColumnarExchange gpuhashpartitioning(inv_item_sk#14961, 200), ENSURE_REQUIREMENTS, [id=#271284]
                                                         :                 :           +- GpuProject [inv_item_sk#14961, inv_warehouse_sk#14962, inv_quantity_on_hand#14963, d_moy#15008], true
                                                         :                 :              +- GpuShuffledHashJoin [inv_date_sk#14960], [d_date_sk#15000], Inner, GpuBuildRight, false
                                                         :                 :                 :- GpuShuffleCoalesce 2147483647
                                                         :                 :                 :  +- GpuCustomShuffleReader coalesced
                                                         :                 :                 :     +- ShuffleQueryStage 5
                                                         :                 :                 :        +- ReusedExchange [inv_date_sk#14960, inv_item_sk#14961, inv_warehouse_sk#14962, inv_quantity_on_hand#14963], GpuColumnarExchange gpuhashpartitioning(inv_date_sk#436, 200), ENSURE_REQUIREMENTS, [id=#269471]
                                                         :                 :                 +- GpuCustomShuffleReader coalesced
                                                         :                 :                    +- ShuffleQueryStage 6
                                                         :                 :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#15000, 200), ENSURE_REQUIREMENTS, [id=#269649]
                                                         :                 :                          +- GpuProject [d_date_sk#15000, d_moy#15008], true
                                                         :                 :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                         :                 :                                +- GpuFilter ((((gpuisnotnull(d_year#15006) AND gpuisnotnull(d_moy#15008)) AND (d_year#15006 = 2001)) AND (d_moy#15008 = 2)) AND gpuisnotnull(d_date_sk#15000)), true
                                                         :                 :                                   +- GpuFileGpuScan parquet [d_date_sk#15000,d_year#15006,d_moy#15008] Batched: true, DataFilters: [isnotnull(d_year#15006), isnotnull(d_moy#15008), (d_year#15006 = 2001), (d_moy#15008 = 2), isnot..., Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                                         :                 +- GpuCustomShuffleReader coalesced
                                                         :                    +- ShuffleQueryStage 8
                                                         :                       +- ReusedExchange [i_item_sk#14964], GpuColumnarExchange gpuhashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#269542]
                                                         +- GpuCustomShuffleReader coalesced
                                                            +- ShuffleQueryStage 10
                                                               +- ReusedExchange [w_warehouse_sk#14986, w_warehouse_name#14988], GpuColumnarExchange gpuhashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#269574]
+- == Initial Plan ==
   Sort [w_warehouse_sk#770 ASC NULLS FIRST, i_item_sk#668 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST, mean#14907 ASC NULLS FIRST, cov#14908 ASC NULLS FIRST, d_moy#15008 ASC NULLS FIRST, mean#14940 ASC NULLS FIRST, cov#14941 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(w_warehouse_sk#770 ASC NULLS FIRST, i_item_sk#668 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST, mean#14907 ASC NULLS FIRST, cov#14908 ASC NULLS FIRST, d_moy#15008 ASC NULLS FIRST, mean#14940 ASC NULLS FIRST, cov#14941 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#268574]
      +- SortMergeJoin [i_item_sk#668, w_warehouse_sk#770], [i_item_sk#14964, w_warehouse_sk#14986], Inner
         :- Sort [i_item_sk#668 ASC NULLS FIRST, w_warehouse_sk#770 ASC NULLS FIRST], false, 0
         :  +- Exchange hashpartitioning(i_item_sk#668, w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#268568]
         :     +- Project [w_warehouse_sk#770, i_item_sk#668, d_moy#620, mean#14907, CASE WHEN (mean#14907 = 0.0) THEN null ELSE (stdev#14906 / mean#14907) END AS cov#14908]
         :        +- Filter ((isnotnull(stdev#14906) AND isnotnull(mean#14907)) AND ((NOT coalesce((mean#14907 = 0.0), false) AND ((stdev#14906 / mean#14907) > 1.0)) AND ((stdev#14906 / mean#14907) > 1.5)))
         :           +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sk#770, i_item_sk#668, d_moy#620], functions=[stddev_samp(cast(inv_quantity_on_hand#439 as double)), avg(inv_quantity_on_hand#439)], output=[w_warehouse_sk#770, i_item_sk#668, d_moy#620, stdev#14906, mean#14907])
         :              +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sk#770, i_item_sk#668, d_moy#620], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#439 as double)), partial_avg(inv_quantity_on_hand#439)], output=[w_warehouse_name#772, w_warehouse_sk#770, i_item_sk#668, d_moy#620, n#14932, avg#14933, m2#14934, sum#15039, count#15040L])
         :                 +- Project [inv_quantity_on_hand#439, d_moy#620, i_item_sk#668, w_warehouse_sk#770, w_warehouse_name#772]
         :                    +- SortMergeJoin [inv_warehouse_sk#438], [w_warehouse_sk#770], Inner
         :                       :- Sort [inv_warehouse_sk#438 ASC NULLS FIRST], false, 0
         :                       :  +- Exchange hashpartitioning(inv_warehouse_sk#438, 200), ENSURE_REQUIREMENTS, [id=#268529]
         :                       :     +- Project [inv_warehouse_sk#438, inv_quantity_on_hand#439, d_moy#620, i_item_sk#668]
         :                       :        +- SortMergeJoin [inv_item_sk#437], [i_item_sk#668], Inner
         :                       :           :- Sort [inv_item_sk#437 ASC NULLS FIRST], false, 0
         :                       :           :  +- Exchange hashpartitioning(inv_item_sk#437, 200), ENSURE_REQUIREMENTS, [id=#268521]
         :                       :           :     +- Project [inv_item_sk#437, inv_warehouse_sk#438, inv_quantity_on_hand#439, d_moy#620]
         :                       :           :        +- SortMergeJoin [inv_date_sk#436], [d_date_sk#612], Inner
         :                       :           :           :- Sort [inv_date_sk#436 ASC NULLS FIRST], false, 0
         :                       :           :           :  +- Exchange hashpartitioning(inv_date_sk#436, 200), ENSURE_REQUIREMENTS, [id=#268513]
         :                       :           :           :     +- Filter ((isnotnull(inv_date_sk#436) AND isnotnull(inv_item_sk#437)) AND isnotnull(inv_warehouse_sk#438))
         :                       :           :           :        +- FileScan parquet [inv_date_sk#436,inv_item_sk#437,inv_warehouse_sk#438,inv_quantity_on_hand#439] Batched: true, DataFilters: [isnotnull(inv_date_sk#436), isnotnull(inv_item_sk#437), isnotnull(inv_warehouse_sk#438)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/inventory.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(inv_date_sk), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)], ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
         :                       :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :                       :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#268514]
         :                       :           :                 +- Project [d_date_sk#612, d_moy#620]
         :                       :           :                    +- Filter ((((isnotnull(d_year#618) AND isnotnull(d_moy#620)) AND (d_year#618 = 2001)) AND (d_moy#620 = 1)) AND isnotnull(d_date_sk#612))
         :                       :           :                       +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_year#618), isnotnull(d_moy#620), (d_year#618 = 2001), (d_moy#620 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :                       :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :                       :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#268522]
         :                       :                 +- Filter isnotnull(i_item_sk#668)
         :                       :                    +- FileScan parquet [i_item_sk#668] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int>
         :                       +- Sort [w_warehouse_sk#770 ASC NULLS FIRST], false, 0
         :                          +- Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#268530]
         :                             +- Filter isnotnull(w_warehouse_sk#770)
         :                                +- FileScan parquet [w_warehouse_sk#770,w_warehouse_name#772] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
         +- Sort [i_item_sk#14964 ASC NULLS FIRST, w_warehouse_sk#14986 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_item_sk#14964, w_warehouse_sk#14986, 200), ENSURE_REQUIREMENTS, [id=#268569]
               +- Project [w_warehouse_sk#14986, i_item_sk#14964, d_moy#15008, mean#14907 AS mean#14940, CASE WHEN (mean#14907 = 0.0) THEN null ELSE (stdev#14906 / mean#14907) END AS cov#14941]
                  +- Filter ((isnotnull(stdev#14906) AND isnotnull(mean#14907)) AND (NOT coalesce((mean#14907 = 0.0), false) AND ((stdev#14906 / mean#14907) > 1.0)))
                     +- HashAggregate(keys=[w_warehouse_name#14988, w_warehouse_sk#14986, i_item_sk#14964, d_moy#15008], functions=[stddev_samp(cast(inv_quantity_on_hand#14963 as double)), avg(inv_quantity_on_hand#14963)], output=[w_warehouse_sk#14986, i_item_sk#14964, d_moy#15008, stdev#14906, mean#14907])
                        +- HashAggregate(keys=[w_warehouse_name#14988, w_warehouse_sk#14986, i_item_sk#14964, d_moy#15008], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#14963 as double)), partial_avg(inv_quantity_on_hand#14963)], output=[w_warehouse_name#14988, w_warehouse_sk#14986, i_item_sk#14964, d_moy#15008, n#15033, avg#15034, m2#15035, sum#15051, count#15052L])
                           +- Project [inv_quantity_on_hand#14963, d_moy#15008, i_item_sk#14964, w_warehouse_sk#14986, w_warehouse_name#14988]
                              +- SortMergeJoin [inv_warehouse_sk#14962], [w_warehouse_sk#14986], Inner
                                 :- Sort [inv_warehouse_sk#14962 ASC NULLS FIRST], false, 0
                                 :  +- Exchange hashpartitioning(inv_warehouse_sk#14962, 200), ENSURE_REQUIREMENTS, [id=#268556]
                                 :     +- Project [inv_warehouse_sk#14962, inv_quantity_on_hand#14963, d_moy#15008, i_item_sk#14964]
                                 :        +- SortMergeJoin [inv_item_sk#14961], [i_item_sk#14964], Inner
                                 :           :- Sort [inv_item_sk#14961 ASC NULLS FIRST], false, 0
                                 :           :  +- Exchange hashpartitioning(inv_item_sk#14961, 200), ENSURE_REQUIREMENTS, [id=#268548]
                                 :           :     +- Project [inv_item_sk#14961, inv_warehouse_sk#14962, inv_quantity_on_hand#14963, d_moy#15008]
                                 :           :        +- SortMergeJoin [inv_date_sk#14960], [d_date_sk#15000], Inner
                                 :           :           :- Sort [inv_date_sk#14960 ASC NULLS FIRST], false, 0
                                 :           :           :  +- Exchange hashpartitioning(inv_date_sk#14960, 200), ENSURE_REQUIREMENTS, [id=#268540]
                                 :           :           :     +- Filter ((isnotnull(inv_date_sk#14960) AND isnotnull(inv_item_sk#14961)) AND isnotnull(inv_warehouse_sk#14962))
                                 :           :           :        +- FileScan parquet [inv_date_sk#14960,inv_item_sk#14961,inv_warehouse_sk#14962,inv_quantity_on_hand#14963] Batched: true, DataFilters: [isnotnull(inv_date_sk#14960), isnotnull(inv_item_sk#14961), isnotnull(inv_warehouse_sk#14962)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/inventory.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(inv_date_sk), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)], ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
                                 :           :           +- Sort [d_date_sk#15000 ASC NULLS FIRST], false, 0
                                 :           :              +- Exchange hashpartitioning(d_date_sk#15000, 200), ENSURE_REQUIREMENTS, [id=#268541]
                                 :           :                 +- Project [d_date_sk#15000, d_moy#15008]
                                 :           :                    +- Filter ((((isnotnull(d_year#15006) AND isnotnull(d_moy#15008)) AND (d_year#15006 = 2001)) AND (d_moy#15008 = 2)) AND isnotnull(d_date_sk#15000))
                                 :           :                       +- FileScan parquet [d_date_sk#15000,d_year#15006,d_moy#15008] Batched: true, DataFilters: [isnotnull(d_year#15006), isnotnull(d_moy#15008), (d_year#15006 = 2001), (d_moy#15008 = 2), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                 :           +- Sort [i_item_sk#14964 ASC NULLS FIRST], false, 0
                                 :              +- Exchange hashpartitioning(i_item_sk#14964, 200), ENSURE_REQUIREMENTS, [id=#268549]
                                 :                 +- Filter isnotnull(i_item_sk#14964)
                                 :                    +- FileScan parquet [i_item_sk#14964] Batched: true, DataFilters: [isnotnull(i_item_sk#14964)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int>
                                 +- Sort [w_warehouse_sk#14986 ASC NULLS FIRST], false, 0
                                    +- Exchange hashpartitioning(w_warehouse_sk#14986, 200), ENSURE_REQUIREMENTS, [id=#268557]
                                       +- Filter isnotnull(w_warehouse_sk#14986)
                                          +- FileScan parquet [w_warehouse_sk#14986,w_warehouse_name#14988] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#14986)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
