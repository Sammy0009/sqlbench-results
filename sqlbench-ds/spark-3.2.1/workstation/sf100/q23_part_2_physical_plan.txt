AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   GpuColumnarToRow false
   +- GpuTopN(limit=100, orderBy=[c_last_name#9768 ASC NULLS FIRST,c_first_name#9767 ASC NULLS FIRST,sales#9653 ASC NULLS FIRST], output=[c_last_name#9768,c_first_name#9767,sales#9653])
      +- GpuShuffleCoalesce 2147483647
         +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#193049]
            +- GpuTopN(limit=100, orderBy=[c_last_name#9768 ASC NULLS FIRST,c_first_name#9767 ASC NULLS FIRST,sales#9653 ASC NULLS FIRST], output=[c_last_name#9768,c_first_name#9767,sales#9653])
               +- GpuUnion
                  :- GpuRowToColumnar targetsize(2147483647)
                  :  +- *(7) HashAggregate(keys=[c_last_name#9768, c_first_name#9767], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#564 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_last_name#9768, c_first_name#9767, sales#9653])
                  :     +- AQEShuffleRead coalesced
                  :        +- ShuffleQueryStage 39
                  :           +- Exchange hashpartitioning(c_last_name#9768, c_first_name#9767, 200), ENSURE_REQUIREMENTS, [id=#192263]
                  :              +- *(4) HashAggregate(keys=[c_last_name#9768, c_first_name#9767], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#564 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_last_name#9768, c_first_name#9767, sum#9871, isEmpty#9872])
                  :                 +- GpuColumnarToRow false
                  :                    +- GpuProject [cs_quantity#562, cs_list_price#564, c_first_name#9767, c_last_name#9768], true
                  :                       +- GpuShuffledHashJoin [cs_bill_customer_sk#547], [c_customer_sk#9759], Inner, GpuBuildRight, false
                  :                          :- GpuShuffleCoalesce 2147483647
                  :                          :  +- GpuCustomShuffleReader coalesced
                  :                          :     +- ShuffleQueryStage 38
                  :                          :        +- GpuColumnarExchange gpuhashpartitioning(cs_bill_customer_sk#547, 200), ENSURE_REQUIREMENTS, [id=#191740]
                  :                          :           +- GpuProject [cs_bill_customer_sk#547, cs_quantity#562, cs_list_price#564], true
                  :                          :              +- GpuShuffledHashJoin [cs_sold_date_sk#544], [d_date_sk#9777], Inner, GpuBuildRight, false
                  :                          :                 :- GpuShuffleCoalesce 2147483647
                  :                          :                 :  +- GpuCustomShuffleReader coalesced
                  :                          :                 :     +- ShuffleQueryStage 36
                  :                          :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#190030]
                  :                          :                 :           +- GpuShuffledHashJoin [cs_bill_customer_sk#547], [c_customer_sk#9741], LeftSemi, GpuBuildRight, false
                  :                          :                 :              :- GpuShuffleCoalesce 2147483647
                  :                          :                 :              :  +- GpuCustomShuffleReader coalesced
                  :                          :                 :              :     +- ShuffleQueryStage 34
                  :                          :                 :              :        +- GpuColumnarExchange gpuhashpartitioning(cs_bill_customer_sk#547, 200), ENSURE_REQUIREMENTS, [id=#189192]
                  :                          :                 :              :           +- GpuProject [cs_sold_date_sk#544, cs_bill_customer_sk#547, cs_quantity#562, cs_list_price#564], true
                  :                          :                 :              :              +- GpuShuffledHashJoin [cs_item_sk#559], [item_sk#9660], LeftSemi, GpuBuildRight, false
                  :                          :                 :              :                 :- GpuShuffleCoalesce 2147483647
                  :                          :                 :              :                 :  +- GpuCustomShuffleReader coalesced
                  :                          :                 :              :                 :     +- ShuffleQueryStage 0
                  :                          :                 :              :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#179057]
                  :                          :                 :              :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                  :                          :                 :              :                 :              +- GpuFilter (gpuisnotnull(cs_sold_date_sk#544) AND gpuisnotnull(cs_bill_customer_sk#547)), true
                  :                          :                 :              :                 :                 +- GpuFileGpuScan parquet [cs_sold_date_sk#544,cs_bill_customer_sk#547,cs_item_sk#559,cs_quantity#562,cs_list_price#564] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544), isnotnull(cs_bill_customer_sk#547)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:d...
                  :                          :                 :              :                 +- GpuCoalesceBatches RequireSingleBatchWithFilter
                  :                          :                 :              :                    +- GpuProject [item_sk#9660], true
                  :                          :                 :              :                       +- GpuCoalesceBatches targetsize(2147483647)
                  :                          :                 :              :                          +- GpuFilter (cnt#9662L > 4), true
                  :                          :                 :              :                             +- GpuHashAggregate(keys=[_groupingexpression#9867, i_item_sk#668, d_date#614], functions=[gpucount(1, false)], output=[item_sk#9660, cnt#9662L])
                  :                          :                 :              :                                +- GpuHashAggregate(keys=[_groupingexpression#9867, i_item_sk#668, d_date#614], functions=[partial_gpucount(1, false)], output=[_groupingexpression#9867, i_item_sk#668, d_date#614, count#9874L])
                  :                          :                 :              :                                   +- GpuProject [d_date#614, i_item_sk#668, gpusubstring(i_item_desc#672, 1, 30) AS _groupingexpression#9867], true
                  :                          :                 :              :                                      +- GpuShuffledHashJoin [ss_item_sk#254], [i_item_sk#668], Inner, GpuBuildRight, false
                  :                          :                 :              :                                         :- GpuShuffleCoalesce 2147483647
                  :                          :                 :              :                                         :  +- GpuCustomShuffleReader coalesced
                  :                          :                 :              :                                         :     +- ShuffleQueryStage 31
                  :                          :                 :              :                                         :        +- GpuColumnarExchange gpuhashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#183696]
                  :                          :                 :              :                                         :           +- GpuProject [ss_item_sk#254, d_date#614], true
                  :                          :                 :              :                                         :              +- GpuShuffledHashJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner, GpuBuildRight, false
                  :                          :                 :              :                                         :                 :- GpuShuffleCoalesce 2147483647
                  :                          :                 :              :                                         :                 :  +- GpuCustomShuffleReader coalesced
                  :                          :                 :              :                                         :                 :     +- ShuffleQueryStage 1
                  :                          :                 :              :                                         :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#179085]
                  :                          :                 :              :                                         :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                  :                          :                 :              :                                         :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#252) AND gpuisnotnull(ss_item_sk#254)), true
                  :                          :                 :              :                                         :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#252,ss_item_sk#254] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>
                  :                          :                 :              :                                         :                 +- GpuCustomShuffleReader coalesced
                  :                          :                 :              :                                         :                    +- ShuffleQueryStage 2
                  :                          :                 :              :                                         :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#179122]
                  :                          :                 :              :                                         :                          +- GpuProject [d_date_sk#612, d_date#614], true
                  :                          :                 :              :                                         :                             +- GpuCoalesceBatches targetsize(2147483647)
                  :                          :                 :              :                                         :                                +- GpuFilter (d_year#618 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#612)), true
                  :                          :                 :              :                                         :                                   +- GpuFileGpuScan parquet [d_date_sk#612,d_date#614,d_year#618] Batched: true, DataFilters: [d_year#618 IN (2000,2001,2002,2003), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
                  :                          :                 :              :                                         +- GpuCustomShuffleReader coalesced
                  :                          :                 :              :                                            +- ShuffleQueryStage 3
                  :                          :                 :              :                                               +- GpuColumnarExchange gpuhashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#179156]
                  :                          :                 :              :                                                  +- GpuCoalesceBatches targetsize(2147483647)
                  :                          :                 :              :                                                     +- GpuFilter gpuisnotnull(i_item_sk#668), true
                  :                          :                 :              :                                                        +- GpuFileGpuScan parquet [i_item_sk#668,i_item_desc#672] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
                  :                          :                 :              +- GpuCoalesceBatches RequireSingleBatchWithFilter
                  :                          :                 :                 +- GpuProject [c_customer_sk#9741], true
                  :                          :                 :                    +- GpuRowToColumnar targetsize(2147483647)
                  :                          :                 :                       +- *(1) Filter (isnotnull(ssales#9665) AND (cast(ssales#9665 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9666, [id=#176731] as decimal(32,6)))), DecimalType(38,8), true)))
                  :                          :                 :                          :  +- Subquery subquery#9666, [id=#176731]
                  :                          :                 :                          :     +- AdaptiveSparkPlan isFinalPlan=true
                                                                                                +- == Final Plan ==
                                                                                                   GpuColumnarToRow false
                                                                                                   +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9663)], output=[tpcds_cmax#9664])
                                                                                                      +- GpuShuffleCoalesce 2147483647
                                                                                                         +- ShuffleQueryStage 5
                                                                                                            +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#190732]
                                                                                                               +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9663)], output=[max#9884])
                                                                                                                  +- GpuRowToColumnar targetsize(2147483647)
                                                                                                                     +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                                                                        +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                                                                           +- GpuColumnarToRow false
                                                                                                                              +- GpuProject [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400], true
                                                                                                                                 +- GpuShuffledHashJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                                                                                    :- GpuShuffleCoalesce 2147483647
                                                                                                                                    :  +- GpuCustomShuffleReader coalesced
                                                                                                                                    :     +- ShuffleQueryStage 4
                                                                                                                                    :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#190521]
                                                                                                                                    :           +- GpuProject [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680], true
                                                                                                                                    :              +- GpuShuffledHashJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner, GpuBuildRight, false
                                                                                                                                    :                 :- GpuShuffleCoalesce 2147483647
                                                                                                                                    :                 :  +- GpuCustomShuffleReader coalesced
                                                                                                                                    :                 :     +- ShuffleQueryStage 0
                                                                                                                                    :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#190139]
                                                                                                                                    :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                                                    :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9667) AND gpuisnotnull(ss_customer_sk#9670)), true
                                                                                                                                    :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                                                                    :                 +- GpuCustomShuffleReader coalesced
                                                                                                                                    :                    +- ShuffleQueryStage 1
                                                                                                                                    :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#190176]
                                                                                                                                    :                          +- GpuProject [d_date_sk#9690], true
                                                                                                                                    :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                                                    :                                +- GpuFilter (d_year#9696 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9690)), true
                                                                                                                                    :                                   +- GpuFileGpuScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                                                                    +- GpuCustomShuffleReader coalesced
                                                                                                                                       +- ShuffleQueryStage 3
                                                                                                                                          +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                                                                                                +- == Initial Plan ==
                                                                                                   HashAggregate(keys=[], functions=[max(csales#9663)], output=[tpcds_cmax#9664])
                                                                                                   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#176661]
                                                                                                      +- HashAggregate(keys=[], functions=[partial_max(csales#9663)], output=[max#9884])
                                                                                                         +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                                                            +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                                                               +- Project [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400]
                                                                                                                  +- SortMergeJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner
                                                                                                                     :- Sort [ss_customer_sk#9670 ASC NULLS FIRST], false, 0
                                                                                                                     :  +- Exchange hashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#176651]
                                                                                                                     :     +- Project [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680]
                                                                                                                     :        +- SortMergeJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner
                                                                                                                     :           :- Sort [ss_sold_date_sk#9667 ASC NULLS FIRST], false, 0
                                                                                                                     :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#176643]
                                                                                                                     :           :     +- Filter (isnotnull(ss_sold_date_sk#9667) AND isnotnull(ss_customer_sk#9670))
                                                                                                                     :           :        +- FileScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                                                     :           +- Sort [d_date_sk#9690 ASC NULLS FIRST], false, 0
                                                                                                                     :              +- Exchange hashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#176644]
                                                                                                                     :                 +- Project [d_date_sk#9690]
                                                                                                                     :                    +- Filter (d_year#9696 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9690))
                                                                                                                     :                       +- FileScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                                                     +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                                                                                        +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#176652]
                                                                                                                           +- Filter isnotnull(c_customer_sk#400)
                                                                                                                              +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                  :                          :                 :                          +- *(1) HashAggregate(keys=[c_customer_sk#9741], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, ssales#9665])
                  :                          :                 :                             +- *(1) HashAggregate(keys=[c_customer_sk#9741], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, sum#9877, isEmpty#9878])
                  :                          :                 :                                +- GpuColumnarToRow false
                  :                          :                 :                                   +- GpuProject [ss_quantity#9728, ss_sales_price#9731, c_customer_sk#9741], true
                  :                          :                 :                                      +- GpuShuffledHashJoin [ss_customer_sk#9721], [c_customer_sk#9741], Inner, GpuBuildRight, false
                  :                          :                 :                                         :- GpuShuffleCoalesce 2147483647
                  :                          :                 :                                         :  +- GpuCustomShuffleReader coalesced
                  :                          :                 :                                         :     +- ShuffleQueryStage 4
                  :                          :                 :                                         :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9721, 200), ENSURE_REQUIREMENTS, [id=#179195]
                  :                          :                 :                                         :           +- GpuCoalesceBatches targetsize(2147483647)
                  :                          :                 :                                         :              +- GpuFilter gpuisnotnull(ss_customer_sk#9721), true
                  :                          :                 :                                         :                 +- GpuFileGpuScan parquet [ss_customer_sk#9721,ss_quantity#9728,ss_sales_price#9731] Batched: true, DataFilters: [isnotnull(ss_customer_sk#9721)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                  :                          :                 :                                         +- GpuCustomShuffleReader coalesced
                  :                          :                 :                                            +- ShuffleQueryStage 5
                  :                          :                 :                                               +- GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                  :                          :                 :                                                  +- GpuCoalesceBatches targetsize(2147483647)
                  :                          :                 :                                                     +- GpuFilter gpuisnotnull(c_customer_sk#9741), true
                  :                          :                 :                                                        +- GpuFileGpuScan parquet [c_customer_sk#9741] Batched: true, DataFilters: [isnotnull(c_customer_sk#9741)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                  :                          :                 +- GpuCustomShuffleReader coalesced
                  :                          :                    +- ShuffleQueryStage 6
                  :                          :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9777, 200), ENSURE_REQUIREMENTS, [id=#179270]
                  :                          :                          +- GpuProject [d_date_sk#9777], true
                  :                          :                             +- GpuCoalesceBatches targetsize(2147483647)
                  :                          :                                +- GpuFilter ((((gpuisnotnull(d_year#9783) AND gpuisnotnull(d_moy#9785)) AND (d_year#9783 = 2000)) AND (d_moy#9785 = 7)) AND gpuisnotnull(d_date_sk#9777)), true
                  :                          :                                   +- GpuFileGpuScan parquet [d_date_sk#9777,d_year#9783,d_moy#9785] Batched: true, DataFilters: [isnotnull(d_year#9783), isnotnull(d_moy#9785), (d_year#9783 = 2000), (d_moy#9785 = 7), isnotnull..., Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,7), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :                          +- GpuCoalesceBatches RequireSingleBatchWithFilter
                  :                             +- GpuShuffledHashJoin [c_customer_sk#9759], [c_customer_sk#9741], LeftSemi, GpuBuildRight, false
                  :                                :- GpuShuffleCoalesce 2147483647
                  :                                :  +- GpuCustomShuffleReader coalesced
                  :                                :     +- ShuffleQueryStage 7
                  :                                :        +- GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9759, 200), ENSURE_REQUIREMENTS, [id=#179304]
                  :                                :           +- GpuCoalesceBatches targetsize(2147483647)
                  :                                :              +- GpuFilter gpuisnotnull(c_customer_sk#9759), true
                  :                                :                 +- GpuFileGpuScan parquet [c_customer_sk#9759,c_first_name#9767,c_last_name#9768] Batched: true, DataFilters: [isnotnull(c_customer_sk#9759)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
                  :                                +- GpuCoalesceBatches RequireSingleBatchWithFilter
                  :                                   +- GpuProject [c_customer_sk#9741], true
                  :                                      +- GpuRowToColumnar targetsize(2147483647)
                  :                                         +- *(3) Filter (isnotnull(ssales#9665) AND (cast(ssales#9665 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9666, [id=#176731] as decimal(32,6)))), DecimalType(38,8), true)))
                  :                                            :  +- Subquery subquery#9666, [id=#176731]
                  :                                            :     +- AdaptiveSparkPlan isFinalPlan=true
                                                                     +- == Final Plan ==
                                                                        GpuColumnarToRow false
                                                                        +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9663)], output=[tpcds_cmax#9664])
                                                                           +- GpuShuffleCoalesce 2147483647
                                                                              +- ShuffleQueryStage 5
                                                                                 +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#190732]
                                                                                    +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9663)], output=[max#9884])
                                                                                       +- GpuRowToColumnar targetsize(2147483647)
                                                                                          +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                                             +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                                                +- GpuColumnarToRow false
                                                                                                   +- GpuProject [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400], true
                                                                                                      +- GpuShuffledHashJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                                                         :- GpuShuffleCoalesce 2147483647
                                                                                                         :  +- GpuCustomShuffleReader coalesced
                                                                                                         :     +- ShuffleQueryStage 4
                                                                                                         :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#190521]
                                                                                                         :           +- GpuProject [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680], true
                                                                                                         :              +- GpuShuffledHashJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner, GpuBuildRight, false
                                                                                                         :                 :- GpuShuffleCoalesce 2147483647
                                                                                                         :                 :  +- GpuCustomShuffleReader coalesced
                                                                                                         :                 :     +- ShuffleQueryStage 0
                                                                                                         :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#190139]
                                                                                                         :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                         :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9667) AND gpuisnotnull(ss_customer_sk#9670)), true
                                                                                                         :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                                         :                 +- GpuCustomShuffleReader coalesced
                                                                                                         :                    +- ShuffleQueryStage 1
                                                                                                         :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#190176]
                                                                                                         :                          +- GpuProject [d_date_sk#9690], true
                                                                                                         :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                         :                                +- GpuFilter (d_year#9696 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9690)), true
                                                                                                         :                                   +- GpuFileGpuScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                                         +- GpuCustomShuffleReader coalesced
                                                                                                            +- ShuffleQueryStage 3
                                                                                                               +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                                                                     +- == Initial Plan ==
                                                                        HashAggregate(keys=[], functions=[max(csales#9663)], output=[tpcds_cmax#9664])
                                                                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#176661]
                                                                           +- HashAggregate(keys=[], functions=[partial_max(csales#9663)], output=[max#9884])
                                                                              +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                                 +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                                    +- Project [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400]
                                                                                       +- SortMergeJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner
                                                                                          :- Sort [ss_customer_sk#9670 ASC NULLS FIRST], false, 0
                                                                                          :  +- Exchange hashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#176651]
                                                                                          :     +- Project [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680]
                                                                                          :        +- SortMergeJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner
                                                                                          :           :- Sort [ss_sold_date_sk#9667 ASC NULLS FIRST], false, 0
                                                                                          :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#176643]
                                                                                          :           :     +- Filter (isnotnull(ss_sold_date_sk#9667) AND isnotnull(ss_customer_sk#9670))
                                                                                          :           :        +- FileScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                          :           +- Sort [d_date_sk#9690 ASC NULLS FIRST], false, 0
                                                                                          :              +- Exchange hashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#176644]
                                                                                          :                 +- Project [d_date_sk#9690]
                                                                                          :                    +- Filter (d_year#9696 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9690))
                                                                                          :                       +- FileScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                          +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                                                             +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#176652]
                                                                                                +- Filter isnotnull(c_customer_sk#400)
                                                                                                   +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                  :                                            +- *(3) HashAggregate(keys=[c_customer_sk#9741], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, ssales#9665])
                  :                                               +- *(3) HashAggregate(keys=[c_customer_sk#9741], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, sum#9877, isEmpty#9878])
                  :                                                  +- GpuColumnarToRow false
                  :                                                     +- GpuProject [ss_quantity#9728, ss_sales_price#9731, c_customer_sk#9741], true
                  :                                                        +- GpuShuffledHashJoin [ss_customer_sk#9721], [c_customer_sk#9741], Inner, GpuBuildRight, false
                  :                                                           :- GpuShuffleCoalesce 2147483647
                  :                                                           :  +- GpuCustomShuffleReader coalesced
                  :                                                           :     +- ShuffleQueryStage 9
                  :                                                           :        +- ReusedExchange [ss_customer_sk#9721, ss_quantity#9728, ss_sales_price#9731], GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9721, 200), ENSURE_REQUIREMENTS, [id=#179195]
                  :                                                           +- GpuCustomShuffleReader coalesced
                  :                                                              +- ShuffleQueryStage 11
                  :                                                                 +- ReusedExchange [c_customer_sk#9741], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                  +- GpuRowToColumnar targetsize(2147483647)
                     +- *(8) HashAggregate(keys=[c_last_name#9814, c_first_name#9813], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#496 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_last_name#9814, c_first_name#9813, sales#9656])
                        +- AQEShuffleRead coalesced
                           +- ShuffleQueryStage 41
                              +- Exchange hashpartitioning(c_last_name#9814, c_first_name#9813, 200), ENSURE_REQUIREMENTS, [id=#192890]
                                 +- *(6) HashAggregate(keys=[c_last_name#9814, c_first_name#9813], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#496 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_last_name#9814, c_first_name#9813, sum#9881, isEmpty#9882])
                                    +- GpuColumnarToRow false
                                       +- GpuProject [ws_quantity#494, ws_list_price#496, c_first_name#9813, c_last_name#9814], true
                                          +- GpuShuffledHashJoin [ws_bill_customer_sk#480], [c_customer_sk#9805], Inner, GpuBuildRight, false
                                             :- GpuShuffleCoalesce 2147483647
                                             :  +- GpuCustomShuffleReader coalesced
                                             :     +- ShuffleQueryStage 40
                                             :        +- GpuColumnarExchange gpuhashpartitioning(ws_bill_customer_sk#480, 200), ENSURE_REQUIREMENTS, [id=#192531]
                                             :           +- GpuProject [ws_bill_customer_sk#480, ws_quantity#494, ws_list_price#496], true
                                             :              +- GpuShuffledHashJoin [ws_sold_date_sk#476], [d_date_sk#9823], Inner, GpuBuildRight, false
                                             :                 :- GpuShuffleCoalesce 2147483647
                                             :                 :  +- GpuCustomShuffleReader coalesced
                                             :                 :     +- ShuffleQueryStage 37
                                             :                 :        +- GpuColumnarExchange gpuhashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#191329]
                                             :                 :           +- GpuShuffledHashJoin [ws_bill_customer_sk#480], [c_customer_sk#9741], LeftSemi, GpuBuildRight, false
                                             :                 :              :- GpuShuffleCoalesce 2147483647
                                             :                 :              :  +- GpuCustomShuffleReader coalesced
                                             :                 :              :     +- ShuffleQueryStage 35
                                             :                 :              :        +- GpuColumnarExchange gpuhashpartitioning(ws_bill_customer_sk#480, 200), ENSURE_REQUIREMENTS, [id=#189343]
                                             :                 :              :           +- GpuProject [ws_sold_date_sk#476, ws_bill_customer_sk#480, ws_quantity#494, ws_list_price#496], true
                                             :                 :              :              +- GpuShuffledHashJoin [ws_item_sk#479], [item_sk#9660], LeftSemi, GpuBuildRight, false
                                             :                 :              :                 :- GpuShuffleCoalesce 2147483647
                                             :                 :              :                 :  +- GpuCustomShuffleReader coalesced
                                             :                 :              :                 :     +- ShuffleQueryStage 12
                                             :                 :              :                 :        +- GpuColumnarExchange gpuhashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#179561]
                                             :                 :              :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                             :                 :              :                 :              +- GpuFilter (gpuisnotnull(ws_sold_date_sk#476) AND gpuisnotnull(ws_bill_customer_sk#480)), true
                                             :                 :              :                 :                 +- GpuFileGpuScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_bill_customer_sk#480,ws_quantity#494,ws_list_price#496] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476), isnotnull(ws_bill_customer_sk#480)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:d...
                                             :                 :              :                 +- GpuCoalesceBatches RequireSingleBatchWithFilter
                                             :                 :              :                    +- GpuProject [item_sk#9660], true
                                             :                 :              :                       +- GpuCoalesceBatches targetsize(2147483647)
                                             :                 :              :                          +- GpuFilter (cnt#9662L > 4), true
                                             :                 :              :                             +- GpuHashAggregate(keys=[_groupingexpression#9868, i_item_sk#668, d_date#614], functions=[gpucount(1, false)], output=[item_sk#9660, cnt#9662L])
                                             :                 :              :                                +- GpuHashAggregate(keys=[_groupingexpression#9868, i_item_sk#668, d_date#614], functions=[partial_gpucount(1, false)], output=[_groupingexpression#9868, i_item_sk#668, d_date#614, count#9874L])
                                             :                 :              :                                   +- GpuProject [d_date#614, i_item_sk#668, gpusubstring(i_item_desc#672, 1, 30) AS _groupingexpression#9868], true
                                             :                 :              :                                      +- GpuShuffledHashJoin [ss_item_sk#254], [i_item_sk#668], Inner, GpuBuildRight, false
                                             :                 :              :                                         :- GpuShuffleCoalesce 2147483647
                                             :                 :              :                                         :  +- GpuCustomShuffleReader coalesced
                                             :                 :              :                                         :     +- ShuffleQueryStage 33
                                             :                 :              :                                         :        +- ReusedExchange [ss_item_sk#254, d_date#614], GpuColumnarExchange gpuhashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#183696]
                                             :                 :              :                                         +- GpuCustomShuffleReader coalesced
                                             :                 :              :                                            +- ShuffleQueryStage 18
                                             :                 :              :                                               +- ReusedExchange [i_item_sk#668, i_item_desc#672], GpuColumnarExchange gpuhashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#179156]
                                             :                 :              +- GpuCoalesceBatches RequireSingleBatchWithFilter
                                             :                 :                 +- GpuProject [c_customer_sk#9741], true
                                             :                 :                    +- GpuRowToColumnar targetsize(2147483647)
                                             :                 :                       +- *(2) Filter (isnotnull(ssales#9665) AND (cast(ssales#9665 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9666, [id=#176731] as decimal(32,6)))), DecimalType(38,8), true)))
                                             :                 :                          :  +- Subquery subquery#9666, [id=#176731]
                                             :                 :                          :     +- AdaptiveSparkPlan isFinalPlan=true
                                                                                                +- == Final Plan ==
                                                                                                   GpuColumnarToRow false
                                                                                                   +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9663)], output=[tpcds_cmax#9664])
                                                                                                      +- GpuShuffleCoalesce 2147483647
                                                                                                         +- ShuffleQueryStage 5
                                                                                                            +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#190732]
                                                                                                               +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9663)], output=[max#9884])
                                                                                                                  +- GpuRowToColumnar targetsize(2147483647)
                                                                                                                     +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                                                                        +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                                                                           +- GpuColumnarToRow false
                                                                                                                              +- GpuProject [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400], true
                                                                                                                                 +- GpuShuffledHashJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                                                                                    :- GpuShuffleCoalesce 2147483647
                                                                                                                                    :  +- GpuCustomShuffleReader coalesced
                                                                                                                                    :     +- ShuffleQueryStage 4
                                                                                                                                    :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#190521]
                                                                                                                                    :           +- GpuProject [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680], true
                                                                                                                                    :              +- GpuShuffledHashJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner, GpuBuildRight, false
                                                                                                                                    :                 :- GpuShuffleCoalesce 2147483647
                                                                                                                                    :                 :  +- GpuCustomShuffleReader coalesced
                                                                                                                                    :                 :     +- ShuffleQueryStage 0
                                                                                                                                    :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#190139]
                                                                                                                                    :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                                                    :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9667) AND gpuisnotnull(ss_customer_sk#9670)), true
                                                                                                                                    :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                                                                    :                 +- GpuCustomShuffleReader coalesced
                                                                                                                                    :                    +- ShuffleQueryStage 1
                                                                                                                                    :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#190176]
                                                                                                                                    :                          +- GpuProject [d_date_sk#9690], true
                                                                                                                                    :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                                                    :                                +- GpuFilter (d_year#9696 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9690)), true
                                                                                                                                    :                                   +- GpuFileGpuScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                                                                    +- GpuCustomShuffleReader coalesced
                                                                                                                                       +- ShuffleQueryStage 3
                                                                                                                                          +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                                                                                                +- == Initial Plan ==
                                                                                                   HashAggregate(keys=[], functions=[max(csales#9663)], output=[tpcds_cmax#9664])
                                                                                                   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#176661]
                                                                                                      +- HashAggregate(keys=[], functions=[partial_max(csales#9663)], output=[max#9884])
                                                                                                         +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                                                            +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                                                               +- Project [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400]
                                                                                                                  +- SortMergeJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner
                                                                                                                     :- Sort [ss_customer_sk#9670 ASC NULLS FIRST], false, 0
                                                                                                                     :  +- Exchange hashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#176651]
                                                                                                                     :     +- Project [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680]
                                                                                                                     :        +- SortMergeJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner
                                                                                                                     :           :- Sort [ss_sold_date_sk#9667 ASC NULLS FIRST], false, 0
                                                                                                                     :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#176643]
                                                                                                                     :           :     +- Filter (isnotnull(ss_sold_date_sk#9667) AND isnotnull(ss_customer_sk#9670))
                                                                                                                     :           :        +- FileScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                                                     :           +- Sort [d_date_sk#9690 ASC NULLS FIRST], false, 0
                                                                                                                     :              +- Exchange hashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#176644]
                                                                                                                     :                 +- Project [d_date_sk#9690]
                                                                                                                     :                    +- Filter (d_year#9696 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9690))
                                                                                                                     :                       +- FileScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                                                     +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                                                                                        +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#176652]
                                                                                                                           +- Filter isnotnull(c_customer_sk#400)
                                                                                                                              +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                                             :                 :                          +- *(2) HashAggregate(keys=[c_customer_sk#9741], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, ssales#9665])
                                             :                 :                             +- *(2) HashAggregate(keys=[c_customer_sk#9741], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, sum#9877, isEmpty#9878])
                                             :                 :                                +- GpuColumnarToRow false
                                             :                 :                                   +- GpuProject [ss_quantity#9728, ss_sales_price#9731, c_customer_sk#9741], true
                                             :                 :                                      +- GpuShuffledHashJoin [ss_customer_sk#9721], [c_customer_sk#9741], Inner, GpuBuildRight, false
                                             :                 :                                         :- GpuShuffleCoalesce 2147483647
                                             :                 :                                         :  +- GpuCustomShuffleReader coalesced
                                             :                 :                                         :     +- ShuffleQueryStage 20
                                             :                 :                                         :        +- ReusedExchange [ss_customer_sk#9721, ss_quantity#9728, ss_sales_price#9731], GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9721, 200), ENSURE_REQUIREMENTS, [id=#179195]
                                             :                 :                                         +- GpuCustomShuffleReader coalesced
                                             :                 :                                            +- ShuffleQueryStage 22
                                             :                 :                                               +- ReusedExchange [c_customer_sk#9741], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                                             :                 +- GpuCustomShuffleReader coalesced
                                             :                    +- ShuffleQueryStage 24
                                             :                       +- ReusedExchange [d_date_sk#9823], GpuColumnarExchange gpuhashpartitioning(d_date_sk#9777, 200), ENSURE_REQUIREMENTS, [id=#179270]
                                             +- GpuCoalesceBatches RequireSingleBatchWithFilter
                                                +- GpuShuffledHashJoin [c_customer_sk#9805], [c_customer_sk#9741], LeftSemi, GpuBuildRight, false
                                                   :- GpuShuffleCoalesce 2147483647
                                                   :  +- GpuCustomShuffleReader coalesced
                                                   :     +- ShuffleQueryStage 26
                                                   :        +- ReusedExchange [c_customer_sk#9805, c_first_name#9813, c_last_name#9814], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9759, 200), ENSURE_REQUIREMENTS, [id=#179304]
                                                   +- GpuCoalesceBatches RequireSingleBatchWithFilter
                                                      +- GpuProject [c_customer_sk#9741], true
                                                         +- GpuRowToColumnar targetsize(2147483647)
                                                            +- *(5) Filter (isnotnull(ssales#9665) AND (cast(ssales#9665 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9666, [id=#176731] as decimal(32,6)))), DecimalType(38,8), true)))
                                                               :  +- Subquery subquery#9666, [id=#176731]
                                                               :     +- AdaptiveSparkPlan isFinalPlan=true
                                                                     +- == Final Plan ==
                                                                        GpuColumnarToRow false
                                                                        +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9663)], output=[tpcds_cmax#9664])
                                                                           +- GpuShuffleCoalesce 2147483647
                                                                              +- ShuffleQueryStage 5
                                                                                 +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#190732]
                                                                                    +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9663)], output=[max#9884])
                                                                                       +- GpuRowToColumnar targetsize(2147483647)
                                                                                          +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                                             +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                                                +- GpuColumnarToRow false
                                                                                                   +- GpuProject [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400], true
                                                                                                      +- GpuShuffledHashJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                                                         :- GpuShuffleCoalesce 2147483647
                                                                                                         :  +- GpuCustomShuffleReader coalesced
                                                                                                         :     +- ShuffleQueryStage 4
                                                                                                         :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#190521]
                                                                                                         :           +- GpuProject [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680], true
                                                                                                         :              +- GpuShuffledHashJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner, GpuBuildRight, false
                                                                                                         :                 :- GpuShuffleCoalesce 2147483647
                                                                                                         :                 :  +- GpuCustomShuffleReader coalesced
                                                                                                         :                 :     +- ShuffleQueryStage 0
                                                                                                         :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#190139]
                                                                                                         :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                         :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9667) AND gpuisnotnull(ss_customer_sk#9670)), true
                                                                                                         :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                                         :                 +- GpuCustomShuffleReader coalesced
                                                                                                         :                    +- ShuffleQueryStage 1
                                                                                                         :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#190176]
                                                                                                         :                          +- GpuProject [d_date_sk#9690], true
                                                                                                         :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                         :                                +- GpuFilter (d_year#9696 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9690)), true
                                                                                                         :                                   +- GpuFileGpuScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                                         +- GpuCustomShuffleReader coalesced
                                                                                                            +- ShuffleQueryStage 3
                                                                                                               +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                                                                     +- == Initial Plan ==
                                                                        HashAggregate(keys=[], functions=[max(csales#9663)], output=[tpcds_cmax#9664])
                                                                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#176661]
                                                                           +- HashAggregate(keys=[], functions=[partial_max(csales#9663)], output=[max#9884])
                                                                              +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                                 +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                                    +- Project [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400]
                                                                                       +- SortMergeJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner
                                                                                          :- Sort [ss_customer_sk#9670 ASC NULLS FIRST], false, 0
                                                                                          :  +- Exchange hashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#176651]
                                                                                          :     +- Project [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680]
                                                                                          :        +- SortMergeJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner
                                                                                          :           :- Sort [ss_sold_date_sk#9667 ASC NULLS FIRST], false, 0
                                                                                          :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#176643]
                                                                                          :           :     +- Filter (isnotnull(ss_sold_date_sk#9667) AND isnotnull(ss_customer_sk#9670))
                                                                                          :           :        +- FileScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                          :           +- Sort [d_date_sk#9690 ASC NULLS FIRST], false, 0
                                                                                          :              +- Exchange hashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#176644]
                                                                                          :                 +- Project [d_date_sk#9690]
                                                                                          :                    +- Filter (d_year#9696 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9690))
                                                                                          :                       +- FileScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                          +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                                                             +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#176652]
                                                                                                +- Filter isnotnull(c_customer_sk#400)
                                                                                                   +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                                                               +- *(5) HashAggregate(keys=[c_customer_sk#9741], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, ssales#9665])
                                                                  +- *(5) HashAggregate(keys=[c_customer_sk#9741], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, sum#9877, isEmpty#9878])
                                                                     +- GpuColumnarToRow false
                                                                        +- GpuProject [ss_quantity#9728, ss_sales_price#9731, c_customer_sk#9741], true
                                                                           +- GpuShuffledHashJoin [ss_customer_sk#9721], [c_customer_sk#9741], Inner, GpuBuildRight, false
                                                                              :- GpuShuffleCoalesce 2147483647
                                                                              :  +- GpuCustomShuffleReader coalesced
                                                                              :     +- ShuffleQueryStage 28
                                                                              :        +- ReusedExchange [ss_customer_sk#9721, ss_quantity#9728, ss_sales_price#9731], GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9721, 200), ENSURE_REQUIREMENTS, [id=#179195]
                                                                              +- GpuCustomShuffleReader coalesced
                                                                                 +- ShuffleQueryStage 30
                                                                                    +- ReusedExchange [c_customer_sk#9741], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_last_name#9768 ASC NULLS FIRST,c_first_name#9767 ASC NULLS FIRST,sales#9653 ASC NULLS FIRST], output=[c_last_name#9768,c_first_name#9767,sales#9653])
   +- Union
      :- HashAggregate(keys=[c_last_name#9768, c_first_name#9767], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#564 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_last_name#9768, c_first_name#9767, sales#9653])
      :  +- Exchange hashpartitioning(c_last_name#9768, c_first_name#9767, 200), ENSURE_REQUIREMENTS, [id=#176897]
      :     +- HashAggregate(keys=[c_last_name#9768, c_first_name#9767], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#564 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_last_name#9768, c_first_name#9767, sum#9871, isEmpty#9872])
      :        +- Project [cs_quantity#562, cs_list_price#564, c_first_name#9767, c_last_name#9768]
      :           +- SortMergeJoin [cs_bill_customer_sk#547], [c_customer_sk#9759], Inner
      :              :- Sort [cs_bill_customer_sk#547 ASC NULLS FIRST], false, 0
      :              :  +- Exchange hashpartitioning(cs_bill_customer_sk#547, 200), ENSURE_REQUIREMENTS, [id=#176891]
      :              :     +- Project [cs_bill_customer_sk#547, cs_quantity#562, cs_list_price#564]
      :              :        +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#9777], Inner
      :              :           :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
      :              :           :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#176866]
      :              :           :     +- SortMergeJoin [cs_bill_customer_sk#547], [c_customer_sk#9741], LeftSemi
      :              :           :        :- Sort [cs_bill_customer_sk#547 ASC NULLS FIRST], false, 0
      :              :           :        :  +- Exchange hashpartitioning(cs_bill_customer_sk#547, 200), ENSURE_REQUIREMENTS, [id=#176860]
      :              :           :        :     +- Project [cs_sold_date_sk#544, cs_bill_customer_sk#547, cs_quantity#562, cs_list_price#564]
      :              :           :        :        +- SortMergeJoin [cs_item_sk#559], [item_sk#9660], LeftSemi
      :              :           :        :           :- Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
      :              :           :        :           :  +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#176842]
      :              :           :        :           :     +- Filter (isnotnull(cs_sold_date_sk#544) AND isnotnull(cs_bill_customer_sk#547))
      :              :           :        :           :        +- FileScan parquet [cs_sold_date_sk#544,cs_bill_customer_sk#547,cs_item_sk#559,cs_quantity#562,cs_list_price#564] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544), isnotnull(cs_bill_customer_sk#547)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:d...
      :              :           :        :           +- Sort [item_sk#9660 ASC NULLS FIRST], false, 0
      :              :           :        :              +- Project [item_sk#9660]
      :              :           :        :                 +- Filter (cnt#9662L > 4)
      :              :           :        :                    +- HashAggregate(keys=[_groupingexpression#9867, i_item_sk#668, d_date#614], functions=[count(1)], output=[item_sk#9660, cnt#9662L])
      :              :           :        :                       +- HashAggregate(keys=[_groupingexpression#9867, i_item_sk#668, d_date#614], functions=[partial_count(1)], output=[_groupingexpression#9867, i_item_sk#668, d_date#614, count#9874L])
      :              :           :        :                          +- Project [d_date#614, i_item_sk#668, substr(i_item_desc#672, 1, 30) AS _groupingexpression#9867]
      :              :           :        :                             +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
      :              :           :        :                                :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
      :              :           :        :                                :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#176830]
      :              :           :        :                                :     +- Project [ss_item_sk#254, d_date#614]
      :              :           :        :                                :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
      :              :           :        :                                :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
      :              :           :        :                                :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#176822]
      :              :           :        :                                :           :     +- Filter (isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_item_sk#254))
      :              :           :        :                                :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>
      :              :           :        :                                :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
      :              :           :        :                                :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#176823]
      :              :           :        :                                :                 +- Project [d_date_sk#612, d_date#614]
      :              :           :        :                                :                    +- Filter (d_year#618 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#612))
      :              :           :        :                                :                       +- FileScan parquet [d_date_sk#612,d_date#614,d_year#618] Batched: true, DataFilters: [d_year#618 IN (2000,2001,2002,2003), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
      :              :           :        :                                +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
      :              :           :        :                                   +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#176831]
      :              :           :        :                                      +- Filter isnotnull(i_item_sk#668)
      :              :           :        :                                         +- FileScan parquet [i_item_sk#668,i_item_desc#672] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
      :              :           :        +- Sort [c_customer_sk#9741 ASC NULLS FIRST], false, 0
      :              :           :           +- Project [c_customer_sk#9741]
      :              :           :              +- Filter (isnotnull(ssales#9665) AND (cast(ssales#9665 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9666, [id=#176731] as decimal(32,6)))), DecimalType(38,8), true)))
      :              :           :                 :  +- Subquery subquery#9666, [id=#176731]
      :              :           :                 :     +- AdaptiveSparkPlan isFinalPlan=true
                                                         +- == Final Plan ==
                                                            GpuColumnarToRow false
                                                            +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9663)], output=[tpcds_cmax#9664])
                                                               +- GpuShuffleCoalesce 2147483647
                                                                  +- ShuffleQueryStage 5
                                                                     +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#190732]
                                                                        +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9663)], output=[max#9884])
                                                                           +- GpuRowToColumnar targetsize(2147483647)
                                                                              +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                                 +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                                    +- GpuColumnarToRow false
                                                                                       +- GpuProject [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400], true
                                                                                          +- GpuShuffledHashJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                                             :- GpuShuffleCoalesce 2147483647
                                                                                             :  +- GpuCustomShuffleReader coalesced
                                                                                             :     +- ShuffleQueryStage 4
                                                                                             :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#190521]
                                                                                             :           +- GpuProject [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680], true
                                                                                             :              +- GpuShuffledHashJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner, GpuBuildRight, false
                                                                                             :                 :- GpuShuffleCoalesce 2147483647
                                                                                             :                 :  +- GpuCustomShuffleReader coalesced
                                                                                             :                 :     +- ShuffleQueryStage 0
                                                                                             :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#190139]
                                                                                             :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                                             :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9667) AND gpuisnotnull(ss_customer_sk#9670)), true
                                                                                             :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                             :                 +- GpuCustomShuffleReader coalesced
                                                                                             :                    +- ShuffleQueryStage 1
                                                                                             :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#190176]
                                                                                             :                          +- GpuProject [d_date_sk#9690], true
                                                                                             :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                                             :                                +- GpuFilter (d_year#9696 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9690)), true
                                                                                             :                                   +- GpuFileGpuScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                             +- GpuCustomShuffleReader coalesced
                                                                                                +- ShuffleQueryStage 3
                                                                                                   +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                                                         +- == Initial Plan ==
                                                            HashAggregate(keys=[], functions=[max(csales#9663)], output=[tpcds_cmax#9664])
                                                            +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#176661]
                                                               +- HashAggregate(keys=[], functions=[partial_max(csales#9663)], output=[max#9884])
                                                                  +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                     +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                        +- Project [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400]
                                                                           +- SortMergeJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner
                                                                              :- Sort [ss_customer_sk#9670 ASC NULLS FIRST], false, 0
                                                                              :  +- Exchange hashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#176651]
                                                                              :     +- Project [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680]
                                                                              :        +- SortMergeJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner
                                                                              :           :- Sort [ss_sold_date_sk#9667 ASC NULLS FIRST], false, 0
                                                                              :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#176643]
                                                                              :           :     +- Filter (isnotnull(ss_sold_date_sk#9667) AND isnotnull(ss_customer_sk#9670))
                                                                              :           :        +- FileScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                              :           +- Sort [d_date_sk#9690 ASC NULLS FIRST], false, 0
                                                                              :              +- Exchange hashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#176644]
                                                                              :                 +- Project [d_date_sk#9690]
                                                                              :                    +- Filter (d_year#9696 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9690))
                                                                              :                       +- FileScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                              +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                                                 +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#176652]
                                                                                    +- Filter isnotnull(c_customer_sk#400)
                                                                                       +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
      :              :           :                 +- HashAggregate(keys=[c_customer_sk#9741], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, ssales#9665])
      :              :           :                    +- HashAggregate(keys=[c_customer_sk#9741], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, sum#9877, isEmpty#9878])
      :              :           :                       +- Project [ss_quantity#9728, ss_sales_price#9731, c_customer_sk#9741]
      :              :           :                          +- SortMergeJoin [ss_customer_sk#9721], [c_customer_sk#9741], Inner
      :              :           :                             :- Sort [ss_customer_sk#9721 ASC NULLS FIRST], false, 0
      :              :           :                             :  +- Exchange hashpartitioning(ss_customer_sk#9721, 200), ENSURE_REQUIREMENTS, [id=#176848]
      :              :           :                             :     +- Filter isnotnull(ss_customer_sk#9721)
      :              :           :                             :        +- FileScan parquet [ss_customer_sk#9721,ss_quantity#9728,ss_sales_price#9731] Batched: true, DataFilters: [isnotnull(ss_customer_sk#9721)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
      :              :           :                             +- Sort [c_customer_sk#9741 ASC NULLS FIRST], false, 0
      :              :           :                                +- Exchange hashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#176849]
      :              :           :                                   +- Filter isnotnull(c_customer_sk#9741)
      :              :           :                                      +- FileScan parquet [c_customer_sk#9741] Batched: true, DataFilters: [isnotnull(c_customer_sk#9741)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
      :              :           +- Sort [d_date_sk#9777 ASC NULLS FIRST], false, 0
      :              :              +- Exchange hashpartitioning(d_date_sk#9777, 200), ENSURE_REQUIREMENTS, [id=#176867]
      :              :                 +- Project [d_date_sk#9777]
      :              :                    +- Filter ((((isnotnull(d_year#9783) AND isnotnull(d_moy#9785)) AND (d_year#9783 = 2000)) AND (d_moy#9785 = 7)) AND isnotnull(d_date_sk#9777))
      :              :                       +- FileScan parquet [d_date_sk#9777,d_year#9783,d_moy#9785] Batched: true, DataFilters: [isnotnull(d_year#9783), isnotnull(d_moy#9785), (d_year#9783 = 2000), (d_moy#9785 = 7), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,7), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
      :              +- SortMergeJoin [c_customer_sk#9759], [c_customer_sk#9741], LeftSemi
      :                 :- Sort [c_customer_sk#9759 ASC NULLS FIRST], false, 0
      :                 :  +- Exchange hashpartitioning(c_customer_sk#9759, 200), ENSURE_REQUIREMENTS, [id=#176885]
      :                 :     +- Filter isnotnull(c_customer_sk#9759)
      :                 :        +- FileScan parquet [c_customer_sk#9759,c_first_name#9767,c_last_name#9768] Batched: true, DataFilters: [isnotnull(c_customer_sk#9759)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
      :                 +- Sort [c_customer_sk#9741 ASC NULLS FIRST], false, 0
      :                    +- Project [c_customer_sk#9741]
      :                       +- Filter (isnotnull(ssales#9665) AND (cast(ssales#9665 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9666, [id=#176731] as decimal(32,6)))), DecimalType(38,8), true)))
      :                          :  +- Subquery subquery#9666, [id=#176731]
      :                          :     +- AdaptiveSparkPlan isFinalPlan=true
                                       +- == Final Plan ==
                                          GpuColumnarToRow false
                                          +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9663)], output=[tpcds_cmax#9664])
                                             +- GpuShuffleCoalesce 2147483647
                                                +- ShuffleQueryStage 5
                                                   +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#190732]
                                                      +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9663)], output=[max#9884])
                                                         +- GpuRowToColumnar targetsize(2147483647)
                                                            +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                               +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                  +- GpuColumnarToRow false
                                                                     +- GpuProject [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400], true
                                                                        +- GpuShuffledHashJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                           :- GpuShuffleCoalesce 2147483647
                                                                           :  +- GpuCustomShuffleReader coalesced
                                                                           :     +- ShuffleQueryStage 4
                                                                           :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#190521]
                                                                           :           +- GpuProject [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680], true
                                                                           :              +- GpuShuffledHashJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner, GpuBuildRight, false
                                                                           :                 :- GpuShuffleCoalesce 2147483647
                                                                           :                 :  +- GpuCustomShuffleReader coalesced
                                                                           :                 :     +- ShuffleQueryStage 0
                                                                           :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#190139]
                                                                           :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                           :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9667) AND gpuisnotnull(ss_customer_sk#9670)), true
                                                                           :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                           :                 +- GpuCustomShuffleReader coalesced
                                                                           :                    +- ShuffleQueryStage 1
                                                                           :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#190176]
                                                                           :                          +- GpuProject [d_date_sk#9690], true
                                                                           :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                           :                                +- GpuFilter (d_year#9696 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9690)), true
                                                                           :                                   +- GpuFileGpuScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                           +- GpuCustomShuffleReader coalesced
                                                                              +- ShuffleQueryStage 3
                                                                                 +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                                       +- == Initial Plan ==
                                          HashAggregate(keys=[], functions=[max(csales#9663)], output=[tpcds_cmax#9664])
                                          +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#176661]
                                             +- HashAggregate(keys=[], functions=[partial_max(csales#9663)], output=[max#9884])
                                                +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                   +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                      +- Project [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400]
                                                         +- SortMergeJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner
                                                            :- Sort [ss_customer_sk#9670 ASC NULLS FIRST], false, 0
                                                            :  +- Exchange hashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#176651]
                                                            :     +- Project [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680]
                                                            :        +- SortMergeJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner
                                                            :           :- Sort [ss_sold_date_sk#9667 ASC NULLS FIRST], false, 0
                                                            :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#176643]
                                                            :           :     +- Filter (isnotnull(ss_sold_date_sk#9667) AND isnotnull(ss_customer_sk#9670))
                                                            :           :        +- FileScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                            :           +- Sort [d_date_sk#9690 ASC NULLS FIRST], false, 0
                                                            :              +- Exchange hashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#176644]
                                                            :                 +- Project [d_date_sk#9690]
                                                            :                    +- Filter (d_year#9696 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9690))
                                                            :                       +- FileScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                            +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                               +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#176652]
                                                                  +- Filter isnotnull(c_customer_sk#400)
                                                                     +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
      :                          +- HashAggregate(keys=[c_customer_sk#9741], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, ssales#9665])
      :                             +- HashAggregate(keys=[c_customer_sk#9741], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, sum#9877, isEmpty#9878])
      :                                +- Project [ss_quantity#9728, ss_sales_price#9731, c_customer_sk#9741]
      :                                   +- SortMergeJoin [ss_customer_sk#9721], [c_customer_sk#9741], Inner
      :                                      :- Sort [ss_customer_sk#9721 ASC NULLS FIRST], false, 0
      :                                      :  +- Exchange hashpartitioning(ss_customer_sk#9721, 200), ENSURE_REQUIREMENTS, [id=#176873]
      :                                      :     +- Filter isnotnull(ss_customer_sk#9721)
      :                                      :        +- FileScan parquet [ss_customer_sk#9721,ss_quantity#9728,ss_sales_price#9731] Batched: true, DataFilters: [isnotnull(ss_customer_sk#9721)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
      :                                      +- Sort [c_customer_sk#9741 ASC NULLS FIRST], false, 0
      :                                         +- Exchange hashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#176874]
      :                                            +- Filter isnotnull(c_customer_sk#9741)
      :                                               +- FileScan parquet [c_customer_sk#9741] Batched: true, DataFilters: [isnotnull(c_customer_sk#9741)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
      +- HashAggregate(keys=[c_last_name#9814, c_first_name#9813], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#496 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_last_name#9814, c_first_name#9813, sales#9656])
         +- Exchange hashpartitioning(c_last_name#9814, c_first_name#9813, 200), ENSURE_REQUIREMENTS, [id=#176975]
            +- HashAggregate(keys=[c_last_name#9814, c_first_name#9813], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#496 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_last_name#9814, c_first_name#9813, sum#9881, isEmpty#9882])
               +- Project [ws_quantity#494, ws_list_price#496, c_first_name#9813, c_last_name#9814]
                  +- SortMergeJoin [ws_bill_customer_sk#480], [c_customer_sk#9805], Inner
                     :- Sort [ws_bill_customer_sk#480 ASC NULLS FIRST], false, 0
                     :  +- Exchange hashpartitioning(ws_bill_customer_sk#480, 200), ENSURE_REQUIREMENTS, [id=#176969]
                     :     +- Project [ws_bill_customer_sk#480, ws_quantity#494, ws_list_price#496]
                     :        +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#9823], Inner
                     :           :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                     :           :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#176944]
                     :           :     +- SortMergeJoin [ws_bill_customer_sk#480], [c_customer_sk#9741], LeftSemi
                     :           :        :- Sort [ws_bill_customer_sk#480 ASC NULLS FIRST], false, 0
                     :           :        :  +- Exchange hashpartitioning(ws_bill_customer_sk#480, 200), ENSURE_REQUIREMENTS, [id=#176938]
                     :           :        :     +- Project [ws_sold_date_sk#476, ws_bill_customer_sk#480, ws_quantity#494, ws_list_price#496]
                     :           :        :        +- SortMergeJoin [ws_item_sk#479], [item_sk#9660], LeftSemi
                     :           :        :           :- Sort [ws_item_sk#479 ASC NULLS FIRST], false, 0
                     :           :        :           :  +- Exchange hashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#176920]
                     :           :        :           :     +- Filter (isnotnull(ws_sold_date_sk#476) AND isnotnull(ws_bill_customer_sk#480))
                     :           :        :           :        +- FileScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_bill_customer_sk#480,ws_quantity#494,ws_list_price#496] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476), isnotnull(ws_bill_customer_sk#480)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:d...
                     :           :        :           +- Sort [item_sk#9660 ASC NULLS FIRST], false, 0
                     :           :        :              +- Project [item_sk#9660]
                     :           :        :                 +- Filter (cnt#9662L > 4)
                     :           :        :                    +- HashAggregate(keys=[_groupingexpression#9868, i_item_sk#668, d_date#614], functions=[count(1)], output=[item_sk#9660, cnt#9662L])
                     :           :        :                       +- HashAggregate(keys=[_groupingexpression#9868, i_item_sk#668, d_date#614], functions=[partial_count(1)], output=[_groupingexpression#9868, i_item_sk#668, d_date#614, count#9874L])
                     :           :        :                          +- Project [d_date#614, i_item_sk#668, substr(i_item_desc#672, 1, 30) AS _groupingexpression#9868]
                     :           :        :                             +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                     :           :        :                                :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                     :           :        :                                :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#176908]
                     :           :        :                                :     +- Project [ss_item_sk#254, d_date#614]
                     :           :        :                                :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                     :           :        :                                :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                     :           :        :                                :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#176900]
                     :           :        :                                :           :     +- Filter (isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_item_sk#254))
                     :           :        :                                :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>
                     :           :        :                                :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                     :           :        :                                :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#176901]
                     :           :        :                                :                 +- Project [d_date_sk#612, d_date#614]
                     :           :        :                                :                    +- Filter (d_year#618 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#612))
                     :           :        :                                :                       +- FileScan parquet [d_date_sk#612,d_date#614,d_year#618] Batched: true, DataFilters: [d_year#618 IN (2000,2001,2002,2003), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
                     :           :        :                                +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                     :           :        :                                   +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#176909]
                     :           :        :                                      +- Filter isnotnull(i_item_sk#668)
                     :           :        :                                         +- FileScan parquet [i_item_sk#668,i_item_desc#672] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
                     :           :        +- Sort [c_customer_sk#9741 ASC NULLS FIRST], false, 0
                     :           :           +- Project [c_customer_sk#9741]
                     :           :              +- Filter (isnotnull(ssales#9665) AND (cast(ssales#9665 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9666, [id=#176731] as decimal(32,6)))), DecimalType(38,8), true)))
                     :           :                 :  +- Subquery subquery#9666, [id=#176731]
                     :           :                 :     +- AdaptiveSparkPlan isFinalPlan=true
                                                         +- == Final Plan ==
                                                            GpuColumnarToRow false
                                                            +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9663)], output=[tpcds_cmax#9664])
                                                               +- GpuShuffleCoalesce 2147483647
                                                                  +- ShuffleQueryStage 5
                                                                     +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#190732]
                                                                        +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9663)], output=[max#9884])
                                                                           +- GpuRowToColumnar targetsize(2147483647)
                                                                              +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                                 +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                                    +- GpuColumnarToRow false
                                                                                       +- GpuProject [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400], true
                                                                                          +- GpuShuffledHashJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                                             :- GpuShuffleCoalesce 2147483647
                                                                                             :  +- GpuCustomShuffleReader coalesced
                                                                                             :     +- ShuffleQueryStage 4
                                                                                             :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#190521]
                                                                                             :           +- GpuProject [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680], true
                                                                                             :              +- GpuShuffledHashJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner, GpuBuildRight, false
                                                                                             :                 :- GpuShuffleCoalesce 2147483647
                                                                                             :                 :  +- GpuCustomShuffleReader coalesced
                                                                                             :                 :     +- ShuffleQueryStage 0
                                                                                             :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#190139]
                                                                                             :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                                             :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9667) AND gpuisnotnull(ss_customer_sk#9670)), true
                                                                                             :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                             :                 +- GpuCustomShuffleReader coalesced
                                                                                             :                    +- ShuffleQueryStage 1
                                                                                             :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#190176]
                                                                                             :                          +- GpuProject [d_date_sk#9690], true
                                                                                             :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                                             :                                +- GpuFilter (d_year#9696 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9690)), true
                                                                                             :                                   +- GpuFileGpuScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                             +- GpuCustomShuffleReader coalesced
                                                                                                +- ShuffleQueryStage 3
                                                                                                   +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                                                         +- == Initial Plan ==
                                                            HashAggregate(keys=[], functions=[max(csales#9663)], output=[tpcds_cmax#9664])
                                                            +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#176661]
                                                               +- HashAggregate(keys=[], functions=[partial_max(csales#9663)], output=[max#9884])
                                                                  +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                                     +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                        +- Project [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400]
                                                                           +- SortMergeJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner
                                                                              :- Sort [ss_customer_sk#9670 ASC NULLS FIRST], false, 0
                                                                              :  +- Exchange hashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#176651]
                                                                              :     +- Project [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680]
                                                                              :        +- SortMergeJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner
                                                                              :           :- Sort [ss_sold_date_sk#9667 ASC NULLS FIRST], false, 0
                                                                              :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#176643]
                                                                              :           :     +- Filter (isnotnull(ss_sold_date_sk#9667) AND isnotnull(ss_customer_sk#9670))
                                                                              :           :        +- FileScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                              :           +- Sort [d_date_sk#9690 ASC NULLS FIRST], false, 0
                                                                              :              +- Exchange hashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#176644]
                                                                              :                 +- Project [d_date_sk#9690]
                                                                              :                    +- Filter (d_year#9696 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9690))
                                                                              :                       +- FileScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                              +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                                                 +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#176652]
                                                                                    +- Filter isnotnull(c_customer_sk#400)
                                                                                       +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                     :           :                 +- HashAggregate(keys=[c_customer_sk#9741], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, ssales#9665])
                     :           :                    +- HashAggregate(keys=[c_customer_sk#9741], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, sum#9877, isEmpty#9878])
                     :           :                       +- Project [ss_quantity#9728, ss_sales_price#9731, c_customer_sk#9741]
                     :           :                          +- SortMergeJoin [ss_customer_sk#9721], [c_customer_sk#9741], Inner
                     :           :                             :- Sort [ss_customer_sk#9721 ASC NULLS FIRST], false, 0
                     :           :                             :  +- Exchange hashpartitioning(ss_customer_sk#9721, 200), ENSURE_REQUIREMENTS, [id=#176926]
                     :           :                             :     +- Filter isnotnull(ss_customer_sk#9721)
                     :           :                             :        +- FileScan parquet [ss_customer_sk#9721,ss_quantity#9728,ss_sales_price#9731] Batched: true, DataFilters: [isnotnull(ss_customer_sk#9721)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                     :           :                             +- Sort [c_customer_sk#9741 ASC NULLS FIRST], false, 0
                     :           :                                +- Exchange hashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#176927]
                     :           :                                   +- Filter isnotnull(c_customer_sk#9741)
                     :           :                                      +- FileScan parquet [c_customer_sk#9741] Batched: true, DataFilters: [isnotnull(c_customer_sk#9741)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                     :           +- Sort [d_date_sk#9823 ASC NULLS FIRST], false, 0
                     :              +- Exchange hashpartitioning(d_date_sk#9823, 200), ENSURE_REQUIREMENTS, [id=#176945]
                     :                 +- Project [d_date_sk#9823]
                     :                    +- Filter ((((isnotnull(d_year#9829) AND isnotnull(d_moy#9831)) AND (d_year#9829 = 2000)) AND (d_moy#9831 = 7)) AND isnotnull(d_date_sk#9823))
                     :                       +- FileScan parquet [d_date_sk#9823,d_year#9829,d_moy#9831] Batched: true, DataFilters: [isnotnull(d_year#9829), isnotnull(d_moy#9831), (d_year#9829 = 2000), (d_moy#9831 = 7), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,7), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     +- SortMergeJoin [c_customer_sk#9805], [c_customer_sk#9741], LeftSemi
                        :- Sort [c_customer_sk#9805 ASC NULLS FIRST], false, 0
                        :  +- Exchange hashpartitioning(c_customer_sk#9805, 200), ENSURE_REQUIREMENTS, [id=#176963]
                        :     +- Filter isnotnull(c_customer_sk#9805)
                        :        +- FileScan parquet [c_customer_sk#9805,c_first_name#9813,c_last_name#9814] Batched: true, DataFilters: [isnotnull(c_customer_sk#9805)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
                        +- Sort [c_customer_sk#9741 ASC NULLS FIRST], false, 0
                           +- Project [c_customer_sk#9741]
                              +- Filter (isnotnull(ssales#9665) AND (cast(ssales#9665 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9666, [id=#176731] as decimal(32,6)))), DecimalType(38,8), true)))
                                 :  +- Subquery subquery#9666, [id=#176731]
                                 :     +- AdaptiveSparkPlan isFinalPlan=true
                                       +- == Final Plan ==
                                          GpuColumnarToRow false
                                          +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9663)], output=[tpcds_cmax#9664])
                                             +- GpuShuffleCoalesce 2147483647
                                                +- ShuffleQueryStage 5
                                                   +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#190732]
                                                      +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9663)], output=[max#9884])
                                                         +- GpuRowToColumnar targetsize(2147483647)
                                                            +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                               +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                                  +- GpuColumnarToRow false
                                                                     +- GpuProject [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400], true
                                                                        +- GpuShuffledHashJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                           :- GpuShuffleCoalesce 2147483647
                                                                           :  +- GpuCustomShuffleReader coalesced
                                                                           :     +- ShuffleQueryStage 4
                                                                           :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#190521]
                                                                           :           +- GpuProject [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680], true
                                                                           :              +- GpuShuffledHashJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner, GpuBuildRight, false
                                                                           :                 :- GpuShuffleCoalesce 2147483647
                                                                           :                 :  +- GpuCustomShuffleReader coalesced
                                                                           :                 :     +- ShuffleQueryStage 0
                                                                           :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#190139]
                                                                           :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                           :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9667) AND gpuisnotnull(ss_customer_sk#9670)), true
                                                                           :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                           :                 +- GpuCustomShuffleReader coalesced
                                                                           :                    +- ShuffleQueryStage 1
                                                                           :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#190176]
                                                                           :                          +- GpuProject [d_date_sk#9690], true
                                                                           :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                           :                                +- GpuFilter (d_year#9696 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9690)), true
                                                                           :                                   +- GpuFileGpuScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                           +- GpuCustomShuffleReader coalesced
                                                                              +- ShuffleQueryStage 3
                                                                                 +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#179223]
                                       +- == Initial Plan ==
                                          HashAggregate(keys=[], functions=[max(csales#9663)], output=[tpcds_cmax#9664])
                                          +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#176661]
                                             +- HashAggregate(keys=[], functions=[partial_max(csales#9663)], output=[max#9884])
                                                +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9663])
                                                   +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9677 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9680 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9887, isEmpty#9888])
                                                      +- Project [ss_quantity#9677, ss_sales_price#9680, c_customer_sk#400]
                                                         +- SortMergeJoin [ss_customer_sk#9670], [c_customer_sk#400], Inner
                                                            :- Sort [ss_customer_sk#9670 ASC NULLS FIRST], false, 0
                                                            :  +- Exchange hashpartitioning(ss_customer_sk#9670, 200), ENSURE_REQUIREMENTS, [id=#176651]
                                                            :     +- Project [ss_customer_sk#9670, ss_quantity#9677, ss_sales_price#9680]
                                                            :        +- SortMergeJoin [ss_sold_date_sk#9667], [d_date_sk#9690], Inner
                                                            :           :- Sort [ss_sold_date_sk#9667 ASC NULLS FIRST], false, 0
                                                            :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9667, 200), ENSURE_REQUIREMENTS, [id=#176643]
                                                            :           :     +- Filter (isnotnull(ss_sold_date_sk#9667) AND isnotnull(ss_customer_sk#9670))
                                                            :           :        +- FileScan parquet [ss_sold_date_sk#9667,ss_customer_sk#9670,ss_quantity#9677,ss_sales_price#9680] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9667), isnotnull(ss_customer_sk#9670)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                            :           +- Sort [d_date_sk#9690 ASC NULLS FIRST], false, 0
                                                            :              +- Exchange hashpartitioning(d_date_sk#9690, 200), ENSURE_REQUIREMENTS, [id=#176644]
                                                            :                 +- Project [d_date_sk#9690]
                                                            :                    +- Filter (d_year#9696 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9690))
                                                            :                       +- FileScan parquet [d_date_sk#9690,d_year#9696] Batched: true, DataFilters: [d_year#9696 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9690)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                            +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                               +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#176652]
                                                                  +- Filter isnotnull(c_customer_sk#400)
                                                                     +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                                 +- HashAggregate(keys=[c_customer_sk#9741], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, ssales#9665])
                                    +- HashAggregate(keys=[c_customer_sk#9741], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9728 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9731 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9741, sum#9877, isEmpty#9878])
                                       +- Project [ss_quantity#9728, ss_sales_price#9731, c_customer_sk#9741]
                                          +- SortMergeJoin [ss_customer_sk#9721], [c_customer_sk#9741], Inner
                                             :- Sort [ss_customer_sk#9721 ASC NULLS FIRST], false, 0
                                             :  +- Exchange hashpartitioning(ss_customer_sk#9721, 200), ENSURE_REQUIREMENTS, [id=#176951]
                                             :     +- Filter isnotnull(ss_customer_sk#9721)
                                             :        +- FileScan parquet [ss_customer_sk#9721,ss_quantity#9728,ss_sales_price#9731] Batched: true, DataFilters: [isnotnull(ss_customer_sk#9721)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                             +- Sort [c_customer_sk#9741 ASC NULLS FIRST], false, 0
                                                +- Exchange hashpartitioning(c_customer_sk#9741, 200), ENSURE_REQUIREMENTS, [id=#176952]
                                                   +- Filter isnotnull(c_customer_sk#9741)
                                                      +- FileScan parquet [c_customer_sk#9741] Batched: true, DataFilters: [isnotnull(c_customer_sk#9741)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
