AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_item_id#501 ASC NULLS FIRST,i_item_desc#504 ASC NULLS FIRST,s_state#350 ASC NULLS FIRST], output=[i_item_id#501,i_item_desc#504,s_state#350,store_sales_quantitycount#5473L,store_sales_quantityave#5474,store_sales_quantitystdev#5475,store_sales_quantitycov#5476,store_returns_quantitycount#5477L,store_returns_quantityave#5478,store_returns_quantitystdev#5479,store_returns_quantitycov#5480,catalog_sales_quantitycount#5481L,catalog_sales_quantityave#5482,catalog_sales_quantitystdev#5483,catalog_sales_quantitycov#5484])
   +- *(15) HashAggregate(keys=[i_item_id#501, i_item_desc#504, s_state#350], functions=[count(ss_quantity#674), avg(ss_quantity#674), stddev_samp(cast(ss_quantity#674 as double)), count(sr_return_quantity#720), avg(sr_return_quantity#720), stddev_samp(cast(sr_return_quantity#720 as double)), count(cs_quantity#136), avg(cs_quantity#136), stddev_samp(cast(cs_quantity#136 as double))], output=[i_item_id#501, i_item_desc#504, s_state#350, store_sales_quantitycount#5473L, store_sales_quantityave#5474, store_sales_quantitystdev#5475, store_sales_quantitycov#5476, store_returns_quantitycount#5477L, store_returns_quantityave#5478, store_returns_quantitystdev#5479, store_returns_quantitycov#5480, catalog_sales_quantitycount#5481L, catalog_sales_quantityave#5482, catalog_sales_quantitystdev#5483, catalog_sales_quantitycov#5484])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 10
            +- Exchange hashpartitioning(i_item_id#501, i_item_desc#504, s_state#350, 200), ENSURE_REQUIREMENTS, [id=#44114]
               +- *(14) HashAggregate(keys=[i_item_id#501, i_item_desc#504, s_state#350], functions=[partial_count(ss_quantity#674), partial_avg(ss_quantity#674), partial_stddev_samp(cast(ss_quantity#674 as double)), partial_count(sr_return_quantity#720), partial_avg(sr_return_quantity#720), partial_stddev_samp(cast(sr_return_quantity#720 as double)), partial_count(cs_quantity#136), partial_avg(cs_quantity#136), partial_stddev_samp(cast(cs_quantity#136 as double))], output=[i_item_id#501, i_item_desc#504, s_state#350, count#5772L, sum#5773, count#5774L, n#5657, avg#5658, m2#5659, count#5775L, sum#5776, count#5777L, n#5673, avg#5674, m2#5675, count#5778L, sum#5779, count#5780L, n#5689, avg#5690, m2#5691])
                  +- *(14) Project [ss_quantity#674, sr_return_quantity#720, cs_quantity#136, s_state#350, i_item_id#501, i_item_desc#504]
                     +- *(14) BroadcastHashJoin [ss_item_sk#666], [i_item_sk#500], Inner, BuildRight, false
                        :- *(14) Project [ss_item_sk#666, ss_quantity#674, sr_return_quantity#720, cs_quantity#136, s_state#350]
                        :  +- *(14) BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                        :     :- *(14) Project [ss_item_sk#666, ss_store_sk#671, ss_quantity#674, sr_return_quantity#720, cs_quantity#136]
                        :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#118], [d_date_sk#5513], Inner, BuildRight, false
                        :     :     :- *(14) Project [ss_item_sk#666, ss_store_sk#671, ss_quantity#674, sr_return_quantity#720, cs_sold_date_sk#118, cs_quantity#136]
                        :     :     :  +- *(14) BroadcastHashJoin [sr_returned_date_sk#710], [d_date_sk#5485], Inner, BuildRight, false
                        :     :     :     :- *(14) Project [ss_item_sk#666, ss_store_sk#671, ss_quantity#674, sr_returned_date_sk#710, sr_return_quantity#720, cs_sold_date_sk#118, cs_quantity#136]
                        :     :     :     :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
                        :     :     :     :     :- *(14) Project [ss_sold_date_sk#664, ss_item_sk#666, ss_store_sk#671, ss_quantity#674, sr_returned_date_sk#710, sr_return_quantity#720, cs_sold_date_sk#118, cs_quantity#136]
                        :     :     :     :     :  +- *(14) SortMergeJoin [sr_customer_sk#713, sr_item_sk#712], [cs_bill_customer_sk#121, cs_item_sk#133], Inner
                        :     :     :     :     :     :- *(12) Sort [sr_customer_sk#713 ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
                        :     :     :     :     :     :  +- AQEShuffleRead coalesced
                        :     :     :     :     :     :     +- ShuffleQueryStage 9
                        :     :     :     :     :     :        +- Exchange hashpartitioning(sr_customer_sk#713, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#43851]
                        :     :     :     :     :     :           +- *(11) Project [ss_sold_date_sk#664, ss_item_sk#666, ss_store_sk#671, ss_quantity#674, sr_returned_date_sk#710, sr_item_sk#712, sr_customer_sk#713, sr_return_quantity#720]
                        :     :     :     :     :     :              +- *(11) SortMergeJoin [ss_customer_sk#667, ss_item_sk#666, ss_ticket_number#673L], [sr_customer_sk#713, sr_item_sk#712, sr_ticket_number#719L], Inner
                        :     :     :     :     :     :                 :- *(9) Sort [ss_customer_sk#667 ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST, ss_ticket_number#673L ASC NULLS FIRST], false, 0
                        :     :     :     :     :     :                 :  +- ShuffleQueryStage 0
                        :     :     :     :     :     :                 :     +- Exchange hashpartitioning(ss_customer_sk#667, ss_item_sk#666, ss_ticket_number#673L, 200), ENSURE_REQUIREMENTS, [id=#43099]
                        :     :     :     :     :     :                 :        +- *(1) Filter ((((isnotnull(ss_customer_sk#667) AND isnotnull(ss_item_sk#666)) AND isnotnull(ss_ticket_number#673L)) AND isnotnull(ss_sold_date_sk#664)) AND isnotnull(ss_store_sk#671))
                        :     :     :     :     :     :                 :           +- *(1) ColumnarToRow
                        :     :     :     :     :     :                 :              +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_customer_sk#667,ss_store_sk#671,ss_ticket_number#673L,ss_quantity#674] Batched: true, DataFilters: [isnotnull(ss_customer_sk#667), isnotnull(ss_item_sk#666), isnotnull(ss_ticket_number#673L), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:big...
                        :     :     :     :     :     :                 +- *(10) Sort [sr_customer_sk#713 ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST, sr_ticket_number#719L ASC NULLS FIRST], false, 0
                        :     :     :     :     :     :                    +- ShuffleQueryStage 1
                        :     :     :     :     :     :                       +- Exchange hashpartitioning(sr_customer_sk#713, sr_item_sk#712, sr_ticket_number#719L, 200), ENSURE_REQUIREMENTS, [id=#43116]
                        :     :     :     :     :     :                          +- *(2) Filter (((isnotnull(sr_customer_sk#713) AND isnotnull(sr_item_sk#712)) AND isnotnull(sr_ticket_number#719L)) AND isnotnull(sr_returned_date_sk#710))
                        :     :     :     :     :     :                             +- *(2) ColumnarToRow
                        :     :     :     :     :     :                                +- FileScan parquet [sr_returned_date_sk#710,sr_item_sk#712,sr_customer_sk#713,sr_ticket_number#719L,sr_return_quantity#720] Batched: true, DataFilters: [isnotnull(sr_customer_sk#713), isnotnull(sr_item_sk#712), isnotnull(sr_ticket_number#719L), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint,sr_retur...
                        :     :     :     :     :     +- *(13) Sort [cs_bill_customer_sk#121 ASC NULLS FIRST, cs_item_sk#133 ASC NULLS FIRST], false, 0
                        :     :     :     :     :        +- AQEShuffleRead coalesced
                        :     :     :     :     :           +- ShuffleQueryStage 2
                        :     :     :     :     :              +- Exchange hashpartitioning(cs_bill_customer_sk#121, cs_item_sk#133, 200), ENSURE_REQUIREMENTS, [id=#43137]
                        :     :     :     :     :                 +- *(3) Filter ((isnotnull(cs_bill_customer_sk#121) AND isnotnull(cs_item_sk#133)) AND isnotnull(cs_sold_date_sk#118))
                        :     :     :     :     :                    +- *(3) ColumnarToRow
                        :     :     :     :     :                       +- FileScan parquet [cs_sold_date_sk#118,cs_bill_customer_sk#121,cs_item_sk#133,cs_quantity#136] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#121), isnotnull(cs_item_sk#133), isnotnull(cs_sold_date_sk#118)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
                        :     :     :     :     +- BroadcastQueryStage 3
                        :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#43158]
                        :     :     :     :           +- *(4) Project [d_date_sk#598]
                        :     :     :     :              +- *(4) Filter ((isnotnull(d_quarter_name#613) AND (d_quarter_name#613 = 1999Q1)) AND isnotnull(d_date_sk#598))
                        :     :     :     :                 +- *(4) ColumnarToRow
                        :     :     :     :                    +- FileScan parquet [d_date_sk#598,d_quarter_name#613] Batched: true, DataFilters: [isnotnull(d_quarter_name#613), (d_quarter_name#613 = 1999Q1), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_quarter_name), EqualTo(d_quarter_name,1999Q1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
                        :     :     :     +- BroadcastQueryStage 4
                        :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#43179]
                        :     :     :           +- *(5) Project [d_date_sk#5485]
                        :     :     :              +- *(5) Filter (d_quarter_name#5500 IN (1999Q1,1999Q2,1999Q3) AND isnotnull(d_date_sk#5485))
                        :     :     :                 +- *(5) ColumnarToRow
                        :     :     :                    +- FileScan parquet [d_date_sk#5485,d_quarter_name#5500] Batched: true, DataFilters: [d_quarter_name#5500 IN (1999Q1,1999Q2,1999Q3), isnotnull(d_date_sk#5485)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_quarter_name, [1999Q1,1999Q2,1999Q3]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
                        :     :     +- BroadcastQueryStage 6
                        :     :        +- ReusedExchange [d_date_sk#5513], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#43179]
                        :     +- BroadcastQueryStage 7
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#43221]
                        :           +- *(7) Filter isnotnull(s_store_sk#326)
                        :              +- *(7) ColumnarToRow
                        :                 +- FileScan parquet [s_store_sk#326,s_state#350] Batched: true, DataFilters: [isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
                        +- BroadcastQueryStage 8
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#43238]
                              +- *(8) Filter isnotnull(i_item_sk#500)
                                 +- *(8) ColumnarToRow
                                    +- FileScan parquet [i_item_sk#500,i_item_id#501,i_item_desc#504] Batched: true, DataFilters: [isnotnull(i_item_sk#500)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_item_id#501 ASC NULLS FIRST,i_item_desc#504 ASC NULLS FIRST,s_state#350 ASC NULLS FIRST], output=[i_item_id#501,i_item_desc#504,s_state#350,store_sales_quantitycount#5473L,store_sales_quantityave#5474,store_sales_quantitystdev#5475,store_sales_quantitycov#5476,store_returns_quantitycount#5477L,store_returns_quantityave#5478,store_returns_quantitystdev#5479,store_returns_quantitycov#5480,catalog_sales_quantitycount#5481L,catalog_sales_quantityave#5482,catalog_sales_quantitystdev#5483,catalog_sales_quantitycov#5484])
   +- HashAggregate(keys=[i_item_id#501, i_item_desc#504, s_state#350], functions=[count(ss_quantity#674), avg(ss_quantity#674), stddev_samp(cast(ss_quantity#674 as double)), count(sr_return_quantity#720), avg(sr_return_quantity#720), stddev_samp(cast(sr_return_quantity#720 as double)), count(cs_quantity#136), avg(cs_quantity#136), stddev_samp(cast(cs_quantity#136 as double))], output=[i_item_id#501, i_item_desc#504, s_state#350, store_sales_quantitycount#5473L, store_sales_quantityave#5474, store_sales_quantitystdev#5475, store_sales_quantitycov#5476, store_returns_quantitycount#5477L, store_returns_quantityave#5478, store_returns_quantitystdev#5479, store_returns_quantitycov#5480, catalog_sales_quantitycount#5481L, catalog_sales_quantityave#5482, catalog_sales_quantitystdev#5483, catalog_sales_quantitycov#5484])
      +- Exchange hashpartitioning(i_item_id#501, i_item_desc#504, s_state#350, 200), ENSURE_REQUIREMENTS, [id=#43006]
         +- HashAggregate(keys=[i_item_id#501, i_item_desc#504, s_state#350], functions=[partial_count(ss_quantity#674), partial_avg(ss_quantity#674), partial_stddev_samp(cast(ss_quantity#674 as double)), partial_count(sr_return_quantity#720), partial_avg(sr_return_quantity#720), partial_stddev_samp(cast(sr_return_quantity#720 as double)), partial_count(cs_quantity#136), partial_avg(cs_quantity#136), partial_stddev_samp(cast(cs_quantity#136 as double))], output=[i_item_id#501, i_item_desc#504, s_state#350, count#5772L, sum#5773, count#5774L, n#5657, avg#5658, m2#5659, count#5775L, sum#5776, count#5777L, n#5673, avg#5674, m2#5675, count#5778L, sum#5779, count#5780L, n#5689, avg#5690, m2#5691])
            +- Project [ss_quantity#674, sr_return_quantity#720, cs_quantity#136, s_state#350, i_item_id#501, i_item_desc#504]
               +- BroadcastHashJoin [ss_item_sk#666], [i_item_sk#500], Inner, BuildRight, false
                  :- Project [ss_item_sk#666, ss_quantity#674, sr_return_quantity#720, cs_quantity#136, s_state#350]
                  :  +- BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                  :     :- Project [ss_item_sk#666, ss_store_sk#671, ss_quantity#674, sr_return_quantity#720, cs_quantity#136]
                  :     :  +- BroadcastHashJoin [cs_sold_date_sk#118], [d_date_sk#5513], Inner, BuildRight, false
                  :     :     :- Project [ss_item_sk#666, ss_store_sk#671, ss_quantity#674, sr_return_quantity#720, cs_sold_date_sk#118, cs_quantity#136]
                  :     :     :  +- BroadcastHashJoin [sr_returned_date_sk#710], [d_date_sk#5485], Inner, BuildRight, false
                  :     :     :     :- Project [ss_item_sk#666, ss_store_sk#671, ss_quantity#674, sr_returned_date_sk#710, sr_return_quantity#720, cs_sold_date_sk#118, cs_quantity#136]
                  :     :     :     :  +- BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
                  :     :     :     :     :- Project [ss_sold_date_sk#664, ss_item_sk#666, ss_store_sk#671, ss_quantity#674, sr_returned_date_sk#710, sr_return_quantity#720, cs_sold_date_sk#118, cs_quantity#136]
                  :     :     :     :     :  +- SortMergeJoin [sr_customer_sk#713, sr_item_sk#712], [cs_bill_customer_sk#121, cs_item_sk#133], Inner
                  :     :     :     :     :     :- Sort [sr_customer_sk#713 ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#713, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#42978]
                  :     :     :     :     :     :     +- Project [ss_sold_date_sk#664, ss_item_sk#666, ss_store_sk#671, ss_quantity#674, sr_returned_date_sk#710, sr_item_sk#712, sr_customer_sk#713, sr_return_quantity#720]
                  :     :     :     :     :     :        +- SortMergeJoin [ss_customer_sk#667, ss_item_sk#666, ss_ticket_number#673L], [sr_customer_sk#713, sr_item_sk#712, sr_ticket_number#719L], Inner
                  :     :     :     :     :     :           :- Sort [ss_customer_sk#667 ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST, ss_ticket_number#673L ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_customer_sk#667, ss_item_sk#666, ss_ticket_number#673L, 200), ENSURE_REQUIREMENTS, [id=#42970]
                  :     :     :     :     :     :           :     +- Filter ((((isnotnull(ss_customer_sk#667) AND isnotnull(ss_item_sk#666)) AND isnotnull(ss_ticket_number#673L)) AND isnotnull(ss_sold_date_sk#664)) AND isnotnull(ss_store_sk#671))
                  :     :     :     :     :     :           :        +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_customer_sk#667,ss_store_sk#671,ss_ticket_number#673L,ss_quantity#674] Batched: true, DataFilters: [isnotnull(ss_customer_sk#667), isnotnull(ss_item_sk#666), isnotnull(ss_ticket_number#673L), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:big...
                  :     :     :     :     :     :           +- Sort [sr_customer_sk#713 ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST, sr_ticket_number#719L ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :              +- Exchange hashpartitioning(sr_customer_sk#713, sr_item_sk#712, sr_ticket_number#719L, 200), ENSURE_REQUIREMENTS, [id=#42971]
                  :     :     :     :     :     :                 +- Filter (((isnotnull(sr_customer_sk#713) AND isnotnull(sr_item_sk#712)) AND isnotnull(sr_ticket_number#719L)) AND isnotnull(sr_returned_date_sk#710))
                  :     :     :     :     :     :                    +- FileScan parquet [sr_returned_date_sk#710,sr_item_sk#712,sr_customer_sk#713,sr_ticket_number#719L,sr_return_quantity#720] Batched: true, DataFilters: [isnotnull(sr_customer_sk#713), isnotnull(sr_item_sk#712), isnotnull(sr_ticket_number#719L), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint,sr_retur...
                  :     :     :     :     :     +- Sort [cs_bill_customer_sk#121 ASC NULLS FIRST, cs_item_sk#133 ASC NULLS FIRST], false, 0
                  :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#121, cs_item_sk#133, 200), ENSURE_REQUIREMENTS, [id=#42979]
                  :     :     :     :     :           +- Filter ((isnotnull(cs_bill_customer_sk#121) AND isnotnull(cs_item_sk#133)) AND isnotnull(cs_sold_date_sk#118))
                  :     :     :     :     :              +- FileScan parquet [cs_sold_date_sk#118,cs_bill_customer_sk#121,cs_item_sk#133,cs_quantity#136] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#121), isnotnull(cs_item_sk#133), isnotnull(cs_sold_date_sk#118)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
                  :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#42985]
                  :     :     :     :        +- Project [d_date_sk#598]
                  :     :     :     :           +- Filter ((isnotnull(d_quarter_name#613) AND (d_quarter_name#613 = 1999Q1)) AND isnotnull(d_date_sk#598))
                  :     :     :     :              +- FileScan parquet [d_date_sk#598,d_quarter_name#613] Batched: true, DataFilters: [isnotnull(d_quarter_name#613), (d_quarter_name#613 = 1999Q1), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_quarter_name), EqualTo(d_quarter_name,1999Q1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#42989]
                  :     :     :        +- Project [d_date_sk#5485]
                  :     :     :           +- Filter (d_quarter_name#5500 IN (1999Q1,1999Q2,1999Q3) AND isnotnull(d_date_sk#5485))
                  :     :     :              +- FileScan parquet [d_date_sk#5485,d_quarter_name#5500] Batched: true, DataFilters: [d_quarter_name#5500 IN (1999Q1,1999Q2,1999Q3), isnotnull(d_date_sk#5485)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_quarter_name, [1999Q1,1999Q2,1999Q3]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#42993]
                  :     :        +- Project [d_date_sk#5513]
                  :     :           +- Filter (d_quarter_name#5528 IN (1999Q1,1999Q2,1999Q3) AND isnotnull(d_date_sk#5513))
                  :     :              +- FileScan parquet [d_date_sk#5513,d_quarter_name#5528] Batched: true, DataFilters: [d_quarter_name#5528 IN (1999Q1,1999Q2,1999Q3), isnotnull(d_date_sk#5513)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_quarter_name, [1999Q1,1999Q2,1999Q3]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#42997]
                  :        +- Filter isnotnull(s_store_sk#326)
                  :           +- FileScan parquet [s_store_sk#326,s_state#350] Batched: true, DataFilters: [isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#43001]
                     +- Filter isnotnull(i_item_sk#500)
                        +- FileScan parquet [i_item_sk#500,i_item_id#501,i_item_desc#504] Batched: true, DataFilters: [isnotnull(i_item_sk#500)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>
