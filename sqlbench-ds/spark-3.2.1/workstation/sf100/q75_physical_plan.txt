AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#16390L ASC NULLS FIRST,sales_amt_diff#16391 ASC NULLS FIRST], output=[prev_year#16386,year#16387,i_brand_id#507,i_class_id#509,i_category_id#511,i_manufact_id#513,prev_yr_cnt#16388L,curr_yr_cnt#16389L,sales_cnt_diff#16390L,sales_amt_diff#16391])
   +- *(48) Project [d_year#16581 AS prev_year#16386, d_year#604 AS year#16387, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16507L AS prev_yr_cnt#16388L, sales_cnt#16398L AS curr_yr_cnt#16389L, (sales_cnt#16398L - sales_cnt#16507L) AS sales_cnt_diff#16390L, CheckOverflow((promote_precision(cast(sales_amt#16399 as decimal(19,2))) - promote_precision(cast(sales_amt#16508 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#16391]
      +- *(48) BroadcastHashJoin [i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513], [i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566], Inner, BuildRight, (CheckOverflow((promote_precision(cast(sales_cnt#16398L as decimal(17,2))) / promote_precision(cast(sales_cnt#16507L as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000), false
         :- *(48) HashAggregate(keys=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513], functions=[sum(sales_cnt#16392), sum(UnscaledValue(sales_amt#16393))], output=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16398L, sales_amt#16399])
         :  +- AQEShuffleRead coalesced
         :     +- ShuffleQueryStage 39
         :        +- Exchange hashpartitioning(d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, 200), ENSURE_REQUIREMENTS, [id=#128143]
         :           +- *(46) HashAggregate(keys=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513], functions=[partial_sum(sales_cnt#16392), partial_sum(UnscaledValue(sales_amt#16393))], output=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sum#16835L, sum#16836L])
         :              +- *(46) HashAggregate(keys=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16392, sales_amt#16393], functions=[], output=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16392, sales_amt#16393])
         :                 +- AQEShuffleRead coalesced
         :                    +- ShuffleQueryStage 37
         :                       +- Exchange hashpartitioning(d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16392, sales_amt#16393, 200), ENSURE_REQUIREMENTS, [id=#127970]
         :                          +- *(44) HashAggregate(keys=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16392, sales_amt#16393], functions=[], output=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16392, sales_amt#16393])
         :                             +- Union
         :                                :- *(37) Project [d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, (cs_quantity#136 - coalesce(cr_return_quantity#265, 0)) AS sales_cnt#16392, CheckOverflow((promote_precision(cast(cs_ext_sales_price#141 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#266, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16393]
         :                                :  +- *(37) SortMergeJoin [cs_order_number#135L, cs_item_sk#133], [cr_order_number#264L, cr_item_sk#250], LeftOuter
         :                                :     :- *(35) Sort [cs_order_number#135L ASC NULLS FIRST, cs_item_sk#133 ASC NULLS FIRST], false, 0
         :                                :     :  +- AQEShuffleRead coalesced
         :                                :     :     +- ShuffleQueryStage 33
         :                                :     :        +- Exchange hashpartitioning(cs_order_number#135L, cs_item_sk#133, 200), ENSURE_REQUIREMENTS, [id=#126571]
         :                                :     :           +- *(22) Project [cs_item_sk#133, cs_order_number#135L, cs_quantity#136, cs_ext_sales_price#141, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, d_year#604]
         :                                :     :              +- *(22) BroadcastHashJoin [cs_sold_date_sk#118], [d_date_sk#598], Inner, BuildRight, false
         :                                :     :                 :- *(22) Project [cs_sold_date_sk#118, cs_item_sk#133, cs_order_number#135L, cs_quantity#136, cs_ext_sales_price#141, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513]
         :                                :     :                 :  +- *(22) BroadcastHashJoin [cs_item_sk#133], [i_item_sk#500], Inner, BuildRight, false
         :                                :     :                 :     :- *(22) Filter (isnotnull(cs_item_sk#133) AND isnotnull(cs_sold_date_sk#118))
         :                                :     :                 :     :  +- *(22) ColumnarToRow
         :                                :     :                 :     :     +- FileScan parquet [cs_sold_date_sk#118,cs_item_sk#133,cs_order_number#135L,cs_quantity#136,cs_ext_sales_price#141] Batched: true, DataFilters: [isnotnull(cs_item_sk#133), isnotnull(cs_sold_date_sk#118)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_pri...
         :                                :     :                 :     +- BroadcastQueryStage 0
         :                                :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124900]
         :                                :     :                 :           +- *(1) Project [i_item_sk#500, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513]
         :                                :     :                 :              +- *(1) Filter ((((((isnotnull(i_category#512) AND (i_category#512 = Shoes)) AND isnotnull(i_item_sk#500)) AND isnotnull(i_brand_id#507)) AND isnotnull(i_class_id#509)) AND isnotnull(i_category_id#511)) AND isnotnull(i_manufact_id#513))
         :                                :     :                 :                 +- *(1) ColumnarToRow
         :                                :     :                 :                    +- FileScan parquet [i_item_sk#500,i_brand_id#507,i_class_id#509,i_category_id#511,i_category#512,i_manufact_id#513] Batched: true, DataFilters: [isnotnull(i_category#512), (i_category#512 = Shoes), isnotnull(i_item_sk#500), isnotnull(i_brand..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                                :     :                 +- BroadcastQueryStage 1
         :                                :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#124919]
         :                                :     :                       +- *(2) Filter ((isnotnull(d_year#604) AND (d_year#604 = 2000)) AND isnotnull(d_date_sk#598))
         :                                :     :                          +- *(2) ColumnarToRow
         :                                :     :                             +- FileScan parquet [d_date_sk#598,d_year#604] Batched: true, DataFilters: [isnotnull(d_year#604), (d_year#604 = 2000), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                                :     +- *(36) Sort [cr_order_number#264L ASC NULLS FIRST, cr_item_sk#250 ASC NULLS FIRST], false, 0
         :                                :        +- AQEShuffleRead coalesced
         :                                :           +- ShuffleQueryStage 2
         :                                :              +- Exchange hashpartitioning(cr_order_number#264L, cr_item_sk#250, 200), ENSURE_REQUIREMENTS, [id=#124938]
         :                                :                 +- *(3) Filter (isnotnull(cr_order_number#264L) AND isnotnull(cr_item_sk#250))
         :                                :                    +- *(3) ColumnarToRow
         :                                :                       +- FileScan parquet [cr_item_sk#250,cr_order_number#264L,cr_return_quantity#265,cr_return_amount#266] Batched: true, DataFilters: [isnotnull(cr_order_number#264L), isnotnull(cr_item_sk#250)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
         :                                :- *(40) Project [d_year#16428, i_brand_id#16407, i_class_id#16409, i_category_id#16411, i_manufact_id#16413, (ss_quantity#674 - coalesce(sr_return_quantity#720, 0)) AS sales_cnt#16394, CheckOverflow((promote_precision(cast(ss_ext_sales_price#679 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#721, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16395]
         :                                :  +- *(40) SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666], [sr_ticket_number#719L, sr_item_sk#712], LeftOuter
         :                                :     :- *(38) Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST], false, 0
         :                                :     :  +- AQEShuffleRead coalesced
         :                                :     :     +- ShuffleQueryStage 34
         :                                :     :        +- Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#126610]
         :                                :     :           +- *(23) Project [ss_item_sk#666, ss_ticket_number#673L, ss_quantity#674, ss_ext_sales_price#679, i_brand_id#16407, i_class_id#16409, i_category_id#16411, i_manufact_id#16413, d_year#16428]
         :                                :     :              +- *(23) BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#16422], Inner, BuildRight, false
         :                                :     :                 :- *(23) Project [ss_sold_date_sk#664, ss_item_sk#666, ss_ticket_number#673L, ss_quantity#674, ss_ext_sales_price#679, i_brand_id#16407, i_class_id#16409, i_category_id#16411, i_manufact_id#16413]
         :                                :     :                 :  +- *(23) BroadcastHashJoin [ss_item_sk#666], [i_item_sk#16400], Inner, BuildRight, false
         :                                :     :                 :     :- *(23) Filter (isnotnull(ss_item_sk#666) AND isnotnull(ss_sold_date_sk#664))
         :                                :     :                 :     :  +- *(23) ColumnarToRow
         :                                :     :                 :     :     +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_ticket_number#673L,ss_quantity#674,ss_ext_sales_price#679] Batched: true, DataFilters: [isnotnull(ss_item_sk#666), isnotnull(ss_sold_date_sk#664)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_pr...
         :                                :     :                 :     +- BroadcastQueryStage 4
         :                                :     :                 :        +- ReusedExchange [i_item_sk#16400, i_brand_id#16407, i_class_id#16409, i_category_id#16411, i_manufact_id#16413], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124900]
         :                                :     :                 +- BroadcastQueryStage 6
         :                                :     :                    +- ReusedExchange [d_date_sk#16422, d_year#16428], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#124919]
         :                                :     +- *(39) Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
         :                                :        +- AQEShuffleRead coalesced
         :                                :           +- ShuffleQueryStage 7
         :                                :              +- Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#125001]
         :                                :                 +- *(6) Filter (isnotnull(sr_ticket_number#719L) AND isnotnull(sr_item_sk#712))
         :                                :                    +- *(6) ColumnarToRow
         :                                :                       +- FileScan parquet [sr_item_sk#712,sr_ticket_number#719L,sr_return_quantity#720,sr_return_amt#721] Batched: true, DataFilters: [isnotnull(sr_ticket_number#719L), isnotnull(sr_item_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
         :                                +- *(43) Project [d_year#16478, i_brand_id#16457, i_class_id#16459, i_category_id#16461, i_manufact_id#16463, (ws_quantity#402 - coalesce(wr_return_quantity#466, 0)) AS sales_cnt#16396, CheckOverflow((promote_precision(cast(ws_ext_sales_price#407 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#467, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16397]
         :                                   +- *(43) SortMergeJoin [ws_order_number#401L, ws_item_sk#387], [wr_order_number#465L, wr_item_sk#454], LeftOuter
         :                                      :- *(41) Sort [ws_order_number#401L ASC NULLS FIRST, ws_item_sk#387 ASC NULLS FIRST], false, 0
         :                                      :  +- AQEShuffleRead coalesced
         :                                      :     +- ShuffleQueryStage 35
         :                                      :        +- Exchange hashpartitioning(ws_order_number#401L, ws_item_sk#387, 200), ENSURE_REQUIREMENTS, [id=#126649]
         :                                      :           +- *(24) Project [ws_item_sk#387, ws_order_number#401L, ws_quantity#402, ws_ext_sales_price#407, i_brand_id#16457, i_class_id#16459, i_category_id#16461, i_manufact_id#16463, d_year#16478]
         :                                      :              +- *(24) BroadcastHashJoin [ws_sold_date_sk#384], [d_date_sk#16472], Inner, BuildRight, false
         :                                      :                 :- *(24) Project [ws_sold_date_sk#384, ws_item_sk#387, ws_order_number#401L, ws_quantity#402, ws_ext_sales_price#407, i_brand_id#16457, i_class_id#16459, i_category_id#16461, i_manufact_id#16463]
         :                                      :                 :  +- *(24) BroadcastHashJoin [ws_item_sk#387], [i_item_sk#16450], Inner, BuildRight, false
         :                                      :                 :     :- *(24) Filter (isnotnull(ws_item_sk#387) AND isnotnull(ws_sold_date_sk#384))
         :                                      :                 :     :  +- *(24) ColumnarToRow
         :                                      :                 :     :     +- FileScan parquet [ws_sold_date_sk#384,ws_item_sk#387,ws_order_number#401L,ws_quantity#402,ws_ext_sales_price#407] Batched: true, DataFilters: [isnotnull(ws_item_sk#387), isnotnull(ws_sold_date_sk#384)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_pri...
         :                                      :                 :     +- BroadcastQueryStage 9
         :                                      :                 :        +- ReusedExchange [i_item_sk#16450, i_brand_id#16457, i_class_id#16459, i_category_id#16461, i_manufact_id#16463], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124900]
         :                                      :                 +- BroadcastQueryStage 11
         :                                      :                    +- ReusedExchange [d_date_sk#16472, d_year#16478], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#124919]
         :                                      +- *(42) Sort [wr_order_number#465L ASC NULLS FIRST, wr_item_sk#454 ASC NULLS FIRST], false, 0
         :                                         +- AQEShuffleRead coalesced
         :                                            +- ShuffleQueryStage 12
         :                                               +- Exchange hashpartitioning(wr_order_number#465L, wr_item_sk#454, 200), ENSURE_REQUIREMENTS, [id=#125064]
         :                                                  +- *(9) Filter (isnotnull(wr_order_number#465L) AND isnotnull(wr_item_sk#454))
         :                                                     +- *(9) ColumnarToRow
         :                                                        +- FileScan parquet [wr_item_sk#454,wr_order_number#465L,wr_return_quantity#466,wr_return_amt#467] Batched: true, DataFilters: [isnotnull(wr_order_number#465L), isnotnull(wr_item_sk#454)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
         +- BroadcastQueryStage 40
            +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true], input[4, int, true]),false), [id=#128186]
               +- *(47) HashAggregate(keys=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566], functions=[sum(sales_cnt#16392), sum(UnscaledValue(sales_amt#16393))], output=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16507L, sales_amt#16508])
                  +- AQEShuffleRead coalesced
                     +- ShuffleQueryStage 38
                        +- Exchange hashpartitioning(d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, 200), ENSURE_REQUIREMENTS, [id=#128091]
                           +- *(45) HashAggregate(keys=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566], functions=[partial_sum(sales_cnt#16392), partial_sum(UnscaledValue(sales_amt#16393))], output=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sum#16835L, sum#16838L])
                              +- *(45) HashAggregate(keys=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16392, sales_amt#16393], functions=[], output=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16392, sales_amt#16393])
                                 +- AQEShuffleRead coalesced
                                    +- ShuffleQueryStage 36
                                       +- Exchange hashpartitioning(d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16392, sales_amt#16393, 200), ENSURE_REQUIREMENTS, [id=#127557]
                                          +- *(34) HashAggregate(keys=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16392, sales_amt#16393], functions=[], output=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16392, sales_amt#16393])
                                             +- Union
                                                :- *(27) Project [d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, (cs_quantity#16537 - coalesce(cr_return_quantity#16620, 0)) AS sales_cnt#16392, CheckOverflow((promote_precision(cast(cs_ext_sales_price#16542 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#16621, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16393]
                                                :  +- *(27) SortMergeJoin [cs_order_number#16536L, cs_item_sk#16534], [cr_order_number#16619L, cr_item_sk#16605], LeftOuter
                                                :     :- *(25) Sort [cs_order_number#16536L ASC NULLS FIRST, cs_item_sk#16534 ASC NULLS FIRST], false, 0
                                                :     :  +- AQEShuffleRead coalesced
                                                :     :     +- ShuffleQueryStage 30
                                                :     :        +- Exchange hashpartitioning(cs_order_number#16536L, cs_item_sk#16534, 200), ENSURE_REQUIREMENTS, [id=#126206]
                                                :     :           +- *(19) Project [cs_item_sk#16534, cs_order_number#16536L, cs_quantity#16537, cs_ext_sales_price#16542, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, d_year#16581]
                                                :     :              +- *(19) BroadcastHashJoin [cs_sold_date_sk#16519], [d_date_sk#16575], Inner, BuildRight, false
                                                :     :                 :- *(19) Project [cs_sold_date_sk#16519, cs_item_sk#16534, cs_order_number#16536L, cs_quantity#16537, cs_ext_sales_price#16542, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566]
                                                :     :                 :  +- *(19) BroadcastHashJoin [cs_item_sk#16534], [i_item_sk#16553], Inner, BuildRight, false
                                                :     :                 :     :- *(19) Filter (isnotnull(cs_item_sk#16534) AND isnotnull(cs_sold_date_sk#16519))
                                                :     :                 :     :  +- *(19) ColumnarToRow
                                                :     :                 :     :     +- FileScan parquet [cs_sold_date_sk#16519,cs_item_sk#16534,cs_order_number#16536L,cs_quantity#16537,cs_ext_sales_price#16542] Batched: true, DataFilters: [isnotnull(cs_item_sk#16534), isnotnull(cs_sold_date_sk#16519)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_pri...
                                                :     :                 :     +- BroadcastQueryStage 14
                                                :     :                 :        +- ReusedExchange [i_item_sk#16553, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124900]
                                                :     :                 +- BroadcastQueryStage 15
                                                :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#125238]
                                                :     :                       +- *(11) Filter ((isnotnull(d_year#16581) AND (d_year#16581 = 1999)) AND isnotnull(d_date_sk#16575))
                                                :     :                          +- *(11) ColumnarToRow
                                                :     :                             +- FileScan parquet [d_date_sk#16575,d_year#16581] Batched: true, DataFilters: [isnotnull(d_year#16581), (d_year#16581 = 1999), isnotnull(d_date_sk#16575)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                :     +- *(26) Sort [cr_order_number#16619L ASC NULLS FIRST, cr_item_sk#16605 ASC NULLS FIRST], false, 0
                                                :        +- AQEShuffleRead coalesced
                                                :           +- ShuffleQueryStage 17
                                                :              +- ReusedExchange [cr_item_sk#16605, cr_order_number#16619L, cr_return_quantity#16620, cr_return_amount#16621], Exchange hashpartitioning(cr_order_number#264L, cr_item_sk#250, 200), ENSURE_REQUIREMENTS, [id=#124938]
                                                :- *(30) Project [d_year#16681, i_brand_id#16660, i_class_id#16662, i_category_id#16664, i_manufact_id#16666, (ss_quantity#16640 - coalesce(sr_return_quantity#16713, 0)) AS sales_cnt#16394, CheckOverflow((promote_precision(cast(ss_ext_sales_price#16645 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#16714, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16395]
                                                :  +- *(30) SortMergeJoin [ss_ticket_number#16639L, ss_item_sk#16632], [sr_ticket_number#16712L, sr_item_sk#16705], LeftOuter
                                                :     :- *(28) Sort [ss_ticket_number#16639L ASC NULLS FIRST, ss_item_sk#16632 ASC NULLS FIRST], false, 0
                                                :     :  +- AQEShuffleRead coalesced
                                                :     :     +- ShuffleQueryStage 31
                                                :     :        +- Exchange hashpartitioning(ss_ticket_number#16639L, ss_item_sk#16632, 200), ENSURE_REQUIREMENTS, [id=#126245]
                                                :     :           +- *(20) Project [ss_item_sk#16632, ss_ticket_number#16639L, ss_quantity#16640, ss_ext_sales_price#16645, i_brand_id#16660, i_class_id#16662, i_category_id#16664, i_manufact_id#16666, d_year#16681]
                                                :     :              +- *(20) BroadcastHashJoin [ss_sold_date_sk#16630], [d_date_sk#16675], Inner, BuildRight, false
                                                :     :                 :- *(20) Project [ss_sold_date_sk#16630, ss_item_sk#16632, ss_ticket_number#16639L, ss_quantity#16640, ss_ext_sales_price#16645, i_brand_id#16660, i_class_id#16662, i_category_id#16664, i_manufact_id#16666]
                                                :     :                 :  +- *(20) BroadcastHashJoin [ss_item_sk#16632], [i_item_sk#16653], Inner, BuildRight, false
                                                :     :                 :     :- *(20) Filter (isnotnull(ss_item_sk#16632) AND isnotnull(ss_sold_date_sk#16630))
                                                :     :                 :     :  +- *(20) ColumnarToRow
                                                :     :                 :     :     +- FileScan parquet [ss_sold_date_sk#16630,ss_item_sk#16632,ss_ticket_number#16639L,ss_quantity#16640,ss_ext_sales_price#16645] Batched: true, DataFilters: [isnotnull(ss_item_sk#16632), isnotnull(ss_sold_date_sk#16630)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_pr...
                                                :     :                 :     +- BroadcastQueryStage 19
                                                :     :                 :        +- ReusedExchange [i_item_sk#16653, i_brand_id#16660, i_class_id#16662, i_category_id#16664, i_manufact_id#16666], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124900]
                                                :     :                 +- BroadcastQueryStage 21
                                                :     :                    +- ReusedExchange [d_date_sk#16675, d_year#16681], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#125238]
                                                :     +- *(29) Sort [sr_ticket_number#16712L ASC NULLS FIRST, sr_item_sk#16705 ASC NULLS FIRST], false, 0
                                                :        +- AQEShuffleRead coalesced
                                                :           +- ShuffleQueryStage 23
                                                :              +- ReusedExchange [sr_item_sk#16705, sr_ticket_number#16712L, sr_return_quantity#16713, sr_return_amt#16714], Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#125001]
                                                +- *(33) Project [d_year#16785, i_brand_id#16764, i_class_id#16766, i_category_id#16768, i_manufact_id#16770, (ws_quantity#16741 - coalesce(wr_return_quantity#16821, 0)) AS sales_cnt#16396, CheckOverflow((promote_precision(cast(ws_ext_sales_price#16746 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#16822, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16397]
                                                   +- *(33) SortMergeJoin [ws_order_number#16740L, ws_item_sk#16726], [wr_order_number#16820L, wr_item_sk#16809], LeftOuter
                                                      :- *(31) Sort [ws_order_number#16740L ASC NULLS FIRST, ws_item_sk#16726 ASC NULLS FIRST], false, 0
                                                      :  +- AQEShuffleRead coalesced
                                                      :     +- ShuffleQueryStage 32
                                                      :        +- Exchange hashpartitioning(ws_order_number#16740L, ws_item_sk#16726, 200), ENSURE_REQUIREMENTS, [id=#126284]
                                                      :           +- *(21) Project [ws_item_sk#16726, ws_order_number#16740L, ws_quantity#16741, ws_ext_sales_price#16746, i_brand_id#16764, i_class_id#16766, i_category_id#16768, i_manufact_id#16770, d_year#16785]
                                                      :              +- *(21) BroadcastHashJoin [ws_sold_date_sk#16723], [d_date_sk#16779], Inner, BuildRight, false
                                                      :                 :- *(21) Project [ws_sold_date_sk#16723, ws_item_sk#16726, ws_order_number#16740L, ws_quantity#16741, ws_ext_sales_price#16746, i_brand_id#16764, i_class_id#16766, i_category_id#16768, i_manufact_id#16770]
                                                      :                 :  +- *(21) BroadcastHashJoin [ws_item_sk#16726], [i_item_sk#16757], Inner, BuildRight, false
                                                      :                 :     :- *(21) Filter (isnotnull(ws_item_sk#16726) AND isnotnull(ws_sold_date_sk#16723))
                                                      :                 :     :  +- *(21) ColumnarToRow
                                                      :                 :     :     +- FileScan parquet [ws_sold_date_sk#16723,ws_item_sk#16726,ws_order_number#16740L,ws_quantity#16741,ws_ext_sales_price#16746] Batched: true, DataFilters: [isnotnull(ws_item_sk#16726), isnotnull(ws_sold_date_sk#16723)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_pri...
                                                      :                 :     +- BroadcastQueryStage 25
                                                      :                 :        +- ReusedExchange [i_item_sk#16757, i_brand_id#16764, i_class_id#16766, i_category_id#16768, i_manufact_id#16770], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124900]
                                                      :                 +- BroadcastQueryStage 27
                                                      :                    +- ReusedExchange [d_date_sk#16779, d_year#16785], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#125238]
                                                      +- *(32) Sort [wr_order_number#16820L ASC NULLS FIRST, wr_item_sk#16809 ASC NULLS FIRST], false, 0
                                                         +- AQEShuffleRead coalesced
                                                            +- ShuffleQueryStage 29
                                                               +- ReusedExchange [wr_item_sk#16809, wr_order_number#16820L, wr_return_quantity#16821, wr_return_amt#16822], Exchange hashpartitioning(wr_order_number#465L, wr_item_sk#454, 200), ENSURE_REQUIREMENTS, [id=#125064]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#16390L ASC NULLS FIRST,sales_amt_diff#16391 ASC NULLS FIRST], output=[prev_year#16386,year#16387,i_brand_id#507,i_class_id#509,i_category_id#511,i_manufact_id#513,prev_yr_cnt#16388L,curr_yr_cnt#16389L,sales_cnt_diff#16390L,sales_amt_diff#16391])
   +- Project [d_year#16581 AS prev_year#16386, d_year#604 AS year#16387, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16507L AS prev_yr_cnt#16388L, sales_cnt#16398L AS curr_yr_cnt#16389L, (sales_cnt#16398L - sales_cnt#16507L) AS sales_cnt_diff#16390L, CheckOverflow((promote_precision(cast(sales_amt#16399 as decimal(19,2))) - promote_precision(cast(sales_amt#16508 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#16391]
      +- SortMergeJoin [i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513], [i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566], Inner, (CheckOverflow((promote_precision(cast(sales_cnt#16398L as decimal(17,2))) / promote_precision(cast(sales_cnt#16507L as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000)
         :- Sort [i_brand_id#507 ASC NULLS FIRST, i_class_id#509 ASC NULLS FIRST, i_category_id#511 ASC NULLS FIRST, i_manufact_id#513 ASC NULLS FIRST], false, 0
         :  +- Exchange hashpartitioning(i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, 200), ENSURE_REQUIREMENTS, [id=#124761]
         :     +- HashAggregate(keys=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513], functions=[sum(sales_cnt#16392), sum(UnscaledValue(sales_amt#16393))], output=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16398L, sales_amt#16399])
         :        +- Exchange hashpartitioning(d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, 200), ENSURE_REQUIREMENTS, [id=#124703]
         :           +- HashAggregate(keys=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513], functions=[partial_sum(sales_cnt#16392), partial_sum(UnscaledValue(sales_amt#16393))], output=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sum#16835L, sum#16836L])
         :              +- HashAggregate(keys=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16392, sales_amt#16393], functions=[], output=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16392, sales_amt#16393])
         :                 +- Exchange hashpartitioning(d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16392, sales_amt#16393, 200), ENSURE_REQUIREMENTS, [id=#124699]
         :                    +- HashAggregate(keys=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16392, sales_amt#16393], functions=[], output=[d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, sales_cnt#16392, sales_amt#16393])
         :                       +- Union
         :                          :- Project [d_year#604, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, (cs_quantity#136 - coalesce(cr_return_quantity#265, 0)) AS sales_cnt#16392, CheckOverflow((promote_precision(cast(cs_ext_sales_price#141 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#266, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16393]
         :                          :  +- SortMergeJoin [cs_order_number#135L, cs_item_sk#133], [cr_order_number#264L, cr_item_sk#250], LeftOuter
         :                          :     :- Sort [cs_order_number#135L ASC NULLS FIRST, cs_item_sk#133 ASC NULLS FIRST], false, 0
         :                          :     :  +- Exchange hashpartitioning(cs_order_number#135L, cs_item_sk#133, 200), ENSURE_REQUIREMENTS, [id=#124660]
         :                          :     :     +- Project [cs_item_sk#133, cs_order_number#135L, cs_quantity#136, cs_ext_sales_price#141, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513, d_year#604]
         :                          :     :        +- BroadcastHashJoin [cs_sold_date_sk#118], [d_date_sk#598], Inner, BuildRight, false
         :                          :     :           :- Project [cs_sold_date_sk#118, cs_item_sk#133, cs_order_number#135L, cs_quantity#136, cs_ext_sales_price#141, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513]
         :                          :     :           :  +- BroadcastHashJoin [cs_item_sk#133], [i_item_sk#500], Inner, BuildRight, false
         :                          :     :           :     :- Filter (isnotnull(cs_item_sk#133) AND isnotnull(cs_sold_date_sk#118))
         :                          :     :           :     :  +- FileScan parquet [cs_sold_date_sk#118,cs_item_sk#133,cs_order_number#135L,cs_quantity#136,cs_ext_sales_price#141] Batched: true, DataFilters: [isnotnull(cs_item_sk#133), isnotnull(cs_sold_date_sk#118)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_pri...
         :                          :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124651]
         :                          :     :           :        +- Project [i_item_sk#500, i_brand_id#507, i_class_id#509, i_category_id#511, i_manufact_id#513]
         :                          :     :           :           +- Filter ((((((isnotnull(i_category#512) AND (i_category#512 = Shoes)) AND isnotnull(i_item_sk#500)) AND isnotnull(i_brand_id#507)) AND isnotnull(i_class_id#509)) AND isnotnull(i_category_id#511)) AND isnotnull(i_manufact_id#513))
         :                          :     :           :              +- FileScan parquet [i_item_sk#500,i_brand_id#507,i_class_id#509,i_category_id#511,i_category#512,i_manufact_id#513] Batched: true, DataFilters: [isnotnull(i_category#512), (i_category#512 = Shoes), isnotnull(i_item_sk#500), isnotnull(i_brand..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                          :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#124655]
         :                          :     :              +- Filter ((isnotnull(d_year#604) AND (d_year#604 = 2000)) AND isnotnull(d_date_sk#598))
         :                          :     :                 +- FileScan parquet [d_date_sk#598,d_year#604] Batched: true, DataFilters: [isnotnull(d_year#604), (d_year#604 = 2000), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                          :     +- Sort [cr_order_number#264L ASC NULLS FIRST, cr_item_sk#250 ASC NULLS FIRST], false, 0
         :                          :        +- Exchange hashpartitioning(cr_order_number#264L, cr_item_sk#250, 200), ENSURE_REQUIREMENTS, [id=#124661]
         :                          :           +- Filter (isnotnull(cr_order_number#264L) AND isnotnull(cr_item_sk#250))
         :                          :              +- FileScan parquet [cr_item_sk#250,cr_order_number#264L,cr_return_quantity#265,cr_return_amount#266] Batched: true, DataFilters: [isnotnull(cr_order_number#264L), isnotnull(cr_item_sk#250)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
         :                          :- Project [d_year#16428, i_brand_id#16407, i_class_id#16409, i_category_id#16411, i_manufact_id#16413, (ss_quantity#674 - coalesce(sr_return_quantity#720, 0)) AS sales_cnt#16394, CheckOverflow((promote_precision(cast(ss_ext_sales_price#679 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#721, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16395]
         :                          :  +- SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666], [sr_ticket_number#719L, sr_item_sk#712], LeftOuter
         :                          :     :- Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST], false, 0
         :                          :     :  +- Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#124675]
         :                          :     :     +- Project [ss_item_sk#666, ss_ticket_number#673L, ss_quantity#674, ss_ext_sales_price#679, i_brand_id#16407, i_class_id#16409, i_category_id#16411, i_manufact_id#16413, d_year#16428]
         :                          :     :        +- BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#16422], Inner, BuildRight, false
         :                          :     :           :- Project [ss_sold_date_sk#664, ss_item_sk#666, ss_ticket_number#673L, ss_quantity#674, ss_ext_sales_price#679, i_brand_id#16407, i_class_id#16409, i_category_id#16411, i_manufact_id#16413]
         :                          :     :           :  +- BroadcastHashJoin [ss_item_sk#666], [i_item_sk#16400], Inner, BuildRight, false
         :                          :     :           :     :- Filter (isnotnull(ss_item_sk#666) AND isnotnull(ss_sold_date_sk#664))
         :                          :     :           :     :  +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_ticket_number#673L,ss_quantity#674,ss_ext_sales_price#679] Batched: true, DataFilters: [isnotnull(ss_item_sk#666), isnotnull(ss_sold_date_sk#664)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_pr...
         :                          :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124666]
         :                          :     :           :        +- Project [i_item_sk#16400, i_brand_id#16407, i_class_id#16409, i_category_id#16411, i_manufact_id#16413]
         :                          :     :           :           +- Filter ((((((isnotnull(i_category#16412) AND (i_category#16412 = Shoes)) AND isnotnull(i_item_sk#16400)) AND isnotnull(i_brand_id#16407)) AND isnotnull(i_class_id#16409)) AND isnotnull(i_category_id#16411)) AND isnotnull(i_manufact_id#16413))
         :                          :     :           :              +- FileScan parquet [i_item_sk#16400,i_brand_id#16407,i_class_id#16409,i_category_id#16411,i_category#16412,i_manufact_id#16413] Batched: true, DataFilters: [isnotnull(i_category#16412), (i_category#16412 = Shoes), isnotnull(i_item_sk#16400), isnotnull(i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                          :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#124670]
         :                          :     :              +- Filter ((isnotnull(d_year#16428) AND (d_year#16428 = 2000)) AND isnotnull(d_date_sk#16422))
         :                          :     :                 +- FileScan parquet [d_date_sk#16422,d_year#16428] Batched: true, DataFilters: [isnotnull(d_year#16428), (d_year#16428 = 2000), isnotnull(d_date_sk#16422)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                          :     +- Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
         :                          :        +- Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#124676]
         :                          :           +- Filter (isnotnull(sr_ticket_number#719L) AND isnotnull(sr_item_sk#712))
         :                          :              +- FileScan parquet [sr_item_sk#712,sr_ticket_number#719L,sr_return_quantity#720,sr_return_amt#721] Batched: true, DataFilters: [isnotnull(sr_ticket_number#719L), isnotnull(sr_item_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
         :                          +- Project [d_year#16478, i_brand_id#16457, i_class_id#16459, i_category_id#16461, i_manufact_id#16463, (ws_quantity#402 - coalesce(wr_return_quantity#466, 0)) AS sales_cnt#16396, CheckOverflow((promote_precision(cast(ws_ext_sales_price#407 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#467, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16397]
         :                             +- SortMergeJoin [ws_order_number#401L, ws_item_sk#387], [wr_order_number#465L, wr_item_sk#454], LeftOuter
         :                                :- Sort [ws_order_number#401L ASC NULLS FIRST, ws_item_sk#387 ASC NULLS FIRST], false, 0
         :                                :  +- Exchange hashpartitioning(ws_order_number#401L, ws_item_sk#387, 200), ENSURE_REQUIREMENTS, [id=#124690]
         :                                :     +- Project [ws_item_sk#387, ws_order_number#401L, ws_quantity#402, ws_ext_sales_price#407, i_brand_id#16457, i_class_id#16459, i_category_id#16461, i_manufact_id#16463, d_year#16478]
         :                                :        +- BroadcastHashJoin [ws_sold_date_sk#384], [d_date_sk#16472], Inner, BuildRight, false
         :                                :           :- Project [ws_sold_date_sk#384, ws_item_sk#387, ws_order_number#401L, ws_quantity#402, ws_ext_sales_price#407, i_brand_id#16457, i_class_id#16459, i_category_id#16461, i_manufact_id#16463]
         :                                :           :  +- BroadcastHashJoin [ws_item_sk#387], [i_item_sk#16450], Inner, BuildRight, false
         :                                :           :     :- Filter (isnotnull(ws_item_sk#387) AND isnotnull(ws_sold_date_sk#384))
         :                                :           :     :  +- FileScan parquet [ws_sold_date_sk#384,ws_item_sk#387,ws_order_number#401L,ws_quantity#402,ws_ext_sales_price#407] Batched: true, DataFilters: [isnotnull(ws_item_sk#387), isnotnull(ws_sold_date_sk#384)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_pri...
         :                                :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124681]
         :                                :           :        +- Project [i_item_sk#16450, i_brand_id#16457, i_class_id#16459, i_category_id#16461, i_manufact_id#16463]
         :                                :           :           +- Filter ((((((isnotnull(i_category#16462) AND (i_category#16462 = Shoes)) AND isnotnull(i_item_sk#16450)) AND isnotnull(i_brand_id#16457)) AND isnotnull(i_class_id#16459)) AND isnotnull(i_category_id#16461)) AND isnotnull(i_manufact_id#16463))
         :                                :           :              +- FileScan parquet [i_item_sk#16450,i_brand_id#16457,i_class_id#16459,i_category_id#16461,i_category#16462,i_manufact_id#16463] Batched: true, DataFilters: [isnotnull(i_category#16462), (i_category#16462 = Shoes), isnotnull(i_item_sk#16450), isnotnull(i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                                :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#124685]
         :                                :              +- Filter ((isnotnull(d_year#16478) AND (d_year#16478 = 2000)) AND isnotnull(d_date_sk#16472))
         :                                :                 +- FileScan parquet [d_date_sk#16472,d_year#16478] Batched: true, DataFilters: [isnotnull(d_year#16478), (d_year#16478 = 2000), isnotnull(d_date_sk#16472)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                                +- Sort [wr_order_number#465L ASC NULLS FIRST, wr_item_sk#454 ASC NULLS FIRST], false, 0
         :                                   +- Exchange hashpartitioning(wr_order_number#465L, wr_item_sk#454, 200), ENSURE_REQUIREMENTS, [id=#124691]
         :                                      +- Filter (isnotnull(wr_order_number#465L) AND isnotnull(wr_item_sk#454))
         :                                         +- FileScan parquet [wr_item_sk#454,wr_order_number#465L,wr_return_quantity#466,wr_return_amt#467] Batched: true, DataFilters: [isnotnull(wr_order_number#465L), isnotnull(wr_item_sk#454)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
         +- Sort [i_brand_id#16560 ASC NULLS FIRST, i_class_id#16562 ASC NULLS FIRST, i_category_id#16564 ASC NULLS FIRST, i_manufact_id#16566 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, 200), ENSURE_REQUIREMENTS, [id=#124762]
               +- HashAggregate(keys=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566], functions=[sum(sales_cnt#16392), sum(UnscaledValue(sales_amt#16393))], output=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16507L, sales_amt#16508])
                  +- Exchange hashpartitioning(d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, 200), ENSURE_REQUIREMENTS, [id=#124757]
                     +- HashAggregate(keys=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566], functions=[partial_sum(sales_cnt#16392), partial_sum(UnscaledValue(sales_amt#16393))], output=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sum#16835L, sum#16838L])
                        +- HashAggregate(keys=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16392, sales_amt#16393], functions=[], output=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16392, sales_amt#16393])
                           +- Exchange hashpartitioning(d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16392, sales_amt#16393, 200), ENSURE_REQUIREMENTS, [id=#124753]
                              +- HashAggregate(keys=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16392, sales_amt#16393], functions=[], output=[d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, sales_cnt#16392, sales_amt#16393])
                                 +- Union
                                    :- Project [d_year#16581, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, (cs_quantity#16537 - coalesce(cr_return_quantity#16620, 0)) AS sales_cnt#16392, CheckOverflow((promote_precision(cast(cs_ext_sales_price#16542 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#16621, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16393]
                                    :  +- SortMergeJoin [cs_order_number#16536L, cs_item_sk#16534], [cr_order_number#16619L, cr_item_sk#16605], LeftOuter
                                    :     :- Sort [cs_order_number#16536L ASC NULLS FIRST, cs_item_sk#16534 ASC NULLS FIRST], false, 0
                                    :     :  +- Exchange hashpartitioning(cs_order_number#16536L, cs_item_sk#16534, 200), ENSURE_REQUIREMENTS, [id=#124714]
                                    :     :     +- Project [cs_item_sk#16534, cs_order_number#16536L, cs_quantity#16537, cs_ext_sales_price#16542, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566, d_year#16581]
                                    :     :        +- BroadcastHashJoin [cs_sold_date_sk#16519], [d_date_sk#16575], Inner, BuildRight, false
                                    :     :           :- Project [cs_sold_date_sk#16519, cs_item_sk#16534, cs_order_number#16536L, cs_quantity#16537, cs_ext_sales_price#16542, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566]
                                    :     :           :  +- BroadcastHashJoin [cs_item_sk#16534], [i_item_sk#16553], Inner, BuildRight, false
                                    :     :           :     :- Filter (isnotnull(cs_item_sk#16534) AND isnotnull(cs_sold_date_sk#16519))
                                    :     :           :     :  +- FileScan parquet [cs_sold_date_sk#16519,cs_item_sk#16534,cs_order_number#16536L,cs_quantity#16537,cs_ext_sales_price#16542] Batched: true, DataFilters: [isnotnull(cs_item_sk#16534), isnotnull(cs_sold_date_sk#16519)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_pri...
                                    :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124705]
                                    :     :           :        +- Project [i_item_sk#16553, i_brand_id#16560, i_class_id#16562, i_category_id#16564, i_manufact_id#16566]
                                    :     :           :           +- Filter ((((((isnotnull(i_category#16565) AND (i_category#16565 = Shoes)) AND isnotnull(i_item_sk#16553)) AND isnotnull(i_brand_id#16560)) AND isnotnull(i_class_id#16562)) AND isnotnull(i_category_id#16564)) AND isnotnull(i_manufact_id#16566))
                                    :     :           :              +- FileScan parquet [i_item_sk#16553,i_brand_id#16560,i_class_id#16562,i_category_id#16564,i_category#16565,i_manufact_id#16566] Batched: true, DataFilters: [isnotnull(i_category#16565), (i_category#16565 = Shoes), isnotnull(i_item_sk#16553), isnotnull(i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
                                    :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#124709]
                                    :     :              +- Filter ((isnotnull(d_year#16581) AND (d_year#16581 = 1999)) AND isnotnull(d_date_sk#16575))
                                    :     :                 +- FileScan parquet [d_date_sk#16575,d_year#16581] Batched: true, DataFilters: [isnotnull(d_year#16581), (d_year#16581 = 1999), isnotnull(d_date_sk#16575)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                    :     +- Sort [cr_order_number#16619L ASC NULLS FIRST, cr_item_sk#16605 ASC NULLS FIRST], false, 0
                                    :        +- Exchange hashpartitioning(cr_order_number#16619L, cr_item_sk#16605, 200), ENSURE_REQUIREMENTS, [id=#124715]
                                    :           +- Filter (isnotnull(cr_order_number#16619L) AND isnotnull(cr_item_sk#16605))
                                    :              +- FileScan parquet [cr_item_sk#16605,cr_order_number#16619L,cr_return_quantity#16620,cr_return_amount#16621] Batched: true, DataFilters: [isnotnull(cr_order_number#16619L), isnotnull(cr_item_sk#16605)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
                                    :- Project [d_year#16681, i_brand_id#16660, i_class_id#16662, i_category_id#16664, i_manufact_id#16666, (ss_quantity#16640 - coalesce(sr_return_quantity#16713, 0)) AS sales_cnt#16394, CheckOverflow((promote_precision(cast(ss_ext_sales_price#16645 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#16714, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16395]
                                    :  +- SortMergeJoin [ss_ticket_number#16639L, ss_item_sk#16632], [sr_ticket_number#16712L, sr_item_sk#16705], LeftOuter
                                    :     :- Sort [ss_ticket_number#16639L ASC NULLS FIRST, ss_item_sk#16632 ASC NULLS FIRST], false, 0
                                    :     :  +- Exchange hashpartitioning(ss_ticket_number#16639L, ss_item_sk#16632, 200), ENSURE_REQUIREMENTS, [id=#124729]
                                    :     :     +- Project [ss_item_sk#16632, ss_ticket_number#16639L, ss_quantity#16640, ss_ext_sales_price#16645, i_brand_id#16660, i_class_id#16662, i_category_id#16664, i_manufact_id#16666, d_year#16681]
                                    :     :        +- BroadcastHashJoin [ss_sold_date_sk#16630], [d_date_sk#16675], Inner, BuildRight, false
                                    :     :           :- Project [ss_sold_date_sk#16630, ss_item_sk#16632, ss_ticket_number#16639L, ss_quantity#16640, ss_ext_sales_price#16645, i_brand_id#16660, i_class_id#16662, i_category_id#16664, i_manufact_id#16666]
                                    :     :           :  +- BroadcastHashJoin [ss_item_sk#16632], [i_item_sk#16653], Inner, BuildRight, false
                                    :     :           :     :- Filter (isnotnull(ss_item_sk#16632) AND isnotnull(ss_sold_date_sk#16630))
                                    :     :           :     :  +- FileScan parquet [ss_sold_date_sk#16630,ss_item_sk#16632,ss_ticket_number#16639L,ss_quantity#16640,ss_ext_sales_price#16645] Batched: true, DataFilters: [isnotnull(ss_item_sk#16632), isnotnull(ss_sold_date_sk#16630)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_pr...
                                    :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124720]
                                    :     :           :        +- Project [i_item_sk#16653, i_brand_id#16660, i_class_id#16662, i_category_id#16664, i_manufact_id#16666]
                                    :     :           :           +- Filter ((((((isnotnull(i_category#16665) AND (i_category#16665 = Shoes)) AND isnotnull(i_item_sk#16653)) AND isnotnull(i_brand_id#16660)) AND isnotnull(i_class_id#16662)) AND isnotnull(i_category_id#16664)) AND isnotnull(i_manufact_id#16666))
                                    :     :           :              +- FileScan parquet [i_item_sk#16653,i_brand_id#16660,i_class_id#16662,i_category_id#16664,i_category#16665,i_manufact_id#16666] Batched: true, DataFilters: [isnotnull(i_category#16665), (i_category#16665 = Shoes), isnotnull(i_item_sk#16653), isnotnull(i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
                                    :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#124724]
                                    :     :              +- Filter ((isnotnull(d_year#16681) AND (d_year#16681 = 1999)) AND isnotnull(d_date_sk#16675))
                                    :     :                 +- FileScan parquet [d_date_sk#16675,d_year#16681] Batched: true, DataFilters: [isnotnull(d_year#16681), (d_year#16681 = 1999), isnotnull(d_date_sk#16675)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                    :     +- Sort [sr_ticket_number#16712L ASC NULLS FIRST, sr_item_sk#16705 ASC NULLS FIRST], false, 0
                                    :        +- Exchange hashpartitioning(sr_ticket_number#16712L, sr_item_sk#16705, 200), ENSURE_REQUIREMENTS, [id=#124730]
                                    :           +- Filter (isnotnull(sr_ticket_number#16712L) AND isnotnull(sr_item_sk#16705))
                                    :              +- FileScan parquet [sr_item_sk#16705,sr_ticket_number#16712L,sr_return_quantity#16713,sr_return_amt#16714] Batched: true, DataFilters: [isnotnull(sr_ticket_number#16712L), isnotnull(sr_item_sk#16705)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
                                    +- Project [d_year#16785, i_brand_id#16764, i_class_id#16766, i_category_id#16768, i_manufact_id#16770, (ws_quantity#16741 - coalesce(wr_return_quantity#16821, 0)) AS sales_cnt#16396, CheckOverflow((promote_precision(cast(ws_ext_sales_price#16746 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#16822, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16397]
                                       +- SortMergeJoin [ws_order_number#16740L, ws_item_sk#16726], [wr_order_number#16820L, wr_item_sk#16809], LeftOuter
                                          :- Sort [ws_order_number#16740L ASC NULLS FIRST, ws_item_sk#16726 ASC NULLS FIRST], false, 0
                                          :  +- Exchange hashpartitioning(ws_order_number#16740L, ws_item_sk#16726, 200), ENSURE_REQUIREMENTS, [id=#124744]
                                          :     +- Project [ws_item_sk#16726, ws_order_number#16740L, ws_quantity#16741, ws_ext_sales_price#16746, i_brand_id#16764, i_class_id#16766, i_category_id#16768, i_manufact_id#16770, d_year#16785]
                                          :        +- BroadcastHashJoin [ws_sold_date_sk#16723], [d_date_sk#16779], Inner, BuildRight, false
                                          :           :- Project [ws_sold_date_sk#16723, ws_item_sk#16726, ws_order_number#16740L, ws_quantity#16741, ws_ext_sales_price#16746, i_brand_id#16764, i_class_id#16766, i_category_id#16768, i_manufact_id#16770]
                                          :           :  +- BroadcastHashJoin [ws_item_sk#16726], [i_item_sk#16757], Inner, BuildRight, false
                                          :           :     :- Filter (isnotnull(ws_item_sk#16726) AND isnotnull(ws_sold_date_sk#16723))
                                          :           :     :  +- FileScan parquet [ws_sold_date_sk#16723,ws_item_sk#16726,ws_order_number#16740L,ws_quantity#16741,ws_ext_sales_price#16746] Batched: true, DataFilters: [isnotnull(ws_item_sk#16726), isnotnull(ws_sold_date_sk#16723)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_pri...
                                          :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#124735]
                                          :           :        +- Project [i_item_sk#16757, i_brand_id#16764, i_class_id#16766, i_category_id#16768, i_manufact_id#16770]
                                          :           :           +- Filter ((((((isnotnull(i_category#16769) AND (i_category#16769 = Shoes)) AND isnotnull(i_item_sk#16757)) AND isnotnull(i_brand_id#16764)) AND isnotnull(i_class_id#16766)) AND isnotnull(i_category_id#16768)) AND isnotnull(i_manufact_id#16770))
                                          :           :              +- FileScan parquet [i_item_sk#16757,i_brand_id#16764,i_class_id#16766,i_category_id#16768,i_category#16769,i_manufact_id#16770] Batched: true, DataFilters: [isnotnull(i_category#16769), (i_category#16769 = Shoes), isnotnull(i_item_sk#16757), isnotnull(i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
                                          :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#124739]
                                          :              +- Filter ((isnotnull(d_year#16785) AND (d_year#16785 = 1999)) AND isnotnull(d_date_sk#16779))
                                          :                 +- FileScan parquet [d_date_sk#16779,d_year#16785] Batched: true, DataFilters: [isnotnull(d_year#16785), (d_year#16785 = 1999), isnotnull(d_date_sk#16779)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                          +- Sort [wr_order_number#16820L ASC NULLS FIRST, wr_item_sk#16809 ASC NULLS FIRST], false, 0
                                             +- Exchange hashpartitioning(wr_order_number#16820L, wr_item_sk#16809, 200), ENSURE_REQUIREMENTS, [id=#124745]
                                                +- Filter (isnotnull(wr_order_number#16820L) AND isnotnull(wr_item_sk#16809))
                                                   +- FileScan parquet [wr_item_sk#16809,wr_order_number#16820L,wr_return_quantity#16821,wr_return_amt#16822] Batched: true, DataFilters: [isnotnull(wr_order_number#16820L), isnotnull(wr_item_sk#16809)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
