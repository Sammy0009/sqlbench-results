AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   GpuColumnarToRow false
   +- GpuHashAggregate(keys=[], functions=[gpudecimal128sum(sales#9261, DecimalType(28,2), false, false)], output=[sum(sales)#9435])
      +- GpuShuffleCoalesce 2147483647
         +- ShuffleQueryStage 27
            +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#176152]
               +- GpuHashAggregate(keys=[], functions=[partial_gpudecimal128sum(sales#9261, DecimalType(28,2), false, false)], output=[sum#9441, isEmpty#9442])
                  +- GpuUnion
                     :- GpuRowToColumnar targetsize(2147483647)
                     :  +- *(3) Project [CheckOverflow((promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#564 as decimal(12,2)))), DecimalType(18,2), true) AS sales#9261]
                     :     +- GpuColumnarToRow false
                     :        +- GpuShuffledHashJoin [cs_sold_date_sk#544], [d_date_sk#9367], Inner, GpuBuildRight, false
                     :           :- GpuShuffleCoalesce 2147483647
                     :           :  +- GpuCustomShuffleReader coalesced
                     :           :     +- ShuffleQueryStage 25
                     :           :        +- GpuColumnarExchange gpuhashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#174740]
                     :           :           +- GpuProject [cs_sold_date_sk#544, cs_quantity#562, cs_list_price#564], true
                     :           :              +- GpuShuffledHashJoin [cs_bill_customer_sk#547], [c_customer_sk#9349], LeftSemi, GpuBuildRight, false
                     :           :                 :- GpuShuffleCoalesce 2147483647
                     :           :                 :  +- GpuCustomShuffleReader coalesced
                     :           :                 :     +- ShuffleQueryStage 23
                     :           :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_bill_customer_sk#547, 200), ENSURE_REQUIREMENTS, [id=#174113]
                     :           :                 :           +- GpuProject [cs_sold_date_sk#544, cs_bill_customer_sk#547, cs_quantity#562, cs_list_price#564], true
                     :           :                 :              +- GpuShuffledHashJoin [cs_item_sk#559], [item_sk#9268], LeftSemi, GpuBuildRight, false
                     :           :                 :                 :- GpuShuffleCoalesce 2147483647
                     :           :                 :                 :  +- GpuCustomShuffleReader coalesced
                     :           :                 :                 :     +- ShuffleQueryStage 0
                     :           :                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#168612]
                     :           :                 :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                     :           :                 :                 :              +- GpuFilter gpuisnotnull(cs_sold_date_sk#544), true
                     :           :                 :                 :                 +- GpuFileGpuScan parquet [cs_sold_date_sk#544,cs_bill_customer_sk#547,cs_item_sk#559,cs_quantity#562,cs_list_price#564] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:d...
                     :           :                 :                 +- GpuCoalesceBatches RequireSingleBatchWithFilter
                     :           :                 :                    +- GpuProject [item_sk#9268], true
                     :           :                 :                       +- GpuCoalesceBatches targetsize(2147483647)
                     :           :                 :                          +- GpuFilter (cnt#9270L > 4), true
                     :           :                 :                             +- GpuHashAggregate(keys=[_groupingexpression#9437, i_item_sk#668, d_date#614], functions=[gpucount(1, false)], output=[item_sk#9268, cnt#9270L])
                     :           :                 :                                +- GpuHashAggregate(keys=[_groupingexpression#9437, i_item_sk#668, d_date#614], functions=[partial_gpucount(1, false)], output=[_groupingexpression#9437, i_item_sk#668, d_date#614, count#9444L])
                     :           :                 :                                   +- GpuProject [d_date#614, i_item_sk#668, gpusubstring(i_item_desc#672, 1, 30) AS _groupingexpression#9437], true
                     :           :                 :                                      +- GpuShuffledHashJoin [ss_item_sk#254], [i_item_sk#668], Inner, GpuBuildRight, false
                     :           :                 :                                         :- GpuShuffleCoalesce 2147483647
                     :           :                 :                                         :  +- GpuCustomShuffleReader coalesced
                     :           :                 :                                         :     +- ShuffleQueryStage 20
                     :           :                 :                                         :        +- GpuColumnarExchange gpuhashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#171249]
                     :           :                 :                                         :           +- GpuProject [ss_item_sk#254, d_date#614], true
                     :           :                 :                                         :              +- GpuShuffledHashJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner, GpuBuildRight, false
                     :           :                 :                                         :                 :- GpuShuffleCoalesce 2147483647
                     :           :                 :                                         :                 :  +- GpuCustomShuffleReader coalesced
                     :           :                 :                                         :                 :     +- ShuffleQueryStage 1
                     :           :                 :                                         :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#168640]
                     :           :                 :                                         :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                     :           :                 :                                         :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#252) AND gpuisnotnull(ss_item_sk#254)), true
                     :           :                 :                                         :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#252,ss_item_sk#254] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>
                     :           :                 :                                         :                 +- GpuCustomShuffleReader coalesced
                     :           :                 :                                         :                    +- ShuffleQueryStage 2
                     :           :                 :                                         :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#168677]
                     :           :                 :                                         :                          +- GpuProject [d_date_sk#612, d_date#614], true
                     :           :                 :                                         :                             +- GpuCoalesceBatches targetsize(2147483647)
                     :           :                 :                                         :                                +- GpuFilter (d_year#618 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#612)), true
                     :           :                 :                                         :                                   +- GpuFileGpuScan parquet [d_date_sk#612,d_date#614,d_year#618] Batched: true, DataFilters: [d_year#618 IN (2000,2001,2002,2003), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
                     :           :                 :                                         +- GpuCustomShuffleReader coalesced
                     :           :                 :                                            +- ShuffleQueryStage 3
                     :           :                 :                                               +- GpuColumnarExchange gpuhashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#168711]
                     :           :                 :                                                  +- GpuCoalesceBatches targetsize(2147483647)
                     :           :                 :                                                     +- GpuFilter gpuisnotnull(i_item_sk#668), true
                     :           :                 :                                                        +- GpuFileGpuScan parquet [i_item_sk#668,i_item_desc#672] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
                     :           :                 +- GpuCoalesceBatches RequireSingleBatchWithFilter
                     :           :                    +- GpuProject [c_customer_sk#9349], true
                     :           :                       +- GpuRowToColumnar targetsize(2147483647)
                     :           :                          +- *(1) Filter (isnotnull(ssales#9273) AND (cast(ssales#9273 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9274, [id=#166861] as decimal(32,6)))), DecimalType(38,8), true)))
                     :           :                             :  +- Subquery subquery#9274, [id=#166861]
                     :           :                             :     +- AdaptiveSparkPlan isFinalPlan=true
                                                                     +- == Final Plan ==
                                                                        GpuColumnarToRow false
                                                                        +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9271)], output=[tpcds_cmax#9272])
                                                                           +- GpuShuffleCoalesce 2147483647
                                                                              +- ShuffleQueryStage 5
                                                                                 +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#175415]
                                                                                    +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9271)], output=[max#9450])
                                                                                       +- GpuRowToColumnar targetsize(2147483647)
                                                                                          +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9271])
                                                                                             +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9453, isEmpty#9454])
                                                                                                +- GpuColumnarToRow false
                                                                                                   +- GpuProject [ss_quantity#9285, ss_sales_price#9288, c_customer_sk#400], true
                                                                                                      +- GpuShuffledHashJoin [ss_customer_sk#9278], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                                                         :- GpuShuffleCoalesce 2147483647
                                                                                                         :  +- GpuCustomShuffleReader coalesced
                                                                                                         :     +- ShuffleQueryStage 4
                                                                                                         :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9278, 200), ENSURE_REQUIREMENTS, [id=#175204]
                                                                                                         :           +- GpuProject [ss_customer_sk#9278, ss_quantity#9285, ss_sales_price#9288], true
                                                                                                         :              +- GpuShuffledHashJoin [ss_sold_date_sk#9275], [d_date_sk#9298], Inner, GpuBuildRight, false
                                                                                                         :                 :- GpuShuffleCoalesce 2147483647
                                                                                                         :                 :  +- GpuCustomShuffleReader coalesced
                                                                                                         :                 :     +- ShuffleQueryStage 0
                                                                                                         :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9275, 200), ENSURE_REQUIREMENTS, [id=#174822]
                                                                                                         :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                         :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9275) AND gpuisnotnull(ss_customer_sk#9278)), true
                                                                                                         :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9275,ss_customer_sk#9278,ss_quantity#9285,ss_sales_price#9288] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9275), isnotnull(ss_customer_sk#9278)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                                         :                 +- GpuCustomShuffleReader coalesced
                                                                                                         :                    +- ShuffleQueryStage 1
                                                                                                         :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9298, 200), ENSURE_REQUIREMENTS, [id=#174859]
                                                                                                         :                          +- GpuProject [d_date_sk#9298], true
                                                                                                         :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                         :                                +- GpuFilter (d_year#9304 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9298)), true
                                                                                                         :                                   +- GpuFileGpuScan parquet [d_date_sk#9298,d_year#9304] Batched: true, DataFilters: [d_year#9304 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9298)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                                         +- GpuCustomShuffleReader coalesced
                                                                                                            +- ShuffleQueryStage 3
                                                                                                               +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9349, 200), ENSURE_REQUIREMENTS, [id=#168778]
                                                                     +- == Initial Plan ==
                                                                        HashAggregate(keys=[], functions=[max(csales#9271)], output=[tpcds_cmax#9272])
                                                                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#166791]
                                                                           +- HashAggregate(keys=[], functions=[partial_max(csales#9271)], output=[max#9450])
                                                                              +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9271])
                                                                                 +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9453, isEmpty#9454])
                                                                                    +- Project [ss_quantity#9285, ss_sales_price#9288, c_customer_sk#400]
                                                                                       +- SortMergeJoin [ss_customer_sk#9278], [c_customer_sk#400], Inner
                                                                                          :- Sort [ss_customer_sk#9278 ASC NULLS FIRST], false, 0
                                                                                          :  +- Exchange hashpartitioning(ss_customer_sk#9278, 200), ENSURE_REQUIREMENTS, [id=#166781]
                                                                                          :     +- Project [ss_customer_sk#9278, ss_quantity#9285, ss_sales_price#9288]
                                                                                          :        +- SortMergeJoin [ss_sold_date_sk#9275], [d_date_sk#9298], Inner
                                                                                          :           :- Sort [ss_sold_date_sk#9275 ASC NULLS FIRST], false, 0
                                                                                          :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9275, 200), ENSURE_REQUIREMENTS, [id=#166773]
                                                                                          :           :     +- Filter (isnotnull(ss_sold_date_sk#9275) AND isnotnull(ss_customer_sk#9278))
                                                                                          :           :        +- FileScan parquet [ss_sold_date_sk#9275,ss_customer_sk#9278,ss_quantity#9285,ss_sales_price#9288] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9275), isnotnull(ss_customer_sk#9278)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                          :           +- Sort [d_date_sk#9298 ASC NULLS FIRST], false, 0
                                                                                          :              +- Exchange hashpartitioning(d_date_sk#9298, 200), ENSURE_REQUIREMENTS, [id=#166774]
                                                                                          :                 +- Project [d_date_sk#9298]
                                                                                          :                    +- Filter (d_year#9304 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9298))
                                                                                          :                       +- FileScan parquet [d_date_sk#9298,d_year#9304] Batched: true, DataFilters: [d_year#9304 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9298)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                          +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                                                             +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#166782]
                                                                                                +- Filter isnotnull(c_customer_sk#400)
                                                                                                   +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                     :           :                             +- *(1) HashAggregate(keys=[c_customer_sk#9349], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9336 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9339 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9349, ssales#9273])
                     :           :                                +- *(1) HashAggregate(keys=[c_customer_sk#9349], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9336 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9339 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9349, sum#9447, isEmpty#9448])
                     :           :                                   +- GpuColumnarToRow false
                     :           :                                      +- GpuProject [ss_quantity#9336, ss_sales_price#9339, c_customer_sk#9349], true
                     :           :                                         +- GpuShuffledHashJoin [ss_customer_sk#9329], [c_customer_sk#9349], Inner, GpuBuildRight, false
                     :           :                                            :- GpuShuffleCoalesce 2147483647
                     :           :                                            :  +- GpuCustomShuffleReader coalesced
                     :           :                                            :     +- ShuffleQueryStage 4
                     :           :                                            :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9329, 200), ENSURE_REQUIREMENTS, [id=#168750]
                     :           :                                            :           +- GpuCoalesceBatches targetsize(2147483647)
                     :           :                                            :              +- GpuFilter gpuisnotnull(ss_customer_sk#9329), true
                     :           :                                            :                 +- GpuFileGpuScan parquet [ss_customer_sk#9329,ss_quantity#9336,ss_sales_price#9339] Batched: true, DataFilters: [isnotnull(ss_customer_sk#9329)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                     :           :                                            +- GpuCustomShuffleReader coalesced
                     :           :                                               +- ShuffleQueryStage 5
                     :           :                                                  +- GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9349, 200), ENSURE_REQUIREMENTS, [id=#168778]
                     :           :                                                     +- GpuCoalesceBatches targetsize(2147483647)
                     :           :                                                        +- GpuFilter gpuisnotnull(c_customer_sk#9349), true
                     :           :                                                           +- GpuFileGpuScan parquet [c_customer_sk#9349] Batched: true, DataFilters: [isnotnull(c_customer_sk#9349)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                     :           +- GpuCustomShuffleReader coalesced
                     :              +- ShuffleQueryStage 6
                     :                 +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9367, 200), ENSURE_REQUIREMENTS, [id=#168826]
                     :                    +- GpuProject [d_date_sk#9367], true
                     :                       +- GpuCoalesceBatches targetsize(2147483647)
                     :                          +- GpuFilter ((((gpuisnotnull(d_year#9373) AND gpuisnotnull(d_moy#9375)) AND (d_year#9373 = 2000)) AND (d_moy#9375 = 7)) AND gpuisnotnull(d_date_sk#9367)), true
                     :                             +- GpuFileGpuScan parquet [d_date_sk#9367,d_year#9373,d_moy#9375] Batched: true, DataFilters: [isnotnull(d_year#9373), isnotnull(d_moy#9375), (d_year#9373 = 2000), (d_moy#9375 = 7), isnotnull..., Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,7), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     +- GpuRowToColumnar targetsize(2147483647)
                        +- *(4) Project [CheckOverflow((promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#496 as decimal(12,2)))), DecimalType(18,2), true) AS sales#9264]
                           +- GpuColumnarToRow false
                              +- GpuShuffledHashJoin [ws_sold_date_sk#476], [d_date_sk#9395], Inner, GpuBuildRight, false
                                 :- GpuShuffleCoalesce 2147483647
                                 :  +- GpuCustomShuffleReader coalesced
                                 :     +- ShuffleQueryStage 26
                                 :        +- GpuColumnarExchange gpuhashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#175787]
                                 :           +- GpuProject [ws_sold_date_sk#476, ws_quantity#494, ws_list_price#496], true
                                 :              +- GpuShuffledHashJoin [ws_bill_customer_sk#480], [c_customer_sk#9349], LeftSemi, GpuBuildRight, false
                                 :                 :- GpuShuffleCoalesce 2147483647
                                 :                 :  +- GpuCustomShuffleReader coalesced
                                 :                 :     +- ShuffleQueryStage 24
                                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(ws_bill_customer_sk#480, 200), ENSURE_REQUIREMENTS, [id=#174258]
                                 :                 :           +- GpuProject [ws_sold_date_sk#476, ws_bill_customer_sk#480, ws_quantity#494, ws_list_price#496], true
                                 :                 :              +- GpuShuffledHashJoin [ws_item_sk#479], [item_sk#9268], LeftSemi, GpuBuildRight, false
                                 :                 :                 :- GpuShuffleCoalesce 2147483647
                                 :                 :                 :  +- GpuCustomShuffleReader coalesced
                                 :                 :                 :     +- ShuffleQueryStage 7
                                 :                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#168858]
                                 :                 :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                 :                 :                 :              +- GpuFilter gpuisnotnull(ws_sold_date_sk#476), true
                                 :                 :                 :                 +- GpuFileGpuScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_bill_customer_sk#480,ws_quantity#494,ws_list_price#496] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:d...
                                 :                 :                 +- GpuCoalesceBatches RequireSingleBatchWithFilter
                                 :                 :                    +- GpuProject [item_sk#9268], true
                                 :                 :                       +- GpuCoalesceBatches targetsize(2147483647)
                                 :                 :                          +- GpuFilter (cnt#9270L > 4), true
                                 :                 :                             +- GpuHashAggregate(keys=[_groupingexpression#9438, i_item_sk#668, d_date#614], functions=[gpucount(1, false)], output=[item_sk#9268, cnt#9270L])
                                 :                 :                                +- GpuHashAggregate(keys=[_groupingexpression#9438, i_item_sk#668, d_date#614], functions=[partial_gpucount(1, false)], output=[_groupingexpression#9438, i_item_sk#668, d_date#614, count#9444L])
                                 :                 :                                   +- GpuProject [d_date#614, i_item_sk#668, gpusubstring(i_item_desc#672, 1, 30) AS _groupingexpression#9438], true
                                 :                 :                                      +- GpuShuffledHashJoin [ss_item_sk#254], [i_item_sk#668], Inner, GpuBuildRight, false
                                 :                 :                                         :- GpuShuffleCoalesce 2147483647
                                 :                 :                                         :  +- GpuCustomShuffleReader coalesced
                                 :                 :                                         :     +- ShuffleQueryStage 22
                                 :                 :                                         :        +- ReusedExchange [ss_item_sk#254, d_date#614], GpuColumnarExchange gpuhashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#171249]
                                 :                 :                                         +- GpuCustomShuffleReader coalesced
                                 :                 :                                            +- ShuffleQueryStage 13
                                 :                 :                                               +- ReusedExchange [i_item_sk#668, i_item_desc#672], GpuColumnarExchange gpuhashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#168711]
                                 :                 +- GpuCoalesceBatches RequireSingleBatchWithFilter
                                 :                    +- GpuProject [c_customer_sk#9349], true
                                 :                       +- GpuRowToColumnar targetsize(2147483647)
                                 :                          +- *(2) Filter (isnotnull(ssales#9273) AND (cast(ssales#9273 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9274, [id=#166861] as decimal(32,6)))), DecimalType(38,8), true)))
                                 :                             :  +- Subquery subquery#9274, [id=#166861]
                                 :                             :     +- AdaptiveSparkPlan isFinalPlan=true
                                                                     +- == Final Plan ==
                                                                        GpuColumnarToRow false
                                                                        +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9271)], output=[tpcds_cmax#9272])
                                                                           +- GpuShuffleCoalesce 2147483647
                                                                              +- ShuffleQueryStage 5
                                                                                 +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#175415]
                                                                                    +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9271)], output=[max#9450])
                                                                                       +- GpuRowToColumnar targetsize(2147483647)
                                                                                          +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9271])
                                                                                             +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9453, isEmpty#9454])
                                                                                                +- GpuColumnarToRow false
                                                                                                   +- GpuProject [ss_quantity#9285, ss_sales_price#9288, c_customer_sk#400], true
                                                                                                      +- GpuShuffledHashJoin [ss_customer_sk#9278], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                                                         :- GpuShuffleCoalesce 2147483647
                                                                                                         :  +- GpuCustomShuffleReader coalesced
                                                                                                         :     +- ShuffleQueryStage 4
                                                                                                         :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9278, 200), ENSURE_REQUIREMENTS, [id=#175204]
                                                                                                         :           +- GpuProject [ss_customer_sk#9278, ss_quantity#9285, ss_sales_price#9288], true
                                                                                                         :              +- GpuShuffledHashJoin [ss_sold_date_sk#9275], [d_date_sk#9298], Inner, GpuBuildRight, false
                                                                                                         :                 :- GpuShuffleCoalesce 2147483647
                                                                                                         :                 :  +- GpuCustomShuffleReader coalesced
                                                                                                         :                 :     +- ShuffleQueryStage 0
                                                                                                         :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9275, 200), ENSURE_REQUIREMENTS, [id=#174822]
                                                                                                         :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                         :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9275) AND gpuisnotnull(ss_customer_sk#9278)), true
                                                                                                         :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9275,ss_customer_sk#9278,ss_quantity#9285,ss_sales_price#9288] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9275), isnotnull(ss_customer_sk#9278)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                                         :                 +- GpuCustomShuffleReader coalesced
                                                                                                         :                    +- ShuffleQueryStage 1
                                                                                                         :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9298, 200), ENSURE_REQUIREMENTS, [id=#174859]
                                                                                                         :                          +- GpuProject [d_date_sk#9298], true
                                                                                                         :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                                                         :                                +- GpuFilter (d_year#9304 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9298)), true
                                                                                                         :                                   +- GpuFileGpuScan parquet [d_date_sk#9298,d_year#9304] Batched: true, DataFilters: [d_year#9304 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9298)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                                         +- GpuCustomShuffleReader coalesced
                                                                                                            +- ShuffleQueryStage 3
                                                                                                               +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9349, 200), ENSURE_REQUIREMENTS, [id=#168778]
                                                                     +- == Initial Plan ==
                                                                        HashAggregate(keys=[], functions=[max(csales#9271)], output=[tpcds_cmax#9272])
                                                                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#166791]
                                                                           +- HashAggregate(keys=[], functions=[partial_max(csales#9271)], output=[max#9450])
                                                                              +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9271])
                                                                                 +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9453, isEmpty#9454])
                                                                                    +- Project [ss_quantity#9285, ss_sales_price#9288, c_customer_sk#400]
                                                                                       +- SortMergeJoin [ss_customer_sk#9278], [c_customer_sk#400], Inner
                                                                                          :- Sort [ss_customer_sk#9278 ASC NULLS FIRST], false, 0
                                                                                          :  +- Exchange hashpartitioning(ss_customer_sk#9278, 200), ENSURE_REQUIREMENTS, [id=#166781]
                                                                                          :     +- Project [ss_customer_sk#9278, ss_quantity#9285, ss_sales_price#9288]
                                                                                          :        +- SortMergeJoin [ss_sold_date_sk#9275], [d_date_sk#9298], Inner
                                                                                          :           :- Sort [ss_sold_date_sk#9275 ASC NULLS FIRST], false, 0
                                                                                          :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9275, 200), ENSURE_REQUIREMENTS, [id=#166773]
                                                                                          :           :     +- Filter (isnotnull(ss_sold_date_sk#9275) AND isnotnull(ss_customer_sk#9278))
                                                                                          :           :        +- FileScan parquet [ss_sold_date_sk#9275,ss_customer_sk#9278,ss_quantity#9285,ss_sales_price#9288] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9275), isnotnull(ss_customer_sk#9278)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                          :           +- Sort [d_date_sk#9298 ASC NULLS FIRST], false, 0
                                                                                          :              +- Exchange hashpartitioning(d_date_sk#9298, 200), ENSURE_REQUIREMENTS, [id=#166774]
                                                                                          :                 +- Project [d_date_sk#9298]
                                                                                          :                    +- Filter (d_year#9304 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9298))
                                                                                          :                       +- FileScan parquet [d_date_sk#9298,d_year#9304] Batched: true, DataFilters: [d_year#9304 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9298)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                          +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                                                             +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#166782]
                                                                                                +- Filter isnotnull(c_customer_sk#400)
                                                                                                   +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                                 :                             +- *(2) HashAggregate(keys=[c_customer_sk#9349], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9336 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9339 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9349, ssales#9273])
                                 :                                +- *(2) HashAggregate(keys=[c_customer_sk#9349], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9336 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9339 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9349, sum#9447, isEmpty#9448])
                                 :                                   +- GpuColumnarToRow false
                                 :                                      +- GpuProject [ss_quantity#9336, ss_sales_price#9339, c_customer_sk#9349], true
                                 :                                         +- GpuShuffledHashJoin [ss_customer_sk#9329], [c_customer_sk#9349], Inner, GpuBuildRight, false
                                 :                                            :- GpuShuffleCoalesce 2147483647
                                 :                                            :  +- GpuCustomShuffleReader coalesced
                                 :                                            :     +- ShuffleQueryStage 15
                                 :                                            :        +- ReusedExchange [ss_customer_sk#9329, ss_quantity#9336, ss_sales_price#9339], GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9329, 200), ENSURE_REQUIREMENTS, [id=#168750]
                                 :                                            +- GpuCustomShuffleReader coalesced
                                 :                                               +- ShuffleQueryStage 17
                                 :                                                  +- ReusedExchange [c_customer_sk#9349], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9349, 200), ENSURE_REQUIREMENTS, [id=#168778]
                                 +- GpuCustomShuffleReader coalesced
                                    +- ShuffleQueryStage 19
                                       +- ReusedExchange [d_date_sk#9395], GpuColumnarExchange gpuhashpartitioning(d_date_sk#9367, 200), ENSURE_REQUIREMENTS, [id=#168826]
+- == Initial Plan ==
   HashAggregate(keys=[], functions=[sum(sales#9261)], output=[sum(sales)#9435])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#167028]
      +- HashAggregate(keys=[], functions=[partial_sum(sales#9261)], output=[sum#9441, isEmpty#9442])
         +- Union
            :- Project [CheckOverflow((promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#564 as decimal(12,2)))), DecimalType(18,2), true) AS sales#9261]
            :  +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#9367], Inner
            :     :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
            :     :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#166967]
            :     :     +- Project [cs_sold_date_sk#544, cs_quantity#562, cs_list_price#564]
            :     :        +- SortMergeJoin [cs_bill_customer_sk#547], [c_customer_sk#9349], LeftSemi
            :     :           :- Sort [cs_bill_customer_sk#547 ASC NULLS FIRST], false, 0
            :     :           :  +- Exchange hashpartitioning(cs_bill_customer_sk#547, 200), ENSURE_REQUIREMENTS, [id=#166960]
            :     :           :     +- Project [cs_sold_date_sk#544, cs_bill_customer_sk#547, cs_quantity#562, cs_list_price#564]
            :     :           :        +- SortMergeJoin [cs_item_sk#559], [item_sk#9268], LeftSemi
            :     :           :           :- Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
            :     :           :           :  +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#166942]
            :     :           :           :     +- Filter isnotnull(cs_sold_date_sk#544)
            :     :           :           :        +- FileScan parquet [cs_sold_date_sk#544,cs_bill_customer_sk#547,cs_item_sk#559,cs_quantity#562,cs_list_price#564] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:d...
            :     :           :           +- Sort [item_sk#9268 ASC NULLS FIRST], false, 0
            :     :           :              +- Project [item_sk#9268]
            :     :           :                 +- Filter (cnt#9270L > 4)
            :     :           :                    +- HashAggregate(keys=[_groupingexpression#9437, i_item_sk#668, d_date#614], functions=[count(1)], output=[item_sk#9268, cnt#9270L])
            :     :           :                       +- HashAggregate(keys=[_groupingexpression#9437, i_item_sk#668, d_date#614], functions=[partial_count(1)], output=[_groupingexpression#9437, i_item_sk#668, d_date#614, count#9444L])
            :     :           :                          +- Project [d_date#614, i_item_sk#668, substr(i_item_desc#672, 1, 30) AS _groupingexpression#9437]
            :     :           :                             +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
            :     :           :                                :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
            :     :           :                                :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#166930]
            :     :           :                                :     +- Project [ss_item_sk#254, d_date#614]
            :     :           :                                :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
            :     :           :                                :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
            :     :           :                                :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#166922]
            :     :           :                                :           :     +- Filter (isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_item_sk#254))
            :     :           :                                :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>
            :     :           :                                :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
            :     :           :                                :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#166923]
            :     :           :                                :                 +- Project [d_date_sk#612, d_date#614]
            :     :           :                                :                    +- Filter (d_year#618 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#612))
            :     :           :                                :                       +- FileScan parquet [d_date_sk#612,d_date#614,d_year#618] Batched: true, DataFilters: [d_year#618 IN (2000,2001,2002,2003), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
            :     :           :                                +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
            :     :           :                                   +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#166931]
            :     :           :                                      +- Filter isnotnull(i_item_sk#668)
            :     :           :                                         +- FileScan parquet [i_item_sk#668,i_item_desc#672] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
            :     :           +- Sort [c_customer_sk#9349 ASC NULLS FIRST], false, 0
            :     :              +- Project [c_customer_sk#9349]
            :     :                 +- Filter (isnotnull(ssales#9273) AND (cast(ssales#9273 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9274, [id=#166861] as decimal(32,6)))), DecimalType(38,8), true)))
            :     :                    :  +- Subquery subquery#9274, [id=#166861]
            :     :                    :     +- AdaptiveSparkPlan isFinalPlan=true
                                             +- == Final Plan ==
                                                GpuColumnarToRow false
                                                +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9271)], output=[tpcds_cmax#9272])
                                                   +- GpuShuffleCoalesce 2147483647
                                                      +- ShuffleQueryStage 5
                                                         +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#175415]
                                                            +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9271)], output=[max#9450])
                                                               +- GpuRowToColumnar targetsize(2147483647)
                                                                  +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9271])
                                                                     +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9453, isEmpty#9454])
                                                                        +- GpuColumnarToRow false
                                                                           +- GpuProject [ss_quantity#9285, ss_sales_price#9288, c_customer_sk#400], true
                                                                              +- GpuShuffledHashJoin [ss_customer_sk#9278], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                                 :- GpuShuffleCoalesce 2147483647
                                                                                 :  +- GpuCustomShuffleReader coalesced
                                                                                 :     +- ShuffleQueryStage 4
                                                                                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9278, 200), ENSURE_REQUIREMENTS, [id=#175204]
                                                                                 :           +- GpuProject [ss_customer_sk#9278, ss_quantity#9285, ss_sales_price#9288], true
                                                                                 :              +- GpuShuffledHashJoin [ss_sold_date_sk#9275], [d_date_sk#9298], Inner, GpuBuildRight, false
                                                                                 :                 :- GpuShuffleCoalesce 2147483647
                                                                                 :                 :  +- GpuCustomShuffleReader coalesced
                                                                                 :                 :     +- ShuffleQueryStage 0
                                                                                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9275, 200), ENSURE_REQUIREMENTS, [id=#174822]
                                                                                 :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                                 :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9275) AND gpuisnotnull(ss_customer_sk#9278)), true
                                                                                 :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9275,ss_customer_sk#9278,ss_quantity#9285,ss_sales_price#9288] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9275), isnotnull(ss_customer_sk#9278)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                 :                 +- GpuCustomShuffleReader coalesced
                                                                                 :                    +- ShuffleQueryStage 1
                                                                                 :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9298, 200), ENSURE_REQUIREMENTS, [id=#174859]
                                                                                 :                          +- GpuProject [d_date_sk#9298], true
                                                                                 :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                                 :                                +- GpuFilter (d_year#9304 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9298)), true
                                                                                 :                                   +- GpuFileGpuScan parquet [d_date_sk#9298,d_year#9304] Batched: true, DataFilters: [d_year#9304 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9298)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                 +- GpuCustomShuffleReader coalesced
                                                                                    +- ShuffleQueryStage 3
                                                                                       +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9349, 200), ENSURE_REQUIREMENTS, [id=#168778]
                                             +- == Initial Plan ==
                                                HashAggregate(keys=[], functions=[max(csales#9271)], output=[tpcds_cmax#9272])
                                                +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#166791]
                                                   +- HashAggregate(keys=[], functions=[partial_max(csales#9271)], output=[max#9450])
                                                      +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9271])
                                                         +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9453, isEmpty#9454])
                                                            +- Project [ss_quantity#9285, ss_sales_price#9288, c_customer_sk#400]
                                                               +- SortMergeJoin [ss_customer_sk#9278], [c_customer_sk#400], Inner
                                                                  :- Sort [ss_customer_sk#9278 ASC NULLS FIRST], false, 0
                                                                  :  +- Exchange hashpartitioning(ss_customer_sk#9278, 200), ENSURE_REQUIREMENTS, [id=#166781]
                                                                  :     +- Project [ss_customer_sk#9278, ss_quantity#9285, ss_sales_price#9288]
                                                                  :        +- SortMergeJoin [ss_sold_date_sk#9275], [d_date_sk#9298], Inner
                                                                  :           :- Sort [ss_sold_date_sk#9275 ASC NULLS FIRST], false, 0
                                                                  :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9275, 200), ENSURE_REQUIREMENTS, [id=#166773]
                                                                  :           :     +- Filter (isnotnull(ss_sold_date_sk#9275) AND isnotnull(ss_customer_sk#9278))
                                                                  :           :        +- FileScan parquet [ss_sold_date_sk#9275,ss_customer_sk#9278,ss_quantity#9285,ss_sales_price#9288] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9275), isnotnull(ss_customer_sk#9278)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                  :           +- Sort [d_date_sk#9298 ASC NULLS FIRST], false, 0
                                                                  :              +- Exchange hashpartitioning(d_date_sk#9298, 200), ENSURE_REQUIREMENTS, [id=#166774]
                                                                  :                 +- Project [d_date_sk#9298]
                                                                  :                    +- Filter (d_year#9304 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9298))
                                                                  :                       +- FileScan parquet [d_date_sk#9298,d_year#9304] Batched: true, DataFilters: [d_year#9304 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9298)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                  +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                                     +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#166782]
                                                                        +- Filter isnotnull(c_customer_sk#400)
                                                                           +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
            :     :                    +- HashAggregate(keys=[c_customer_sk#9349], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9336 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9339 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9349, ssales#9273])
            :     :                       +- HashAggregate(keys=[c_customer_sk#9349], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9336 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9339 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9349, sum#9447, isEmpty#9448])
            :     :                          +- Project [ss_quantity#9336, ss_sales_price#9339, c_customer_sk#9349]
            :     :                             +- SortMergeJoin [ss_customer_sk#9329], [c_customer_sk#9349], Inner
            :     :                                :- Sort [ss_customer_sk#9329 ASC NULLS FIRST], false, 0
            :     :                                :  +- Exchange hashpartitioning(ss_customer_sk#9329, 200), ENSURE_REQUIREMENTS, [id=#166948]
            :     :                                :     +- Filter isnotnull(ss_customer_sk#9329)
            :     :                                :        +- FileScan parquet [ss_customer_sk#9329,ss_quantity#9336,ss_sales_price#9339] Batched: true, DataFilters: [isnotnull(ss_customer_sk#9329)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
            :     :                                +- Sort [c_customer_sk#9349 ASC NULLS FIRST], false, 0
            :     :                                   +- Exchange hashpartitioning(c_customer_sk#9349, 200), ENSURE_REQUIREMENTS, [id=#166949]
            :     :                                      +- Filter isnotnull(c_customer_sk#9349)
            :     :                                         +- FileScan parquet [c_customer_sk#9349] Batched: true, DataFilters: [isnotnull(c_customer_sk#9349)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
            :     +- Sort [d_date_sk#9367 ASC NULLS FIRST], false, 0
            :        +- Exchange hashpartitioning(d_date_sk#9367, 200), ENSURE_REQUIREMENTS, [id=#166968]
            :           +- Project [d_date_sk#9367]
            :              +- Filter ((((isnotnull(d_year#9373) AND isnotnull(d_moy#9375)) AND (d_year#9373 = 2000)) AND (d_moy#9375 = 7)) AND isnotnull(d_date_sk#9367))
            :                 +- FileScan parquet [d_date_sk#9367,d_year#9373,d_moy#9375] Batched: true, DataFilters: [isnotnull(d_year#9373), isnotnull(d_moy#9375), (d_year#9373 = 2000), (d_moy#9375 = 7), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,7), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
            +- Project [CheckOverflow((promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#496 as decimal(12,2)))), DecimalType(18,2), true) AS sales#9264]
               +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#9395], Inner
                  :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#167019]
                  :     +- Project [ws_sold_date_sk#476, ws_quantity#494, ws_list_price#496]
                  :        +- SortMergeJoin [ws_bill_customer_sk#480], [c_customer_sk#9349], LeftSemi
                  :           :- Sort [ws_bill_customer_sk#480 ASC NULLS FIRST], false, 0
                  :           :  +- Exchange hashpartitioning(ws_bill_customer_sk#480, 200), ENSURE_REQUIREMENTS, [id=#167012]
                  :           :     +- Project [ws_sold_date_sk#476, ws_bill_customer_sk#480, ws_quantity#494, ws_list_price#496]
                  :           :        +- SortMergeJoin [ws_item_sk#479], [item_sk#9268], LeftSemi
                  :           :           :- Sort [ws_item_sk#479 ASC NULLS FIRST], false, 0
                  :           :           :  +- Exchange hashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#166994]
                  :           :           :     +- Filter isnotnull(ws_sold_date_sk#476)
                  :           :           :        +- FileScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_bill_customer_sk#480,ws_quantity#494,ws_list_price#496] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:d...
                  :           :           +- Sort [item_sk#9268 ASC NULLS FIRST], false, 0
                  :           :              +- Project [item_sk#9268]
                  :           :                 +- Filter (cnt#9270L > 4)
                  :           :                    +- HashAggregate(keys=[_groupingexpression#9438, i_item_sk#668, d_date#614], functions=[count(1)], output=[item_sk#9268, cnt#9270L])
                  :           :                       +- HashAggregate(keys=[_groupingexpression#9438, i_item_sk#668, d_date#614], functions=[partial_count(1)], output=[_groupingexpression#9438, i_item_sk#668, d_date#614, count#9444L])
                  :           :                          +- Project [d_date#614, i_item_sk#668, substr(i_item_desc#672, 1, 30) AS _groupingexpression#9438]
                  :           :                             +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                  :           :                                :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                  :           :                                :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#166982]
                  :           :                                :     +- Project [ss_item_sk#254, d_date#614]
                  :           :                                :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                  :           :                                :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                  :           :                                :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#166974]
                  :           :                                :           :     +- Filter (isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_item_sk#254))
                  :           :                                :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>
                  :           :                                :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                  :           :                                :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#166975]
                  :           :                                :                 +- Project [d_date_sk#612, d_date#614]
                  :           :                                :                    +- Filter (d_year#618 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#612))
                  :           :                                :                       +- FileScan parquet [d_date_sk#612,d_date#614,d_year#618] Batched: true, DataFilters: [d_year#618 IN (2000,2001,2002,2003), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
                  :           :                                +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                  :           :                                   +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#166983]
                  :           :                                      +- Filter isnotnull(i_item_sk#668)
                  :           :                                         +- FileScan parquet [i_item_sk#668,i_item_desc#672] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
                  :           +- Sort [c_customer_sk#9349 ASC NULLS FIRST], false, 0
                  :              +- Project [c_customer_sk#9349]
                  :                 +- Filter (isnotnull(ssales#9273) AND (cast(ssales#9273 as decimal(38,8)) > CheckOverflow((0.950000 * promote_precision(cast(Subquery subquery#9274, [id=#166861] as decimal(32,6)))), DecimalType(38,8), true)))
                  :                    :  +- Subquery subquery#9274, [id=#166861]
                  :                    :     +- AdaptiveSparkPlan isFinalPlan=true
                                             +- == Final Plan ==
                                                GpuColumnarToRow false
                                                +- GpuHashAggregate(keys=[], functions=[gpubasicmax(csales#9271)], output=[tpcds_cmax#9272])
                                                   +- GpuShuffleCoalesce 2147483647
                                                      +- ShuffleQueryStage 5
                                                         +- GpuColumnarExchange gpusinglepartitioning$(), ENSURE_REQUIREMENTS, [id=#175415]
                                                            +- GpuHashAggregate(keys=[], functions=[partial_gpubasicmax(csales#9271)], output=[max#9450])
                                                               +- GpuRowToColumnar targetsize(2147483647)
                                                                  +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9271])
                                                                     +- *(1) HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9453, isEmpty#9454])
                                                                        +- GpuColumnarToRow false
                                                                           +- GpuProject [ss_quantity#9285, ss_sales_price#9288, c_customer_sk#400], true
                                                                              +- GpuShuffledHashJoin [ss_customer_sk#9278], [c_customer_sk#400], Inner, GpuBuildRight, false
                                                                                 :- GpuShuffleCoalesce 2147483647
                                                                                 :  +- GpuCustomShuffleReader coalesced
                                                                                 :     +- ShuffleQueryStage 4
                                                                                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_customer_sk#9278, 200), ENSURE_REQUIREMENTS, [id=#175204]
                                                                                 :           +- GpuProject [ss_customer_sk#9278, ss_quantity#9285, ss_sales_price#9288], true
                                                                                 :              +- GpuShuffledHashJoin [ss_sold_date_sk#9275], [d_date_sk#9298], Inner, GpuBuildRight, false
                                                                                 :                 :- GpuShuffleCoalesce 2147483647
                                                                                 :                 :  +- GpuCustomShuffleReader coalesced
                                                                                 :                 :     +- ShuffleQueryStage 0
                                                                                 :                 :        +- GpuColumnarExchange gpuhashpartitioning(ss_sold_date_sk#9275, 200), ENSURE_REQUIREMENTS, [id=#174822]
                                                                                 :                 :           +- GpuCoalesceBatches targetsize(2147483647)
                                                                                 :                 :              +- GpuFilter (gpuisnotnull(ss_sold_date_sk#9275) AND gpuisnotnull(ss_customer_sk#9278)), true
                                                                                 :                 :                 +- GpuFileGpuScan parquet [ss_sold_date_sk#9275,ss_customer_sk#9278,ss_quantity#9285,ss_sales_price#9288] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9275), isnotnull(ss_customer_sk#9278)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                 :                 +- GpuCustomShuffleReader coalesced
                                                                                 :                    +- ShuffleQueryStage 1
                                                                                 :                       +- GpuColumnarExchange gpuhashpartitioning(d_date_sk#9298, 200), ENSURE_REQUIREMENTS, [id=#174859]
                                                                                 :                          +- GpuProject [d_date_sk#9298], true
                                                                                 :                             +- GpuCoalesceBatches targetsize(2147483647)
                                                                                 :                                +- GpuFilter (d_year#9304 INSET 2000, 2001, 2002, 2003 AND gpuisnotnull(d_date_sk#9298)), true
                                                                                 :                                   +- GpuFileGpuScan parquet [d_date_sk#9298,d_year#9304] Batched: true, DataFilters: [d_year#9304 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9298)], Format: Parquet, Location: InMemoryFileIndex[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                                 +- GpuCustomShuffleReader coalesced
                                                                                    +- ShuffleQueryStage 3
                                                                                       +- ReusedExchange [c_customer_sk#400], GpuColumnarExchange gpuhashpartitioning(c_customer_sk#9349, 200), ENSURE_REQUIREMENTS, [id=#168778]
                                             +- == Initial Plan ==
                                                HashAggregate(keys=[], functions=[max(csales#9271)], output=[tpcds_cmax#9272])
                                                +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#166791]
                                                   +- HashAggregate(keys=[], functions=[partial_max(csales#9271)], output=[max#9450])
                                                      +- HashAggregate(keys=[c_customer_sk#400], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[csales#9271])
                                                         +- HashAggregate(keys=[c_customer_sk#400], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9285 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9288 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#400, sum#9453, isEmpty#9454])
                                                            +- Project [ss_quantity#9285, ss_sales_price#9288, c_customer_sk#400]
                                                               +- SortMergeJoin [ss_customer_sk#9278], [c_customer_sk#400], Inner
                                                                  :- Sort [ss_customer_sk#9278 ASC NULLS FIRST], false, 0
                                                                  :  +- Exchange hashpartitioning(ss_customer_sk#9278, 200), ENSURE_REQUIREMENTS, [id=#166781]
                                                                  :     +- Project [ss_customer_sk#9278, ss_quantity#9285, ss_sales_price#9288]
                                                                  :        +- SortMergeJoin [ss_sold_date_sk#9275], [d_date_sk#9298], Inner
                                                                  :           :- Sort [ss_sold_date_sk#9275 ASC NULLS FIRST], false, 0
                                                                  :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9275, 200), ENSURE_REQUIREMENTS, [id=#166773]
                                                                  :           :     +- Filter (isnotnull(ss_sold_date_sk#9275) AND isnotnull(ss_customer_sk#9278))
                                                                  :           :        +- FileScan parquet [ss_sold_date_sk#9275,ss_customer_sk#9278,ss_quantity#9285,ss_sales_price#9288] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#9275), isnotnull(ss_customer_sk#9278)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                  :           +- Sort [d_date_sk#9298 ASC NULLS FIRST], false, 0
                                                                  :              +- Exchange hashpartitioning(d_date_sk#9298, 200), ENSURE_REQUIREMENTS, [id=#166774]
                                                                  :                 +- Project [d_date_sk#9298]
                                                                  :                    +- Filter (d_year#9304 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#9298))
                                                                  :                       +- FileScan parquet [d_date_sk#9298,d_year#9304] Batched: true, DataFilters: [d_year#9304 IN (2000,2001,2002,2003), isnotnull(d_date_sk#9298)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                                  +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                                     +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#166782]
                                                                        +- Filter isnotnull(c_customer_sk#400)
                                                                           +- FileScan parquet [c_customer_sk#400] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                  :                    +- HashAggregate(keys=[c_customer_sk#9349], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9336 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9339 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9349, ssales#9273])
                  :                       +- HashAggregate(keys=[c_customer_sk#9349], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#9336 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#9339 as decimal(12,2)))), DecimalType(18,2), true))], output=[c_customer_sk#9349, sum#9447, isEmpty#9448])
                  :                          +- Project [ss_quantity#9336, ss_sales_price#9339, c_customer_sk#9349]
                  :                             +- SortMergeJoin [ss_customer_sk#9329], [c_customer_sk#9349], Inner
                  :                                :- Sort [ss_customer_sk#9329 ASC NULLS FIRST], false, 0
                  :                                :  +- Exchange hashpartitioning(ss_customer_sk#9329, 200), ENSURE_REQUIREMENTS, [id=#167000]
                  :                                :     +- Filter isnotnull(ss_customer_sk#9329)
                  :                                :        +- FileScan parquet [ss_customer_sk#9329,ss_quantity#9336,ss_sales_price#9339] Batched: true, DataFilters: [isnotnull(ss_customer_sk#9329)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                  :                                +- Sort [c_customer_sk#9349 ASC NULLS FIRST], false, 0
                  :                                   +- Exchange hashpartitioning(c_customer_sk#9349, 200), ENSURE_REQUIREMENTS, [id=#167001]
                  :                                      +- Filter isnotnull(c_customer_sk#9349)
                  :                                         +- FileScan parquet [c_customer_sk#9349] Batched: true, DataFilters: [isnotnull(c_customer_sk#9349)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                  +- Sort [d_date_sk#9395 ASC NULLS FIRST], false, 0
                     +- Exchange hashpartitioning(d_date_sk#9395, 200), ENSURE_REQUIREMENTS, [id=#167020]
                        +- Project [d_date_sk#9395]
                           +- Filter ((((isnotnull(d_year#9401) AND isnotnull(d_moy#9403)) AND (d_year#9401 = 2000)) AND (d_moy#9403 = 7)) AND isnotnull(d_date_sk#9395))
                              +- FileScan parquet [d_date_sk#9395,d_year#9401,d_moy#9403] Batched: true, DataFilters: [isnotnull(d_year#9401), isnotnull(d_moy#9403), (d_year#9401 = 2000), (d_moy#9403 = 7), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,7), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
