AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name1#11945 ASC NULLS FIRST,s_store_id1#11947 ASC NULLS FIRST,d_week_seq1#11946 ASC NULLS FIRST], output=[s_store_name1#11945,s_store_id1#11947,d_week_seq1#11946,(sun_sales1 / sun_sales2)#12064,(mon_sales1 / mon_sales2)#12065,(tue_sales1 / tue_sales2)#12066,(wed_sales1 / wed_sales2)#12067,(thu_sales1 / thu_sales2)#12068,(fri_sales1 / fri_sales2)#12069,(sat_sales1 / sat_sales2)#12070])
   +- *(11) Project [s_store_name1#11945, s_store_id1#11947, d_week_seq1#11946, CheckOverflow((promote_precision(sun_sales1#11948) / promote_precision(sun_sales2#11958)), DecimalType(37,20), true) AS (sun_sales1 / sun_sales2)#12064, CheckOverflow((promote_precision(mon_sales1#11949) / promote_precision(mon_sales2#11959)), DecimalType(37,20), true) AS (mon_sales1 / mon_sales2)#12065, CheckOverflow((promote_precision(tue_sales1#11950) / promote_precision(tue_sales2#11960)), DecimalType(37,20), true) AS (tue_sales1 / tue_sales2)#12066, CheckOverflow((promote_precision(wed_sales1#11951) / promote_precision(wed_sales2#11961)), DecimalType(37,20), true) AS (wed_sales1 / wed_sales2)#12067, CheckOverflow((promote_precision(thu_sales1#11952) / promote_precision(thu_sales2#11962)), DecimalType(37,20), true) AS (thu_sales1 / thu_sales2)#12068, CheckOverflow((promote_precision(fri_sales1#11953) / promote_precision(fri_sales2#11963)), DecimalType(37,20), true) AS (fri_sales1 / fri_sales2)#12069, CheckOverflow((promote_precision(sat_sales1#11954) / promote_precision(sat_sales2#11964)), DecimalType(37,20), true) AS (sat_sales1 / sat_sales2)#12070]
      +- *(11) BroadcastHashJoin [s_store_id1#11947, d_week_seq1#11946], [s_store_id2#11957, (d_week_seq2#11956 - 52)], Inner, BuildLeft, false
         :- BroadcastQueryStage 12
         :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[2, string, true], input[1, int, true]),false), [id=#94977]
         :     +- AQEShuffleRead local
         :        +- ShuffleQueryStage 10
         :           +- Exchange hashpartitioning(s_store_id1#11947, d_week_seq1#11946, 200), ENSURE_REQUIREMENTS, [id=#94871]
         :              +- *(9) Project [s_store_name#331 AS s_store_name1#11945, d_week_seq#602 AS d_week_seq1#11946, s_store_id#327 AS s_store_id1#11947, sun_sales#11965 AS sun_sales1#11948, mon_sales#11966 AS mon_sales1#11949, tue_sales#11967 AS tue_sales1#11950, wed_sales#11968 AS wed_sales1#11951, thu_sales#11969 AS thu_sales1#11952, fri_sales#11970 AS fri_sales1#11953, sat_sales#11971 AS sat_sales1#11954]
         :                 +- *(9) BroadcastHashJoin [d_week_seq#602], [d_week_seq#11976], Inner, BuildRight, false
         :                    :- *(9) Project [d_week_seq#602, sun_sales#11965, mon_sales#11966, tue_sales#11967, wed_sales#11968, thu_sales#11969, fri_sales#11970, sat_sales#11971, s_store_id#327, s_store_name#331]
         :                    :  +- *(9) BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
         :                    :     :- *(9) HashAggregate(keys=[d_week_seq#602, ss_store_sk#671], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[d_week_seq#602, ss_store_sk#671, sun_sales#11965, mon_sales#11966, tue_sales#11967, wed_sales#11968, thu_sales#11969, fri_sales#11970, sat_sales#11971])
         :                    :     :  +- AQEShuffleRead coalesced
         :                    :     :     +- ShuffleQueryStage 7
         :                    :     :        +- Exchange hashpartitioning(d_week_seq#602, ss_store_sk#671, 200), ENSURE_REQUIREMENTS, [id=#94727]
         :                    :     :           +- *(7) HashAggregate(keys=[d_week_seq#602, ss_store_sk#671], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[d_week_seq#602, ss_store_sk#671, sum#12088L, sum#12089L, sum#12090L, sum#12091L, sum#12092L, sum#12093L, sum#12094L])
         :                    :     :              +- *(7) Project [ss_store_sk#671, ss_sales_price#677, d_week_seq#602, d_day_name#612]
         :                    :     :                 +- *(7) BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
         :                    :     :                    :- *(7) Filter (isnotnull(ss_sold_date_sk#664) AND isnotnull(ss_store_sk#671))
         :                    :     :                    :  +- *(7) ColumnarToRow
         :                    :     :                    :     +- FileScan parquet [ss_sold_date_sk#664,ss_store_sk#671,ss_sales_price#677] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#664), isnotnull(ss_store_sk#671)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :                    :     :                    +- BroadcastQueryStage 0
         :                    :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#93943]
         :                    :     :                          +- *(1) Filter (isnotnull(d_date_sk#598) AND isnotnull(d_week_seq#602))
         :                    :     :                             +- *(1) ColumnarToRow
         :                    :     :                                +- FileScan parquet [d_date_sk#598,d_week_seq#602,d_day_name#612] Batched: true, DataFilters: [isnotnull(d_date_sk#598), isnotnull(d_week_seq#602)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
         :                    :     +- BroadcastQueryStage 1
         :                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#93963]
         :                    :           +- *(2) Filter (isnotnull(s_store_sk#326) AND isnotnull(s_store_id#327))
         :                    :              +- *(2) ColumnarToRow
         :                    :                 +- FileScan parquet [s_store_sk#326,s_store_id#327,s_store_name#331] Batched: true, DataFilters: [isnotnull(s_store_sk#326), isnotnull(s_store_id#327)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_id)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
         :                    +- BroadcastQueryStage 2
         :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#93982]
         :                          +- *(3) Project [d_week_seq#11976]
         :                             +- *(3) Filter (((isnotnull(d_month_seq#11975) AND (d_month_seq#11975 >= 1183)) AND (d_month_seq#11975 <= 1194)) AND isnotnull(d_week_seq#11976))
         :                                +- *(3) ColumnarToRow
         :                                   +- FileScan parquet [d_month_seq#11975,d_week_seq#11976] Batched: true, DataFilters: [isnotnull(d_month_seq#11975), (d_month_seq#11975 >= 1183), (d_month_seq#11975 <= 1194), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1183), LessThanOrEqual(d_month_seq,1194),..., ReadSchema: struct<d_month_seq:int,d_week_seq:int>
         +- AQEShuffleRead local
            +- ShuffleQueryStage 11
               +- Exchange hashpartitioning(s_store_id2#11957, (d_week_seq2#11956 - 52), 200), ENSURE_REQUIREMENTS, [id=#94919]
                  +- *(10) Project [d_week_seq#602 AS d_week_seq2#11956, s_store_id#12001 AS s_store_id2#11957, sun_sales#11965 AS sun_sales2#11958, mon_sales#11966 AS mon_sales2#11959, tue_sales#11967 AS tue_sales2#11960, wed_sales#11968 AS wed_sales2#11961, thu_sales#11969 AS thu_sales2#11962, fri_sales#11970 AS fri_sales2#11963, sat_sales#11971 AS sat_sales2#11964]
                     +- *(10) BroadcastHashJoin [d_week_seq#602], [d_week_seq#12033], Inner, BuildRight, false
                        :- *(10) Project [d_week_seq#602, sun_sales#11965, mon_sales#11966, tue_sales#11967, wed_sales#11968, thu_sales#11969, fri_sales#11970, sat_sales#11971, s_store_id#12001]
                        :  +- *(10) BroadcastHashJoin [ss_store_sk#671], [s_store_sk#12000], Inner, BuildRight, false
                        :     :- *(10) HashAggregate(keys=[d_week_seq#602, ss_store_sk#671], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[d_week_seq#602, ss_store_sk#671, sun_sales#11965, mon_sales#11966, tue_sales#11967, wed_sales#11968, thu_sales#11969, fri_sales#11970, sat_sales#11971])
                        :     :  +- AQEShuffleRead coalesced
                        :     :     +- ShuffleQueryStage 9
                        :     :        +- ReusedExchange [d_week_seq#602, ss_store_sk#671, sum#12102L, sum#12103L, sum#12104L, sum#12105L, sum#12106L, sum#12107L, sum#12108L], Exchange hashpartitioning(d_week_seq#602, ss_store_sk#671, 200), ENSURE_REQUIREMENTS, [id=#94727]
                        :     +- BroadcastQueryStage 5
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#94062]
                        :           +- *(5) Filter (isnotnull(s_store_sk#12000) AND isnotnull(s_store_id#12001))
                        :              +- *(5) ColumnarToRow
                        :                 +- FileScan parquet [s_store_sk#12000,s_store_id#12001] Batched: true, DataFilters: [isnotnull(s_store_sk#12000), isnotnull(s_store_id#12001)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_id)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                        +- BroadcastQueryStage 6
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#94081]
                              +- *(6) Project [d_week_seq#12033]
                                 +- *(6) Filter (((isnotnull(d_month_seq#12032) AND (d_month_seq#12032 >= 1195)) AND (d_month_seq#12032 <= 1206)) AND isnotnull(d_week_seq#12033))
                                    +- *(6) ColumnarToRow
                                       +- FileScan parquet [d_month_seq#12032,d_week_seq#12033] Batched: true, DataFilters: [isnotnull(d_month_seq#12032), (d_month_seq#12032 >= 1195), (d_month_seq#12032 <= 1206), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1195), LessThanOrEqual(d_month_seq,1206),..., ReadSchema: struct<d_month_seq:int,d_week_seq:int>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name1#11945 ASC NULLS FIRST,s_store_id1#11947 ASC NULLS FIRST,d_week_seq1#11946 ASC NULLS FIRST], output=[s_store_name1#11945,s_store_id1#11947,d_week_seq1#11946,(sun_sales1 / sun_sales2)#12064,(mon_sales1 / mon_sales2)#12065,(tue_sales1 / tue_sales2)#12066,(wed_sales1 / wed_sales2)#12067,(thu_sales1 / thu_sales2)#12068,(fri_sales1 / fri_sales2)#12069,(sat_sales1 / sat_sales2)#12070])
   +- Project [s_store_name1#11945, s_store_id1#11947, d_week_seq1#11946, CheckOverflow((promote_precision(sun_sales1#11948) / promote_precision(sun_sales2#11958)), DecimalType(37,20), true) AS (sun_sales1 / sun_sales2)#12064, CheckOverflow((promote_precision(mon_sales1#11949) / promote_precision(mon_sales2#11959)), DecimalType(37,20), true) AS (mon_sales1 / mon_sales2)#12065, CheckOverflow((promote_precision(tue_sales1#11950) / promote_precision(tue_sales2#11960)), DecimalType(37,20), true) AS (tue_sales1 / tue_sales2)#12066, CheckOverflow((promote_precision(wed_sales1#11951) / promote_precision(wed_sales2#11961)), DecimalType(37,20), true) AS (wed_sales1 / wed_sales2)#12067, CheckOverflow((promote_precision(thu_sales1#11952) / promote_precision(thu_sales2#11962)), DecimalType(37,20), true) AS (thu_sales1 / thu_sales2)#12068, CheckOverflow((promote_precision(fri_sales1#11953) / promote_precision(fri_sales2#11963)), DecimalType(37,20), true) AS (fri_sales1 / fri_sales2)#12069, CheckOverflow((promote_precision(sat_sales1#11954) / promote_precision(sat_sales2#11964)), DecimalType(37,20), true) AS (sat_sales1 / sat_sales2)#12070]
      +- SortMergeJoin [s_store_id1#11947, d_week_seq1#11946], [s_store_id2#11957, (d_week_seq2#11956 - 52)], Inner
         :- Sort [s_store_id1#11947 ASC NULLS FIRST, d_week_seq1#11946 ASC NULLS FIRST], false, 0
         :  +- Exchange hashpartitioning(s_store_id1#11947, d_week_seq1#11946, 200), ENSURE_REQUIREMENTS, [id=#93892]
         :     +- Project [s_store_name#331 AS s_store_name1#11945, d_week_seq#602 AS d_week_seq1#11946, s_store_id#327 AS s_store_id1#11947, sun_sales#11965 AS sun_sales1#11948, mon_sales#11966 AS mon_sales1#11949, tue_sales#11967 AS tue_sales1#11950, wed_sales#11968 AS wed_sales1#11951, thu_sales#11969 AS thu_sales1#11952, fri_sales#11970 AS fri_sales1#11953, sat_sales#11971 AS sat_sales1#11954]
         :        +- BroadcastHashJoin [d_week_seq#602], [d_week_seq#11976], Inner, BuildRight, false
         :           :- Project [d_week_seq#602, sun_sales#11965, mon_sales#11966, tue_sales#11967, wed_sales#11968, thu_sales#11969, fri_sales#11970, sat_sales#11971, s_store_id#327, s_store_name#331]
         :           :  +- BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
         :           :     :- HashAggregate(keys=[d_week_seq#602, ss_store_sk#671], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[d_week_seq#602, ss_store_sk#671, sun_sales#11965, mon_sales#11966, tue_sales#11967, wed_sales#11968, thu_sales#11969, fri_sales#11970, sat_sales#11971])
         :           :     :  +- Exchange hashpartitioning(d_week_seq#602, ss_store_sk#671, 200), ENSURE_REQUIREMENTS, [id=#93865]
         :           :     :     +- HashAggregate(keys=[d_week_seq#602, ss_store_sk#671], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[d_week_seq#602, ss_store_sk#671, sum#12088L, sum#12089L, sum#12090L, sum#12091L, sum#12092L, sum#12093L, sum#12094L])
         :           :     :        +- Project [ss_store_sk#671, ss_sales_price#677, d_week_seq#602, d_day_name#612]
         :           :     :           +- BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
         :           :     :              :- Filter (isnotnull(ss_sold_date_sk#664) AND isnotnull(ss_store_sk#671))
         :           :     :              :  +- FileScan parquet [ss_sold_date_sk#664,ss_store_sk#671,ss_sales_price#677] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#664), isnotnull(ss_store_sk#671)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :           :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#93860]
         :           :     :                 +- Filter (isnotnull(d_date_sk#598) AND isnotnull(d_week_seq#602))
         :           :     :                    +- FileScan parquet [d_date_sk#598,d_week_seq#602,d_day_name#612] Batched: true, DataFilters: [isnotnull(d_date_sk#598), isnotnull(d_week_seq#602)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
         :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#93868]
         :           :        +- Filter (isnotnull(s_store_sk#326) AND isnotnull(s_store_id#327))
         :           :           +- FileScan parquet [s_store_sk#326,s_store_id#327,s_store_name#331] Batched: true, DataFilters: [isnotnull(s_store_sk#326), isnotnull(s_store_id#327)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_id)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
         :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#93872]
         :              +- Project [d_week_seq#11976]
         :                 +- Filter (((isnotnull(d_month_seq#11975) AND (d_month_seq#11975 >= 1183)) AND (d_month_seq#11975 <= 1194)) AND isnotnull(d_week_seq#11976))
         :                    +- FileScan parquet [d_month_seq#11975,d_week_seq#11976] Batched: true, DataFilters: [isnotnull(d_month_seq#11975), (d_month_seq#11975 >= 1183), (d_month_seq#11975 <= 1194), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1183), LessThanOrEqual(d_month_seq,1194),..., ReadSchema: struct<d_month_seq:int,d_week_seq:int>
         +- Sort [s_store_id2#11957 ASC NULLS FIRST, (d_week_seq2#11956 - 52) ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(s_store_id2#11957, (d_week_seq2#11956 - 52), 200), ENSURE_REQUIREMENTS, [id=#93893]
               +- Project [d_week_seq#602 AS d_week_seq2#11956, s_store_id#12001 AS s_store_id2#11957, sun_sales#11965 AS sun_sales2#11958, mon_sales#11966 AS mon_sales2#11959, tue_sales#11967 AS tue_sales2#11960, wed_sales#11968 AS wed_sales2#11961, thu_sales#11969 AS thu_sales2#11962, fri_sales#11970 AS fri_sales2#11963, sat_sales#11971 AS sat_sales2#11964]
                  +- BroadcastHashJoin [d_week_seq#602], [d_week_seq#12033], Inner, BuildRight, false
                     :- Project [d_week_seq#602, sun_sales#11965, mon_sales#11966, tue_sales#11967, wed_sales#11968, thu_sales#11969, fri_sales#11970, sat_sales#11971, s_store_id#12001]
                     :  +- BroadcastHashJoin [ss_store_sk#671], [s_store_sk#12000], Inner, BuildRight, false
                     :     :- HashAggregate(keys=[d_week_seq#602, ss_store_sk#671], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[d_week_seq#602, ss_store_sk#671, sun_sales#11965, mon_sales#11966, tue_sales#11967, wed_sales#11968, thu_sales#11969, fri_sales#11970, sat_sales#11971])
                     :     :  +- Exchange hashpartitioning(d_week_seq#602, ss_store_sk#671, 200), ENSURE_REQUIREMENTS, [id=#93880]
                     :     :     +- HashAggregate(keys=[d_week_seq#602, ss_store_sk#671], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Sunday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Monday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Tuesday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Wednesday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Thursday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Friday) THEN ss_sales_price#677 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#612 = Saturday) THEN ss_sales_price#677 END))], output=[d_week_seq#602, ss_store_sk#671, sum#12102L, sum#12103L, sum#12104L, sum#12105L, sum#12106L, sum#12107L, sum#12108L])
                     :     :        +- Project [ss_store_sk#671, ss_sales_price#677, d_week_seq#602, d_day_name#612]
                     :     :           +- BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
                     :     :              :- Filter (isnotnull(ss_sold_date_sk#664) AND isnotnull(ss_store_sk#671))
                     :     :              :  +- FileScan parquet [ss_sold_date_sk#664,ss_store_sk#671,ss_sales_price#677] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#664), isnotnull(ss_store_sk#671)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#93875]
                     :     :                 +- Filter (isnotnull(d_date_sk#598) AND isnotnull(d_week_seq#602))
                     :     :                    +- FileScan parquet [d_date_sk#598,d_week_seq#602,d_day_name#612] Batched: true, DataFilters: [isnotnull(d_date_sk#598), isnotnull(d_week_seq#602)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#93883]
                     :        +- Filter (isnotnull(s_store_sk#12000) AND isnotnull(s_store_id#12001))
                     :           +- FileScan parquet [s_store_sk#12000,s_store_id#12001] Batched: true, DataFilters: [isnotnull(s_store_sk#12000), isnotnull(s_store_id#12001)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_id)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#93887]
                        +- Project [d_week_seq#12033]
                           +- Filter (((isnotnull(d_month_seq#12032) AND (d_month_seq#12032 >= 1195)) AND (d_month_seq#12032 <= 1206)) AND isnotnull(d_week_seq#12033))
                              +- FileScan parquet [d_month_seq#12032,d_week_seq#12033] Batched: true, DataFilters: [isnotnull(d_month_seq#12032), (d_month_seq#12032 >= 1195), (d_month_seq#12032 <= 1206), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1195), LessThanOrEqual(d_month_seq,1206),..., ReadSchema: struct<d_month_seq:int,d_week_seq:int>
