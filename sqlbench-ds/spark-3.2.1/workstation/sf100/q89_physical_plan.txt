AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#19101 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#19102 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,s_store_name#331 ASC NULLS FIRST], output=[i_category#512,i_class#510,i_brand#508,s_store_name#331,s_company_name#343,d_moy#606,sum_sales#19101,avg_monthly_sales#19102])
   +- *(7) Project [i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606, sum_sales#19101, avg_monthly_sales#19102]
      +- *(7) Filter (isnotnull(avg_monthly_sales#19102) AND (NOT (avg_monthly_sales#19102 = 0.000000) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#19101 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#19102 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_monthly_sales#19102 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000)))
         +- Window [avg(_w0#19106) windowspecdefinition(i_category#512, i_brand#508, s_store_name#331, s_company_name#343, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#19102], [i_category#512, i_brand#508, s_store_name#331, s_company_name#343]
            +- *(6) Sort [i_category#512 ASC NULLS FIRST, i_brand#508 ASC NULLS FIRST, s_store_name#331 ASC NULLS FIRST, s_company_name#343 ASC NULLS FIRST], false, 0
               +- AQEShuffleRead coalesced
                  +- ShuffleQueryStage 4
                     +- Exchange hashpartitioning(i_category#512, i_brand#508, s_store_name#331, s_company_name#343, 200), ENSURE_REQUIREMENTS, [id=#151275]
                        +- *(5) HashAggregate(keys=[i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606], functions=[sum(UnscaledValue(ss_sales_price#677))], output=[i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606, sum_sales#19101, _w0#19106])
                           +- AQEShuffleRead coalesced
                              +- ShuffleQueryStage 3
                                 +- Exchange hashpartitioning(i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606, 200), ENSURE_REQUIREMENTS, [id=#151214]
                                    +- *(4) HashAggregate(keys=[i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606], functions=[partial_sum(UnscaledValue(ss_sales_price#677))], output=[i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606, sum#19116L])
                                       +- *(4) Project [i_brand#508, i_class#510, i_category#512, ss_sales_price#677, d_moy#606, s_store_name#331, s_company_name#343]
                                          +- *(4) BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                                             :- *(4) Project [i_brand#508, i_class#510, i_category#512, ss_store_sk#671, ss_sales_price#677, d_moy#606]
                                             :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
                                             :     :- *(4) Project [i_brand#508, i_class#510, i_category#512, ss_sold_date_sk#664, ss_store_sk#671, ss_sales_price#677]
                                             :     :  +- *(4) BroadcastHashJoin [i_item_sk#500], [ss_item_sk#666], Inner, BuildLeft, false
                                             :     :     :- BroadcastQueryStage 0
                                             :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#150918]
                                             :     :     :     +- *(1) Filter (((i_category#512 IN (Shoes,Sports,Music) AND i_class#510 IN (athletic,pools,country)) OR (i_category#512 IN (Children,Women,Home) AND i_class#510 IN (toddlers,fragrances,blinds/shades))) AND isnotnull(i_item_sk#500))
                                             :     :     :        +- *(1) ColumnarToRow
                                             :     :     :           +- FileScan parquet [i_item_sk#500,i_brand#508,i_class#510,i_category#512] Batched: true, DataFilters: [((i_category#512 IN (Shoes,Sports,Music) AND i_class#510 IN (athletic,pools,country)) OR (i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [Or(And(In(i_category, [Music,Shoes,Sports]),In(i_class, [athletic,country,pools])),And(In(i_cate..., ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string>
                                             :     :     +- *(4) Filter ((isnotnull(ss_item_sk#666) AND isnotnull(ss_sold_date_sk#664)) AND isnotnull(ss_store_sk#671))
                                             :     :        +- *(4) ColumnarToRow
                                             :     :           +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_store_sk#671,ss_sales_price#677] Batched: true, DataFilters: [isnotnull(ss_item_sk#666), isnotnull(ss_sold_date_sk#664), isnotnull(ss_store_sk#671)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                                             :     +- BroadcastQueryStage 1
                                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#150937]
                                             :           +- *(2) Project [d_date_sk#598, d_moy#606]
                                             :              +- *(2) Filter ((isnotnull(d_year#604) AND (d_year#604 = 2001)) AND isnotnull(d_date_sk#598))
                                             :                 +- *(2) ColumnarToRow
                                             :                    +- FileScan parquet [d_date_sk#598,d_year#604,d_moy#606] Batched: true, DataFilters: [isnotnull(d_year#604), (d_year#604 = 2001), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                             +- BroadcastQueryStage 2
                                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#150956]
                                                   +- *(3) Filter isnotnull(s_store_sk#326)
                                                      +- *(3) ColumnarToRow
                                                         +- FileScan parquet [s_store_sk#326,s_store_name#331,s_company_name#343] Batched: true, DataFilters: [isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#19101 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#19102 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,s_store_name#331 ASC NULLS FIRST], output=[i_category#512,i_class#510,i_brand#508,s_store_name#331,s_company_name#343,d_moy#606,sum_sales#19101,avg_monthly_sales#19102])
   +- Project [i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606, sum_sales#19101, avg_monthly_sales#19102]
      +- Filter (isnotnull(avg_monthly_sales#19102) AND (NOT (avg_monthly_sales#19102 = 0.000000) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#19101 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#19102 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_monthly_sales#19102 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000)))
         +- Window [avg(_w0#19106) windowspecdefinition(i_category#512, i_brand#508, s_store_name#331, s_company_name#343, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#19102], [i_category#512, i_brand#508, s_store_name#331, s_company_name#343]
            +- Sort [i_category#512 ASC NULLS FIRST, i_brand#508 ASC NULLS FIRST, s_store_name#331 ASC NULLS FIRST, s_company_name#343 ASC NULLS FIRST], false, 0
               +- Exchange hashpartitioning(i_category#512, i_brand#508, s_store_name#331, s_company_name#343, 200), ENSURE_REQUIREMENTS, [id=#150868]
                  +- HashAggregate(keys=[i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606], functions=[sum(UnscaledValue(ss_sales_price#677))], output=[i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606, sum_sales#19101, _w0#19106])
                     +- Exchange hashpartitioning(i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606, 200), ENSURE_REQUIREMENTS, [id=#150865]
                        +- HashAggregate(keys=[i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606], functions=[partial_sum(UnscaledValue(ss_sales_price#677))], output=[i_category#512, i_class#510, i_brand#508, s_store_name#331, s_company_name#343, d_moy#606, sum#19116L])
                           +- Project [i_brand#508, i_class#510, i_category#512, ss_sales_price#677, d_moy#606, s_store_name#331, s_company_name#343]
                              +- BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                                 :- Project [i_brand#508, i_class#510, i_category#512, ss_store_sk#671, ss_sales_price#677, d_moy#606]
                                 :  +- BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
                                 :     :- Project [i_brand#508, i_class#510, i_category#512, ss_sold_date_sk#664, ss_store_sk#671, ss_sales_price#677]
                                 :     :  +- BroadcastHashJoin [i_item_sk#500], [ss_item_sk#666], Inner, BuildLeft, false
                                 :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#150852]
                                 :     :     :  +- Filter (((i_category#512 IN (Shoes,Sports,Music) AND i_class#510 IN (athletic,pools,country)) OR (i_category#512 IN (Children,Women,Home) AND i_class#510 IN (toddlers,fragrances,blinds/shades))) AND isnotnull(i_item_sk#500))
                                 :     :     :     +- FileScan parquet [i_item_sk#500,i_brand#508,i_class#510,i_category#512] Batched: true, DataFilters: [((i_category#512 IN (Shoes,Sports,Music) AND i_class#510 IN (athletic,pools,country)) OR (i_cate..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [Or(And(In(i_category, [Music,Shoes,Sports]),In(i_class, [athletic,country,pools])),And(In(i_cate..., ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string>
                                 :     :     +- Filter ((isnotnull(ss_item_sk#666) AND isnotnull(ss_sold_date_sk#664)) AND isnotnull(ss_store_sk#671))
                                 :     :        +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_store_sk#671,ss_sales_price#677] Batched: true, DataFilters: [isnotnull(ss_item_sk#666), isnotnull(ss_sold_date_sk#664), isnotnull(ss_store_sk#671)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#150856]
                                 :        +- Project [d_date_sk#598, d_moy#606]
                                 :           +- Filter ((isnotnull(d_year#604) AND (d_year#604 = 2001)) AND isnotnull(d_date_sk#598))
                                 :              +- FileScan parquet [d_date_sk#598,d_year#604,d_moy#606] Batched: true, DataFilters: [isnotnull(d_year#604), (d_year#604 = 2001), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#150860]
                                    +- Filter isnotnull(s_store_sk#326)
                                       +- FileScan parquet [s_store_sk#326,s_store_name#331,s_company_name#343] Batched: true, DataFilters: [isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
