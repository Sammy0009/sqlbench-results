AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(15) Sort [c_last_name#571 ASC NULLS FIRST, c_first_name#570 ASC NULLS FIRST, s_store_name#331 ASC NULLS FIRST], true, 0
   +- AQEShuffleRead coalesced
      +- ShuffleQueryStage 9
         +- Exchange rangepartitioning(c_last_name#571 ASC NULLS FIRST, c_first_name#570 ASC NULLS FIRST, s_store_name#331 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#74324]
            +- *(14) Filter (isnotnull(paid#7613) AND (cast(paid#7613 as decimal(33,8)) > cast(Subquery subquery#7614, [id=#73150] as decimal(33,8))))
               :  +- Subquery subquery#7614, [id=#73150]
               :     +- AdaptiveSparkPlan isFinalPlan=true
                     +- == Final Plan ==
                        *(14) HashAggregate(keys=[], functions=[avg(netpaid#7615)], output=[(0.05 * avg(netpaid))#7619])
                        +- ShuffleQueryStage 13
                           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#74877]
                              +- *(13) HashAggregate(keys=[], functions=[partial_avg(netpaid#7615)], output=[sum#7637, count#7638L])
                                 +- *(13) HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[sum(UnscaledValue(ss_net_profit#686))], output=[netpaid#7615])
                                    +- AQEShuffleRead coalesced
                                       +- ShuffleQueryStage 12
                                          +- Exchange hashpartitioning(c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, 200), ENSURE_REQUIREMENTS, [id=#74824]
                                             +- *(12) HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[partial_sum(UnscaledValue(ss_net_profit#686))], output=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, sum#7640L])
                                                +- *(12) Project [ss_net_profit#686, s_store_name#331, s_state#350, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_first_name#570, c_last_name#571, ca_state#222]
                                                   +- *(12) BroadcastHashJoin [c_current_addr_sk#566, s_zip#351], [ca_address_sk#214, ca_zip#223], Inner, BuildRight, NOT (c_birth_country#576 = upper(ca_country#224)), false
                                                      :- *(12) Project [ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_current_addr_sk#566, c_first_name#570, c_last_name#571, c_birth_country#576]
                                                      :  +- *(12) SortMergeJoin [ss_customer_sk#667], [c_customer_sk#562], Inner
                                                      :     :- *(10) Sort [ss_customer_sk#667 ASC NULLS FIRST], false, 0
                                                      :     :  +- AQEShuffleRead coalesced
                                                      :     :     +- ShuffleQueryStage 11
                                                      :     :        +- Exchange hashpartitioning(ss_customer_sk#667, 200), ENSURE_REQUIREMENTS, [id=#74681]
                                                      :     :           +- *(9) Project [ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520]
                                                      :     :              +- *(9) BroadcastHashJoin [ss_item_sk#666], [i_item_sk#500], Inner, BuildRight, false
                                                      :     :                 :- *(9) Project [ss_item_sk#666, ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351]
                                                      :     :                 :  +- *(9) BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                                                      :     :                 :     :- *(9) Project [ss_item_sk#666, ss_customer_sk#667, ss_store_sk#671, ss_net_profit#686]
                                                      :     :                 :     :  +- *(9) SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666], [sr_ticket_number#719L, sr_item_sk#712], Inner
                                                      :     :                 :     :     :- *(7) Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST], false, 0
                                                      :     :                 :     :     :  +- ShuffleQueryStage 1
                                                      :     :                 :     :     :     +- ReusedExchange [ss_item_sk#666, ss_customer_sk#667, ss_store_sk#671, ss_ticket_number#673L, ss_net_profit#686], Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#73350]
                                                      :     :                 :     :     +- *(8) Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
                                                      :     :                 :     :        +- ShuffleQueryStage 3
                                                      :     :                 :     :           +- ReusedExchange [sr_item_sk#712, sr_ticket_number#719L], Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#73367]
                                                      :     :                 :     +- BroadcastQueryStage 5
                                                      :     :                 :        +- ReusedExchange [s_store_sk#326, s_store_name#331, s_state#350, s_zip#351], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#73388]
                                                      :     :                 +- BroadcastQueryStage 6
                                                      :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#74454]
                                                      :     :                       +- *(4) Filter isnotnull(i_item_sk#500)
                                                      :     :                          +- *(4) ColumnarToRow
                                                      :     :                             +- FileScan parquet [i_item_sk#500,i_current_price#505,i_size#515,i_color#517,i_units#518,i_manager_id#520] Batched: true, DataFilters: [isnotnull(i_item_sk#500)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                                      :     +- *(11) Sort [c_customer_sk#562 ASC NULLS FIRST], false, 0
                                                      :        +- AQEShuffleRead coalesced
                                                      :           +- ShuffleQueryStage 8
                                                      :              +- ReusedExchange [c_customer_sk#562, c_current_addr_sk#566, c_first_name#570, c_last_name#571, c_birth_country#576], Exchange hashpartitioning(c_customer_sk#562, 200), ENSURE_REQUIREMENTS, [id=#73426]
                                                      +- BroadcastQueryStage 10
                                                         +- ReusedExchange [ca_address_sk#214, ca_state#222, ca_zip#223, ca_country#224], BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, false], input[2, string, false]),false), [id=#73445]
                     +- == Initial Plan ==
                        HashAggregate(keys=[], functions=[avg(netpaid#7615)], output=[(0.05 * avg(netpaid))#7619])
                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#73148]
                           +- HashAggregate(keys=[], functions=[partial_avg(netpaid#7615)], output=[sum#7637, count#7638L])
                              +- HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[sum(UnscaledValue(ss_net_profit#686))], output=[netpaid#7615])
                                 +- Exchange hashpartitioning(c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, 200), ENSURE_REQUIREMENTS, [id=#73144]
                                    +- HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[partial_sum(UnscaledValue(ss_net_profit#686))], output=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, sum#7640L])
                                       +- Project [ss_net_profit#686, s_store_name#331, s_state#350, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_first_name#570, c_last_name#571, ca_state#222]
                                          +- BroadcastHashJoin [c_current_addr_sk#566, s_zip#351], [ca_address_sk#214, ca_zip#223], Inner, BuildRight, NOT (c_birth_country#576 = upper(ca_country#224)), false
                                             :- Project [ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_current_addr_sk#566, c_first_name#570, c_last_name#571, c_birth_country#576]
                                             :  +- SortMergeJoin [ss_customer_sk#667], [c_customer_sk#562], Inner
                                             :     :- Sort [ss_customer_sk#667 ASC NULLS FIRST], false, 0
                                             :     :  +- Exchange hashpartitioning(ss_customer_sk#667, 200), ENSURE_REQUIREMENTS, [id=#73132]
                                             :     :     +- Project [ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520]
                                             :     :        +- BroadcastHashJoin [ss_item_sk#666], [i_item_sk#500], Inner, BuildRight, false
                                             :     :           :- Project [ss_item_sk#666, ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351]
                                             :     :           :  +- BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                                             :     :           :     :- Project [ss_item_sk#666, ss_customer_sk#667, ss_store_sk#671, ss_net_profit#686]
                                             :     :           :     :  +- SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666], [sr_ticket_number#719L, sr_item_sk#712], Inner
                                             :     :           :     :     :- Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST], false, 0
                                             :     :           :     :     :  +- Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#73116]
                                             :     :           :     :     :     +- Filter (((isnotnull(ss_ticket_number#673L) AND isnotnull(ss_item_sk#666)) AND isnotnull(ss_store_sk#671)) AND isnotnull(ss_customer_sk#667))
                                             :     :           :     :     :        +- FileScan parquet [ss_item_sk#666,ss_customer_sk#667,ss_store_sk#671,ss_ticket_number#673L,ss_net_profit#686] Batched: true, DataFilters: [isnotnull(ss_ticket_number#673L), isnotnull(ss_item_sk#666), isnotnull(ss_store_sk#671), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_profit:de...
                                             :     :           :     :     +- Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
                                             :     :           :     :        +- Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#73117]
                                             :     :           :     :           +- Filter (isnotnull(sr_ticket_number#719L) AND isnotnull(sr_item_sk#712))
                                             :     :           :     :              +- FileScan parquet [sr_item_sk#712,sr_ticket_number#719L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#719L), isnotnull(sr_item_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
                                             :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#73123]
                                             :     :           :        +- Project [s_store_sk#326, s_store_name#331, s_state#350, s_zip#351]
                                             :     :           :           +- Filter (((isnotnull(s_market_id#336) AND (s_market_id#336 = 5)) AND isnotnull(s_store_sk#326)) AND isnotnull(s_zip#351))
                                             :     :           :              +- FileScan parquet [s_store_sk#326,s_store_name#331,s_market_id#336,s_state#350,s_zip#351] Batched: true, DataFilters: [isnotnull(s_market_id#336), (s_market_id#336 = 5), isnotnull(s_store_sk#326), isnotnull(s_zip#351)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,5), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                                             :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#73127]
                                             :     :              +- Filter isnotnull(i_item_sk#500)
                                             :     :                 +- FileScan parquet [i_item_sk#500,i_current_price#505,i_size#515,i_color#517,i_units#518,i_manager_id#520] Batched: true, DataFilters: [isnotnull(i_item_sk#500)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                             :     +- Sort [c_customer_sk#562 ASC NULLS FIRST], false, 0
                                             :        +- Exchange hashpartitioning(c_customer_sk#562, 200), ENSURE_REQUIREMENTS, [id=#73133]
                                             :           +- Filter ((isnotnull(c_customer_sk#562) AND isnotnull(c_current_addr_sk#566)) AND isnotnull(c_birth_country#576))
                                             :              +- FileScan parquet [c_customer_sk#562,c_current_addr_sk#566,c_first_name#570,c_last_name#571,c_birth_country#576] Batched: true, DataFilters: [isnotnull(c_customer_sk#562), isnotnull(c_current_addr_sk#566), isnotnull(c_birth_country#576)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
                                             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, false], input[2, string, false]),false), [id=#73139]
                                                +- Filter ((isnotnull(ca_address_sk#214) AND isnotnull(ca_country#224)) AND isnotnull(ca_zip#223))
                                                   +- FileScan parquet [ca_address_sk#214,ca_state#222,ca_zip#223,ca_country#224] Batched: true, DataFilters: [isnotnull(ca_address_sk#214), isnotnull(ca_country#224), isnotnull(ca_zip#223)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
               +- *(14) HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331], functions=[sum(netpaid#7615)], output=[c_last_name#571, c_first_name#570, s_store_name#331, paid#7613])
                  +- AQEShuffleRead coalesced
                     +- ShuffleQueryStage 8
                        +- Exchange hashpartitioning(c_last_name#571, c_first_name#570, s_store_name#331, 200), ENSURE_REQUIREMENTS, [id=#74284]
                           +- *(13) HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331], functions=[partial_sum(netpaid#7615)], output=[c_last_name#571, c_first_name#570, s_store_name#331, sum#7631, isEmpty#7632])
                              +- *(13) HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[sum(UnscaledValue(ss_net_profit#686))], output=[c_last_name#571, c_first_name#570, s_store_name#331, netpaid#7615])
                                 +- AQEShuffleRead coalesced
                                    +- ShuffleQueryStage 7
                                       +- Exchange hashpartitioning(c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, 200), ENSURE_REQUIREMENTS, [id=#74209]
                                          +- *(12) HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[partial_sum(UnscaledValue(ss_net_profit#686))], output=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, sum#7634L])
                                             +- *(12) Project [ss_net_profit#686, s_store_name#331, s_state#350, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_first_name#570, c_last_name#571, ca_state#222]
                                                +- *(12) BroadcastHashJoin [c_current_addr_sk#566, s_zip#351], [ca_address_sk#214, ca_zip#223], Inner, BuildRight, NOT (c_birth_country#576 = upper(ca_country#224)), false
                                                   :- *(12) Project [ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_current_addr_sk#566, c_first_name#570, c_last_name#571, c_birth_country#576]
                                                   :  +- *(12) SortMergeJoin [ss_customer_sk#667], [c_customer_sk#562], Inner
                                                   :     :- *(10) Sort [ss_customer_sk#667 ASC NULLS FIRST], false, 0
                                                   :     :  +- AQEShuffleRead coalesced
                                                   :     :     +- ShuffleQueryStage 6
                                                   :     :        +- Exchange hashpartitioning(ss_customer_sk#667, 200), ENSURE_REQUIREMENTS, [id=#74061]
                                                   :     :           +- *(9) Project [ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520]
                                                   :     :              +- *(9) BroadcastHashJoin [ss_item_sk#666], [i_item_sk#500], Inner, BuildRight, false
                                                   :     :                 :- *(9) Project [ss_item_sk#666, ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351]
                                                   :     :                 :  +- *(9) BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                                                   :     :                 :     :- *(9) Project [ss_item_sk#666, ss_customer_sk#667, ss_store_sk#671, ss_net_profit#686]
                                                   :     :                 :     :  +- *(9) SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666], [sr_ticket_number#719L, sr_item_sk#712], Inner
                                                   :     :                 :     :     :- *(7) Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST], false, 0
                                                   :     :                 :     :     :  +- ShuffleQueryStage 0
                                                   :     :                 :     :     :     +- Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#73350]
                                                   :     :                 :     :     :        +- *(1) Filter (((isnotnull(ss_ticket_number#673L) AND isnotnull(ss_item_sk#666)) AND isnotnull(ss_store_sk#671)) AND isnotnull(ss_customer_sk#667))
                                                   :     :                 :     :     :           +- *(1) ColumnarToRow
                                                   :     :                 :     :     :              +- FileScan parquet [ss_item_sk#666,ss_customer_sk#667,ss_store_sk#671,ss_ticket_number#673L,ss_net_profit#686] Batched: true, DataFilters: [isnotnull(ss_ticket_number#673L), isnotnull(ss_item_sk#666), isnotnull(ss_store_sk#671), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_profit:de...
                                                   :     :                 :     :     +- *(8) Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
                                                   :     :                 :     :        +- ShuffleQueryStage 1
                                                   :     :                 :     :           +- Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#73367]
                                                   :     :                 :     :              +- *(2) Filter (isnotnull(sr_ticket_number#719L) AND isnotnull(sr_item_sk#712))
                                                   :     :                 :     :                 +- *(2) ColumnarToRow
                                                   :     :                 :     :                    +- FileScan parquet [sr_item_sk#712,sr_ticket_number#719L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#719L), isnotnull(sr_item_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
                                                   :     :                 :     +- BroadcastQueryStage 2
                                                   :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#73388]
                                                   :     :                 :           +- *(3) Project [s_store_sk#326, s_store_name#331, s_state#350, s_zip#351]
                                                   :     :                 :              +- *(3) Filter (((isnotnull(s_market_id#336) AND (s_market_id#336 = 5)) AND isnotnull(s_store_sk#326)) AND isnotnull(s_zip#351))
                                                   :     :                 :                 +- *(3) ColumnarToRow
                                                   :     :                 :                    +- FileScan parquet [s_store_sk#326,s_store_name#331,s_market_id#336,s_state#350,s_zip#351] Batched: true, DataFilters: [isnotnull(s_market_id#336), (s_market_id#336 = 5), isnotnull(s_store_sk#326), isnotnull(s_zip#351)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,5), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                                                   :     :                 +- BroadcastQueryStage 3
                                                   :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#73407]
                                                   :     :                       +- *(4) Filter ((isnotnull(i_color#517) AND (i_color#517 = seashell)) AND isnotnull(i_item_sk#500))
                                                   :     :                          +- *(4) ColumnarToRow
                                                   :     :                             +- FileScan parquet [i_item_sk#500,i_current_price#505,i_size#515,i_color#517,i_units#518,i_manager_id#520] Batched: true, DataFilters: [isnotnull(i_color#517), (i_color#517 = seashell), isnotnull(i_item_sk#500)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_color), EqualTo(i_color,seashell), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                                   :     +- *(11) Sort [c_customer_sk#562 ASC NULLS FIRST], false, 0
                                                   :        +- AQEShuffleRead coalesced
                                                   :           +- ShuffleQueryStage 4
                                                   :              +- Exchange hashpartitioning(c_customer_sk#562, 200), ENSURE_REQUIREMENTS, [id=#73426]
                                                   :                 +- *(5) Filter ((isnotnull(c_customer_sk#562) AND isnotnull(c_current_addr_sk#566)) AND isnotnull(c_birth_country#576))
                                                   :                    +- *(5) ColumnarToRow
                                                   :                       +- FileScan parquet [c_customer_sk#562,c_current_addr_sk#566,c_first_name#570,c_last_name#571,c_birth_country#576] Batched: true, DataFilters: [isnotnull(c_customer_sk#562), isnotnull(c_current_addr_sk#566), isnotnull(c_birth_country#576)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
                                                   +- BroadcastQueryStage 5
                                                      +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, false], input[2, string, false]),false), [id=#73445]
                                                         +- *(6) Filter ((isnotnull(ca_address_sk#214) AND isnotnull(ca_country#224)) AND isnotnull(ca_zip#223))
                                                            +- *(6) ColumnarToRow
                                                               +- FileScan parquet [ca_address_sk#214,ca_state#222,ca_zip#223,ca_country#224] Batched: true, DataFilters: [isnotnull(ca_address_sk#214), isnotnull(ca_country#224), isnotnull(ca_zip#223)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
+- == Initial Plan ==
   Sort [c_last_name#571 ASC NULLS FIRST, c_first_name#570 ASC NULLS FIRST, s_store_name#331 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(c_last_name#571 ASC NULLS FIRST, c_first_name#570 ASC NULLS FIRST, s_store_name#331 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#73207]
      +- Filter (isnotnull(paid#7613) AND (cast(paid#7613 as decimal(33,8)) > cast(Subquery subquery#7614, [id=#73150] as decimal(33,8))))
         :  +- Subquery subquery#7614, [id=#73150]
         :     +- AdaptiveSparkPlan isFinalPlan=true
               +- == Final Plan ==
                  *(14) HashAggregate(keys=[], functions=[avg(netpaid#7615)], output=[(0.05 * avg(netpaid))#7619])
                  +- ShuffleQueryStage 13
                     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#74877]
                        +- *(13) HashAggregate(keys=[], functions=[partial_avg(netpaid#7615)], output=[sum#7637, count#7638L])
                           +- *(13) HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[sum(UnscaledValue(ss_net_profit#686))], output=[netpaid#7615])
                              +- AQEShuffleRead coalesced
                                 +- ShuffleQueryStage 12
                                    +- Exchange hashpartitioning(c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, 200), ENSURE_REQUIREMENTS, [id=#74824]
                                       +- *(12) HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[partial_sum(UnscaledValue(ss_net_profit#686))], output=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, sum#7640L])
                                          +- *(12) Project [ss_net_profit#686, s_store_name#331, s_state#350, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_first_name#570, c_last_name#571, ca_state#222]
                                             +- *(12) BroadcastHashJoin [c_current_addr_sk#566, s_zip#351], [ca_address_sk#214, ca_zip#223], Inner, BuildRight, NOT (c_birth_country#576 = upper(ca_country#224)), false
                                                :- *(12) Project [ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_current_addr_sk#566, c_first_name#570, c_last_name#571, c_birth_country#576]
                                                :  +- *(12) SortMergeJoin [ss_customer_sk#667], [c_customer_sk#562], Inner
                                                :     :- *(10) Sort [ss_customer_sk#667 ASC NULLS FIRST], false, 0
                                                :     :  +- AQEShuffleRead coalesced
                                                :     :     +- ShuffleQueryStage 11
                                                :     :        +- Exchange hashpartitioning(ss_customer_sk#667, 200), ENSURE_REQUIREMENTS, [id=#74681]
                                                :     :           +- *(9) Project [ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520]
                                                :     :              +- *(9) BroadcastHashJoin [ss_item_sk#666], [i_item_sk#500], Inner, BuildRight, false
                                                :     :                 :- *(9) Project [ss_item_sk#666, ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351]
                                                :     :                 :  +- *(9) BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                                                :     :                 :     :- *(9) Project [ss_item_sk#666, ss_customer_sk#667, ss_store_sk#671, ss_net_profit#686]
                                                :     :                 :     :  +- *(9) SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666], [sr_ticket_number#719L, sr_item_sk#712], Inner
                                                :     :                 :     :     :- *(7) Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST], false, 0
                                                :     :                 :     :     :  +- ShuffleQueryStage 1
                                                :     :                 :     :     :     +- ReusedExchange [ss_item_sk#666, ss_customer_sk#667, ss_store_sk#671, ss_ticket_number#673L, ss_net_profit#686], Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#73350]
                                                :     :                 :     :     +- *(8) Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
                                                :     :                 :     :        +- ShuffleQueryStage 3
                                                :     :                 :     :           +- ReusedExchange [sr_item_sk#712, sr_ticket_number#719L], Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#73367]
                                                :     :                 :     +- BroadcastQueryStage 5
                                                :     :                 :        +- ReusedExchange [s_store_sk#326, s_store_name#331, s_state#350, s_zip#351], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#73388]
                                                :     :                 +- BroadcastQueryStage 6
                                                :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#74454]
                                                :     :                       +- *(4) Filter isnotnull(i_item_sk#500)
                                                :     :                          +- *(4) ColumnarToRow
                                                :     :                             +- FileScan parquet [i_item_sk#500,i_current_price#505,i_size#515,i_color#517,i_units#518,i_manager_id#520] Batched: true, DataFilters: [isnotnull(i_item_sk#500)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                                :     +- *(11) Sort [c_customer_sk#562 ASC NULLS FIRST], false, 0
                                                :        +- AQEShuffleRead coalesced
                                                :           +- ShuffleQueryStage 8
                                                :              +- ReusedExchange [c_customer_sk#562, c_current_addr_sk#566, c_first_name#570, c_last_name#571, c_birth_country#576], Exchange hashpartitioning(c_customer_sk#562, 200), ENSURE_REQUIREMENTS, [id=#73426]
                                                +- BroadcastQueryStage 10
                                                   +- ReusedExchange [ca_address_sk#214, ca_state#222, ca_zip#223, ca_country#224], BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, false], input[2, string, false]),false), [id=#73445]
               +- == Initial Plan ==
                  HashAggregate(keys=[], functions=[avg(netpaid#7615)], output=[(0.05 * avg(netpaid))#7619])
                  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#73148]
                     +- HashAggregate(keys=[], functions=[partial_avg(netpaid#7615)], output=[sum#7637, count#7638L])
                        +- HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[sum(UnscaledValue(ss_net_profit#686))], output=[netpaid#7615])
                           +- Exchange hashpartitioning(c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, 200), ENSURE_REQUIREMENTS, [id=#73144]
                              +- HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[partial_sum(UnscaledValue(ss_net_profit#686))], output=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, sum#7640L])
                                 +- Project [ss_net_profit#686, s_store_name#331, s_state#350, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_first_name#570, c_last_name#571, ca_state#222]
                                    +- BroadcastHashJoin [c_current_addr_sk#566, s_zip#351], [ca_address_sk#214, ca_zip#223], Inner, BuildRight, NOT (c_birth_country#576 = upper(ca_country#224)), false
                                       :- Project [ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_current_addr_sk#566, c_first_name#570, c_last_name#571, c_birth_country#576]
                                       :  +- SortMergeJoin [ss_customer_sk#667], [c_customer_sk#562], Inner
                                       :     :- Sort [ss_customer_sk#667 ASC NULLS FIRST], false, 0
                                       :     :  +- Exchange hashpartitioning(ss_customer_sk#667, 200), ENSURE_REQUIREMENTS, [id=#73132]
                                       :     :     +- Project [ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520]
                                       :     :        +- BroadcastHashJoin [ss_item_sk#666], [i_item_sk#500], Inner, BuildRight, false
                                       :     :           :- Project [ss_item_sk#666, ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351]
                                       :     :           :  +- BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                                       :     :           :     :- Project [ss_item_sk#666, ss_customer_sk#667, ss_store_sk#671, ss_net_profit#686]
                                       :     :           :     :  +- SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666], [sr_ticket_number#719L, sr_item_sk#712], Inner
                                       :     :           :     :     :- Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST], false, 0
                                       :     :           :     :     :  +- Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#73116]
                                       :     :           :     :     :     +- Filter (((isnotnull(ss_ticket_number#673L) AND isnotnull(ss_item_sk#666)) AND isnotnull(ss_store_sk#671)) AND isnotnull(ss_customer_sk#667))
                                       :     :           :     :     :        +- FileScan parquet [ss_item_sk#666,ss_customer_sk#667,ss_store_sk#671,ss_ticket_number#673L,ss_net_profit#686] Batched: true, DataFilters: [isnotnull(ss_ticket_number#673L), isnotnull(ss_item_sk#666), isnotnull(ss_store_sk#671), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_profit:de...
                                       :     :           :     :     +- Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
                                       :     :           :     :        +- Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#73117]
                                       :     :           :     :           +- Filter (isnotnull(sr_ticket_number#719L) AND isnotnull(sr_item_sk#712))
                                       :     :           :     :              +- FileScan parquet [sr_item_sk#712,sr_ticket_number#719L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#719L), isnotnull(sr_item_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
                                       :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#73123]
                                       :     :           :        +- Project [s_store_sk#326, s_store_name#331, s_state#350, s_zip#351]
                                       :     :           :           +- Filter (((isnotnull(s_market_id#336) AND (s_market_id#336 = 5)) AND isnotnull(s_store_sk#326)) AND isnotnull(s_zip#351))
                                       :     :           :              +- FileScan parquet [s_store_sk#326,s_store_name#331,s_market_id#336,s_state#350,s_zip#351] Batched: true, DataFilters: [isnotnull(s_market_id#336), (s_market_id#336 = 5), isnotnull(s_store_sk#326), isnotnull(s_zip#351)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,5), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                                       :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#73127]
                                       :     :              +- Filter isnotnull(i_item_sk#500)
                                       :     :                 +- FileScan parquet [i_item_sk#500,i_current_price#505,i_size#515,i_color#517,i_units#518,i_manager_id#520] Batched: true, DataFilters: [isnotnull(i_item_sk#500)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                       :     +- Sort [c_customer_sk#562 ASC NULLS FIRST], false, 0
                                       :        +- Exchange hashpartitioning(c_customer_sk#562, 200), ENSURE_REQUIREMENTS, [id=#73133]
                                       :           +- Filter ((isnotnull(c_customer_sk#562) AND isnotnull(c_current_addr_sk#566)) AND isnotnull(c_birth_country#576))
                                       :              +- FileScan parquet [c_customer_sk#562,c_current_addr_sk#566,c_first_name#570,c_last_name#571,c_birth_country#576] Batched: true, DataFilters: [isnotnull(c_customer_sk#562), isnotnull(c_current_addr_sk#566), isnotnull(c_birth_country#576)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
                                       +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, false], input[2, string, false]),false), [id=#73139]
                                          +- Filter ((isnotnull(ca_address_sk#214) AND isnotnull(ca_country#224)) AND isnotnull(ca_zip#223))
                                             +- FileScan parquet [ca_address_sk#214,ca_state#222,ca_zip#223,ca_country#224] Batched: true, DataFilters: [isnotnull(ca_address_sk#214), isnotnull(ca_country#224), isnotnull(ca_zip#223)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
         +- HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331], functions=[sum(netpaid#7615)], output=[c_last_name#571, c_first_name#570, s_store_name#331, paid#7613])
            +- Exchange hashpartitioning(c_last_name#571, c_first_name#570, s_store_name#331, 200), ENSURE_REQUIREMENTS, [id=#73203]
               +- HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331], functions=[partial_sum(netpaid#7615)], output=[c_last_name#571, c_first_name#570, s_store_name#331, sum#7631, isEmpty#7632])
                  +- HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[sum(UnscaledValue(ss_net_profit#686))], output=[c_last_name#571, c_first_name#570, s_store_name#331, netpaid#7615])
                     +- Exchange hashpartitioning(c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, 200), ENSURE_REQUIREMENTS, [id=#73199]
                        +- HashAggregate(keys=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515], functions=[partial_sum(UnscaledValue(ss_net_profit#686))], output=[c_last_name#571, c_first_name#570, s_store_name#331, ca_state#222, s_state#350, i_color#517, i_current_price#505, i_manager_id#520, i_units#518, i_size#515, sum#7634L])
                           +- Project [ss_net_profit#686, s_store_name#331, s_state#350, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_first_name#570, c_last_name#571, ca_state#222]
                              +- BroadcastHashJoin [c_current_addr_sk#566, s_zip#351], [ca_address_sk#214, ca_zip#223], Inner, BuildRight, NOT (c_birth_country#576 = upper(ca_country#224)), false
                                 :- Project [ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520, c_current_addr_sk#566, c_first_name#570, c_last_name#571, c_birth_country#576]
                                 :  +- SortMergeJoin [ss_customer_sk#667], [c_customer_sk#562], Inner
                                 :     :- Sort [ss_customer_sk#667 ASC NULLS FIRST], false, 0
                                 :     :  +- Exchange hashpartitioning(ss_customer_sk#667, 200), ENSURE_REQUIREMENTS, [id=#73187]
                                 :     :     +- Project [ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351, i_current_price#505, i_size#515, i_color#517, i_units#518, i_manager_id#520]
                                 :     :        +- BroadcastHashJoin [ss_item_sk#666], [i_item_sk#500], Inner, BuildRight, false
                                 :     :           :- Project [ss_item_sk#666, ss_customer_sk#667, ss_net_profit#686, s_store_name#331, s_state#350, s_zip#351]
                                 :     :           :  +- BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                                 :     :           :     :- Project [ss_item_sk#666, ss_customer_sk#667, ss_store_sk#671, ss_net_profit#686]
                                 :     :           :     :  +- SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666], [sr_ticket_number#719L, sr_item_sk#712], Inner
                                 :     :           :     :     :- Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST], false, 0
                                 :     :           :     :     :  +- Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#73171]
                                 :     :           :     :     :     +- Filter (((isnotnull(ss_ticket_number#673L) AND isnotnull(ss_item_sk#666)) AND isnotnull(ss_store_sk#671)) AND isnotnull(ss_customer_sk#667))
                                 :     :           :     :     :        +- FileScan parquet [ss_item_sk#666,ss_customer_sk#667,ss_store_sk#671,ss_ticket_number#673L,ss_net_profit#686] Batched: true, DataFilters: [isnotnull(ss_ticket_number#673L), isnotnull(ss_item_sk#666), isnotnull(ss_store_sk#671), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_profit:de...
                                 :     :           :     :     +- Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
                                 :     :           :     :        +- Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#73172]
                                 :     :           :     :           +- Filter (isnotnull(sr_ticket_number#719L) AND isnotnull(sr_item_sk#712))
                                 :     :           :     :              +- FileScan parquet [sr_item_sk#712,sr_ticket_number#719L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#719L), isnotnull(sr_item_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
                                 :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#73178]
                                 :     :           :        +- Project [s_store_sk#326, s_store_name#331, s_state#350, s_zip#351]
                                 :     :           :           +- Filter (((isnotnull(s_market_id#336) AND (s_market_id#336 = 5)) AND isnotnull(s_store_sk#326)) AND isnotnull(s_zip#351))
                                 :     :           :              +- FileScan parquet [s_store_sk#326,s_store_name#331,s_market_id#336,s_state#350,s_zip#351] Batched: true, DataFilters: [isnotnull(s_market_id#336), (s_market_id#336 = 5), isnotnull(s_store_sk#326), isnotnull(s_zip#351)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,5), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                                 :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#73182]
                                 :     :              +- Filter ((isnotnull(i_color#517) AND (i_color#517 = seashell)) AND isnotnull(i_item_sk#500))
                                 :     :                 +- FileScan parquet [i_item_sk#500,i_current_price#505,i_size#515,i_color#517,i_units#518,i_manager_id#520] Batched: true, DataFilters: [isnotnull(i_color#517), (i_color#517 = seashell), isnotnull(i_item_sk#500)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_color), EqualTo(i_color,seashell), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                 :     +- Sort [c_customer_sk#562 ASC NULLS FIRST], false, 0
                                 :        +- Exchange hashpartitioning(c_customer_sk#562, 200), ENSURE_REQUIREMENTS, [id=#73188]
                                 :           +- Filter ((isnotnull(c_customer_sk#562) AND isnotnull(c_current_addr_sk#566)) AND isnotnull(c_birth_country#576))
                                 :              +- FileScan parquet [c_customer_sk#562,c_current_addr_sk#566,c_first_name#570,c_last_name#571,c_birth_country#576] Batched: true, DataFilters: [isnotnull(c_customer_sk#562), isnotnull(c_current_addr_sk#566), isnotnull(c_birth_country#576)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
                                 +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, false], input[2, string, false]),false), [id=#73194]
                                    +- Filter ((isnotnull(ca_address_sk#214) AND isnotnull(ca_country#224)) AND isnotnull(ca_zip#223))
                                       +- FileScan parquet [ca_address_sk#214,ca_state#222,ca_zip#223,ca_country#224] Batched: true, DataFilters: [isnotnull(ca_address_sk#214), isnotnull(ca_country#224), isnotnull(ca_zip#223)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
