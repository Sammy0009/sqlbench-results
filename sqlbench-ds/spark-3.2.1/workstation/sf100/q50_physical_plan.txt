AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#331 ASC NULLS FIRST,s_company_id#342 ASC NULLS FIRST,s_street_number#344 ASC NULLS FIRST,s_street_name#345 ASC NULLS FIRST,s_street_type#346 ASC NULLS FIRST,s_suite_number#347 ASC NULLS FIRST,s_city#348 ASC NULLS FIRST,s_county#349 ASC NULLS FIRST,s_state#350 ASC NULLS FIRST,s_zip#351 ASC NULLS FIRST], output=[s_store_name#331,s_company_id#342,s_street_number#344,s_street_name#345,s_street_type#346,s_suite_number#347,s_city#348,s_county#349,s_state#350,s_zip#351,30 days#10605L,31-60 days#10606L,61-90 days#10607L,91-120 days#10608L,>120 days#10609L])
   +- *(9) HashAggregate(keys=[s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351], functions=[sum(CASE WHEN ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 30) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 60) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 90) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351, 30 days#10605L, 31-60 days#10606L, 61-90 days#10607L, 91-120 days#10608L, >120 days#10609L])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 5
            +- Exchange hashpartitioning(s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351, 200), ENSURE_REQUIREMENTS, [id=#84000]
               +- *(8) HashAggregate(keys=[s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351], functions=[partial_sum(CASE WHEN ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 30) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 60) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 90) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351, sum#10663L, sum#10664L, sum#10665L, sum#10666L, sum#10667L])
                  +- *(8) Project [ss_sold_date_sk#664, sr_returned_date_sk#710, s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351]
                     +- *(8) BroadcastHashJoin [sr_returned_date_sk#710], [d_date_sk#10610], Inner, BuildRight, false
                        :- *(8) Project [ss_sold_date_sk#664, sr_returned_date_sk#710, s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351]
                        :  +- *(8) BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
                        :     :- *(8) Project [ss_sold_date_sk#664, sr_returned_date_sk#710, s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351]
                        :     :  +- *(8) BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                        :     :     :- *(8) Project [ss_sold_date_sk#664, ss_store_sk#671, sr_returned_date_sk#710]
                        :     :     :  +- *(8) SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666, ss_customer_sk#667], [sr_ticket_number#719L, sr_item_sk#712, sr_customer_sk#713], Inner
                        :     :     :     :- *(6) Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST, ss_customer_sk#667 ASC NULLS FIRST], false, 0
                        :     :     :     :  +- ShuffleQueryStage 0
                        :     :     :     :     +- Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, ss_customer_sk#667, 200), ENSURE_REQUIREMENTS, [id=#83587]
                        :     :     :     :        +- *(1) Filter ((((isnotnull(ss_ticket_number#673L) AND isnotnull(ss_item_sk#666)) AND isnotnull(ss_customer_sk#667)) AND isnotnull(ss_store_sk#671)) AND isnotnull(ss_sold_date_sk#664))
                        :     :     :     :           +- *(1) ColumnarToRow
                        :     :     :     :              +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_customer_sk#667,ss_store_sk#671,ss_ticket_number#673L] Batched: true, DataFilters: [isnotnull(ss_ticket_number#673L), isnotnull(ss_item_sk#666), isnotnull(ss_customer_sk#667), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_stor..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:big...
                        :     :     :     +- *(7) Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST, sr_customer_sk#713 ASC NULLS FIRST], false, 0
                        :     :     :        +- ShuffleQueryStage 1
                        :     :     :           +- Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, sr_customer_sk#713, 200), ENSURE_REQUIREMENTS, [id=#83604]
                        :     :     :              +- *(2) Filter (((isnotnull(sr_ticket_number#719L) AND isnotnull(sr_item_sk#712)) AND isnotnull(sr_customer_sk#713)) AND isnotnull(sr_returned_date_sk#710))
                        :     :     :                 +- *(2) ColumnarToRow
                        :     :     :                    +- FileScan parquet [sr_returned_date_sk#710,sr_item_sk#712,sr_customer_sk#713,sr_ticket_number#719L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#719L), isnotnull(sr_item_sk#712), isnotnull(sr_customer_sk#713), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk), IsNotNull(sr_customer_sk), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint>
                        :     :     +- BroadcastQueryStage 2
                        :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#83623]
                        :     :           +- *(3) Filter isnotnull(s_store_sk#326)
                        :     :              +- *(3) ColumnarToRow
                        :     :                 +- FileScan parquet [s_store_sk#326,s_store_name#331,s_company_id#342,s_street_number#344,s_street_name#345,s_street_type#346,s_suite_number#347,s_city#348,s_county#349,s_state#350,s_zip#351] Batched: true, DataFilters: [isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...
                        :     +- BroadcastQueryStage 3
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#83640]
                        :           +- *(4) Filter isnotnull(d_date_sk#598)
                        :              +- *(4) ColumnarToRow
                        :                 +- FileScan parquet [d_date_sk#598] Batched: true, DataFilters: [isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>
                        +- BroadcastQueryStage 4
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#83659]
                              +- *(5) Project [d_date_sk#10610]
                                 +- *(5) Filter ((((isnotnull(d_year#10616) AND isnotnull(d_moy#10618)) AND (d_year#10616 = 1999)) AND (d_moy#10618 = 10)) AND isnotnull(d_date_sk#10610))
                                    +- *(5) ColumnarToRow
                                       +- FileScan parquet [d_date_sk#10610,d_year#10616,d_moy#10618] Batched: true, DataFilters: [isnotnull(d_year#10616), isnotnull(d_moy#10618), (d_year#10616 = 1999), (d_moy#10618 = 10), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,10), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#331 ASC NULLS FIRST,s_company_id#342 ASC NULLS FIRST,s_street_number#344 ASC NULLS FIRST,s_street_name#345 ASC NULLS FIRST,s_street_type#346 ASC NULLS FIRST,s_suite_number#347 ASC NULLS FIRST,s_city#348 ASC NULLS FIRST,s_county#349 ASC NULLS FIRST,s_state#350 ASC NULLS FIRST,s_zip#351 ASC NULLS FIRST], output=[s_store_name#331,s_company_id#342,s_street_number#344,s_street_name#345,s_street_type#346,s_suite_number#347,s_city#348,s_county#349,s_state#350,s_zip#351,30 days#10605L,31-60 days#10606L,61-90 days#10607L,91-120 days#10608L,>120 days#10609L])
   +- HashAggregate(keys=[s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351], functions=[sum(CASE WHEN ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 30) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 60) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 90) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351, 30 days#10605L, 31-60 days#10606L, 61-90 days#10607L, 91-120 days#10608L, >120 days#10609L])
      +- Exchange hashpartitioning(s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351, 200), ENSURE_REQUIREMENTS, [id=#83529]
         +- HashAggregate(keys=[s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351], functions=[partial_sum(CASE WHEN ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 30) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 60) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 90) AND ((sr_returned_date_sk#710 - ss_sold_date_sk#664) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((sr_returned_date_sk#710 - ss_sold_date_sk#664) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351, sum#10663L, sum#10664L, sum#10665L, sum#10666L, sum#10667L])
            +- Project [ss_sold_date_sk#664, sr_returned_date_sk#710, s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351]
               +- BroadcastHashJoin [sr_returned_date_sk#710], [d_date_sk#10610], Inner, BuildRight, false
                  :- Project [ss_sold_date_sk#664, sr_returned_date_sk#710, s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351]
                  :  +- BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#598], Inner, BuildRight, false
                  :     :- Project [ss_sold_date_sk#664, sr_returned_date_sk#710, s_store_name#331, s_company_id#342, s_street_number#344, s_street_name#345, s_street_type#346, s_suite_number#347, s_city#348, s_county#349, s_state#350, s_zip#351]
                  :     :  +- BroadcastHashJoin [ss_store_sk#671], [s_store_sk#326], Inner, BuildRight, false
                  :     :     :- Project [ss_sold_date_sk#664, ss_store_sk#671, sr_returned_date_sk#710]
                  :     :     :  +- SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666, ss_customer_sk#667], [sr_ticket_number#719L, sr_item_sk#712, sr_customer_sk#713], Inner
                  :     :     :     :- Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST, ss_customer_sk#667 ASC NULLS FIRST], false, 0
                  :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, ss_customer_sk#667, 200), ENSURE_REQUIREMENTS, [id=#83509]
                  :     :     :     :     +- Filter ((((isnotnull(ss_ticket_number#673L) AND isnotnull(ss_item_sk#666)) AND isnotnull(ss_customer_sk#667)) AND isnotnull(ss_store_sk#671)) AND isnotnull(ss_sold_date_sk#664))
                  :     :     :     :        +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_customer_sk#667,ss_store_sk#671,ss_ticket_number#673L] Batched: true, DataFilters: [isnotnull(ss_ticket_number#673L), isnotnull(ss_item_sk#666), isnotnull(ss_customer_sk#667), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_stor..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:big...
                  :     :     :     +- Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST, sr_customer_sk#713 ASC NULLS FIRST], false, 0
                  :     :     :        +- Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, sr_customer_sk#713, 200), ENSURE_REQUIREMENTS, [id=#83510]
                  :     :     :           +- Filter (((isnotnull(sr_ticket_number#719L) AND isnotnull(sr_item_sk#712)) AND isnotnull(sr_customer_sk#713)) AND isnotnull(sr_returned_date_sk#710))
                  :     :     :              +- FileScan parquet [sr_returned_date_sk#710,sr_item_sk#712,sr_customer_sk#713,sr_ticket_number#719L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#719L), isnotnull(sr_item_sk#712), isnotnull(sr_customer_sk#713), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk), IsNotNull(sr_customer_sk), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#83516]
                  :     :        +- Filter isnotnull(s_store_sk#326)
                  :     :           +- FileScan parquet [s_store_sk#326,s_store_name#331,s_company_id#342,s_street_number#344,s_street_name#345,s_street_type#346,s_suite_number#347,s_city#348,s_county#349,s_state#350,s_zip#351] Batched: true, DataFilters: [isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#83520]
                  :        +- Filter isnotnull(d_date_sk#598)
                  :           +- FileScan parquet [d_date_sk#598] Batched: true, DataFilters: [isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#83524]
                     +- Project [d_date_sk#10610]
                        +- Filter ((((isnotnull(d_year#10616) AND isnotnull(d_moy#10618)) AND (d_year#10616 = 1999)) AND (d_moy#10618 = 10)) AND isnotnull(d_date_sk#10610))
                           +- FileScan parquet [d_date_sk#10610,d_year#10616,d_moy#10618] Batched: true, DataFilters: [isnotnull(d_year#10616), isnotnull(d_moy#10618), (d_year#10616 = 1999), (d_moy#10618 = 10), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,10), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
