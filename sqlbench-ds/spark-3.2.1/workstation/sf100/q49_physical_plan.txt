AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#9847 ASC NULLS FIRST,return_rank#9845 ASC NULLS FIRST,currency_rank#9846 ASC NULLS FIRST,item#9842 ASC NULLS FIRST], output=[channel#9847,item#9842,return_ratio#9843,return_rank#9845,currency_rank#9846])
   +- *(26) HashAggregate(keys=[channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846], functions=[], output=[channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 20
            +- Exchange hashpartitioning(channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846, 200), ENSURE_REQUIREMENTS, [id=#83340]
               +- *(25) HashAggregate(keys=[channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846], functions=[], output=[channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846])
                  +- Union
                     :- *(18) Project [web AS channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846]
                     :  +- *(18) Filter ((return_rank#9845 <= 10) OR (currency_rank#9846 <= 10))
                     :     +- Window [rank(currency_ratio#9844) windowspecdefinition(currency_ratio#9844 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#9846], [currency_ratio#9844 ASC NULLS FIRST]
                     :        +- *(17) Sort [currency_ratio#9844 ASC NULLS FIRST], false, 0
                     :           +- Window [rank(return_ratio#9843) windowspecdefinition(return_ratio#9843 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#9845], [return_ratio#9843 ASC NULLS FIRST]
                     :              +- *(16) Sort [return_ratio#9843 ASC NULLS FIRST], false, 0
                     :                 +- ShuffleQueryStage 16
                     :                    +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#82582]
                     :                       +- *(12) HashAggregate(keys=[ws_item_sk#387], functions=[sum(coalesce(wr_return_quantity#466, 0)), sum(coalesce(ws_quantity#402, 0)), sum(coalesce(cast(wr_return_amt#467 as decimal(12,2)), 0.00)), sum(coalesce(cast(ws_net_paid#413 as decimal(12,2)), 0.00))], output=[item#9842, return_ratio#9843, currency_ratio#9844])
                     :                          +- AQEShuffleRead coalesced
                     :                             +- ShuffleQueryStage 13
                     :                                +- Exchange hashpartitioning(ws_item_sk#387, 200), ENSURE_REQUIREMENTS, [id=#81997]
                     :                                   +- *(10) HashAggregate(keys=[ws_item_sk#387], functions=[partial_sum(coalesce(wr_return_quantity#466, 0)), partial_sum(coalesce(ws_quantity#402, 0)), partial_sum(coalesce(cast(wr_return_amt#467 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ws_net_paid#413 as decimal(12,2)), 0.00))], output=[ws_item_sk#387, sum#10023L, sum#10024L, sum#10025, isEmpty#10026, sum#10027, isEmpty#10028])
                     :                                      +- *(10) Project [ws_item_sk#387, ws_quantity#402, ws_net_paid#413, wr_return_quantity#466, wr_return_amt#467]
                     :                                         +- *(10) BroadcastHashJoin [ws_sold_date_sk#384], [d_date_sk#598], Inner, BuildRight, false
                     :                                            :- *(10) Project [ws_sold_date_sk#384, ws_item_sk#387, ws_quantity#402, ws_net_paid#413, wr_return_quantity#466, wr_return_amt#467]
                     :                                            :  +- *(10) BroadcastHashJoin [ws_order_number#401L, ws_item_sk#387], [wr_order_number#465L, wr_item_sk#454], Inner, BuildRight, false
                     :                                            :     :- AQEShuffleRead local
                     :                                            :     :  +- ShuffleQueryStage 0
                     :                                            :     :     +- Exchange hashpartitioning(ws_order_number#401L, ws_item_sk#387, 200), ENSURE_REQUIREMENTS, [id=#80000]
                     :                                            :     :        +- *(1) Project [ws_sold_date_sk#384, ws_item_sk#387, ws_order_number#401L, ws_quantity#402, ws_net_paid#413]
                     :                                            :     :           +- *(1) Filter ((((((((isnotnull(ws_net_profit#417) AND isnotnull(ws_net_paid#413)) AND isnotnull(ws_quantity#402)) AND (ws_net_profit#417 > 1.00)) AND (ws_net_paid#413 > 0.00)) AND (ws_quantity#402 > 0)) AND isnotnull(ws_order_number#401L)) AND isnotnull(ws_item_sk#387)) AND isnotnull(ws_sold_date_sk#384))
                     :                                            :     :              +- *(1) ColumnarToRow
                     :                                            :     :                 +- FileScan parquet [ws_sold_date_sk#384,ws_item_sk#387,ws_order_number#401L,ws_quantity#402,ws_net_paid#413,ws_net_profit#417] Batched: true, DataFilters: [isnotnull(ws_net_profit#417), isnotnull(ws_net_paid#413), isnotnull(ws_quantity#402), (ws_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_net_profit), IsNotNull(ws_net_paid), IsNotNull(ws_quantity), GreaterThan(ws_net_pro..., ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_net_paid:deci...
                     :                                            :     +- BroadcastQueryStage 11
                     :                                            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, false], input[0, int, false]),false), [id=#80946]
                     :                                            :           +- AQEShuffleRead local
                     :                                            :              +- ShuffleQueryStage 1
                     :                                            :                 +- Exchange hashpartitioning(wr_order_number#465L, wr_item_sk#454, 200), ENSURE_REQUIREMENTS, [id=#80019]
                     :                                            :                    +- *(2) Filter (((isnotnull(wr_return_amt#467) AND (wr_return_amt#467 > 10000.00)) AND isnotnull(wr_order_number#465L)) AND isnotnull(wr_item_sk#454))
                     :                                            :                       +- *(2) ColumnarToRow
                     :                                            :                          +- FileScan parquet [wr_item_sk#454,wr_order_number#465L,wr_return_quantity#466,wr_return_amt#467] Batched: true, DataFilters: [isnotnull(wr_return_amt#467), (wr_return_amt#467 > 10000.00), isnotnull(wr_order_number#465L), i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_return_amt), GreaterThan(wr_return_amt,10000.00), IsNotNull(wr_order_number), IsNot..., ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
                     :                                            +- BroadcastQueryStage 2
                     :                                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#80040]
                     :                                                  +- *(3) Project [d_date_sk#598]
                     :                                                     +- *(3) Filter ((((isnotnull(d_year#604) AND isnotnull(d_moy#606)) AND (d_year#604 = 2000)) AND (d_moy#606 = 11)) AND isnotnull(d_date_sk#598))
                     :                                                        +- *(3) ColumnarToRow
                     :                                                           +- FileScan parquet [d_date_sk#598,d_year#604,d_moy#606] Batched: true, DataFilters: [isnotnull(d_year#604), isnotnull(d_moy#606), (d_year#604 = 2000), (d_moy#606 = 11), isnotnull(d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :- *(21) Project [catalog AS channel#9853, item#9848, return_ratio#9849, return_rank#9851, currency_rank#9852]
                     :  +- *(21) Filter ((return_rank#9851 <= 10) OR (currency_rank#9852 <= 10))
                     :     +- Window [rank(currency_ratio#9850) windowspecdefinition(currency_ratio#9850 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#9852], [currency_ratio#9850 ASC NULLS FIRST]
                     :        +- *(20) Sort [currency_ratio#9850 ASC NULLS FIRST], false, 0
                     :           +- Window [rank(return_ratio#9849) windowspecdefinition(return_ratio#9849 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#9851], [return_ratio#9849 ASC NULLS FIRST]
                     :              +- *(19) Sort [return_ratio#9849 ASC NULLS FIRST], false, 0
                     :                 +- ShuffleQueryStage 18
                     :                    +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#82986]
                     :                       +- *(14) HashAggregate(keys=[cs_item_sk#133], functions=[sum(coalesce(cr_return_quantity#265, 0)), sum(coalesce(cs_quantity#136, 0)), sum(coalesce(cast(cr_return_amount#266 as decimal(12,2)), 0.00)), sum(coalesce(cast(cs_net_paid#147 as decimal(12,2)), 0.00))], output=[item#9848, return_ratio#9849, currency_ratio#9850])
                     :                          +- AQEShuffleRead coalesced
                     :                             +- ShuffleQueryStage 14
                     :                                +- Exchange hashpartitioning(cs_item_sk#133, 200), ENSURE_REQUIREMENTS, [id=#82209]
                     :                                   +- *(11) HashAggregate(keys=[cs_item_sk#133], functions=[partial_sum(coalesce(cr_return_quantity#265, 0)), partial_sum(coalesce(cs_quantity#136, 0)), partial_sum(coalesce(cast(cr_return_amount#266 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(cs_net_paid#147 as decimal(12,2)), 0.00))], output=[cs_item_sk#133, sum#10035L, sum#10036L, sum#10037, isEmpty#10038, sum#10039, isEmpty#10040])
                     :                                      +- *(11) Project [cs_item_sk#133, cs_quantity#136, cs_net_paid#147, cr_return_quantity#265, cr_return_amount#266]
                     :                                         +- *(11) BroadcastHashJoin [cs_sold_date_sk#118], [d_date_sk#9860], Inner, BuildRight, false
                     :                                            :- *(11) Project [cs_sold_date_sk#118, cs_item_sk#133, cs_quantity#136, cs_net_paid#147, cr_return_quantity#265, cr_return_amount#266]
                     :                                            :  +- *(11) BroadcastHashJoin [cs_order_number#135L, cs_item_sk#133], [cr_order_number#264L, cr_item_sk#250], Inner, BuildRight, false
                     :                                            :     :- AQEShuffleRead local
                     :                                            :     :  +- ShuffleQueryStage 3
                     :                                            :     :     +- Exchange hashpartitioning(cs_order_number#135L, cs_item_sk#133, 200), ENSURE_REQUIREMENTS, [id=#80071]
                     :                                            :     :        +- *(4) Project [cs_sold_date_sk#118, cs_item_sk#133, cs_order_number#135L, cs_quantity#136, cs_net_paid#147]
                     :                                            :     :           +- *(4) Filter ((((((((isnotnull(cs_net_profit#151) AND isnotnull(cs_net_paid#147)) AND isnotnull(cs_quantity#136)) AND (cs_net_profit#151 > 1.00)) AND (cs_net_paid#147 > 0.00)) AND (cs_quantity#136 > 0)) AND isnotnull(cs_order_number#135L)) AND isnotnull(cs_item_sk#133)) AND isnotnull(cs_sold_date_sk#118))
                     :                                            :     :              +- *(4) ColumnarToRow
                     :                                            :     :                 +- FileScan parquet [cs_sold_date_sk#118,cs_item_sk#133,cs_order_number#135L,cs_quantity#136,cs_net_paid#147,cs_net_profit#151] Batched: true, DataFilters: [isnotnull(cs_net_profit#151), isnotnull(cs_net_paid#147), isnotnull(cs_quantity#136), (cs_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_net_profit), IsNotNull(cs_net_paid), IsNotNull(cs_quantity), GreaterThan(cs_net_pro..., ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_net_paid:deci...
                     :                                            :     +- BroadcastQueryStage 12
                     :                                            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, false], input[0, int, false]),false), [id=#81434]
                     :                                            :           +- AQEShuffleRead local
                     :                                            :              +- ShuffleQueryStage 4
                     :                                            :                 +- Exchange hashpartitioning(cr_order_number#264L, cr_item_sk#250, 200), ENSURE_REQUIREMENTS, [id=#80090]
                     :                                            :                    +- *(5) Filter (((isnotnull(cr_return_amount#266) AND (cr_return_amount#266 > 10000.00)) AND isnotnull(cr_order_number#264L)) AND isnotnull(cr_item_sk#250))
                     :                                            :                       +- *(5) ColumnarToRow
                     :                                            :                          +- FileScan parquet [cr_item_sk#250,cr_order_number#264L,cr_return_quantity#265,cr_return_amount#266] Batched: true, DataFilters: [isnotnull(cr_return_amount#266), (cr_return_amount#266 > 10000.00), isnotnull(cr_order_number#26..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_return_amount), GreaterThan(cr_return_amount,10000.00), IsNotNull(cr_order_number),..., ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
                     :                                            +- BroadcastQueryStage 6
                     :                                               +- ReusedExchange [d_date_sk#9860], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#80040]
                     +- *(24) Project [store AS channel#9859, item#9854, return_ratio#9855, return_rank#9857, currency_rank#9858]
                        +- *(24) Filter ((return_rank#9857 <= 10) OR (currency_rank#9858 <= 10))
                           +- Window [rank(currency_ratio#9856) windowspecdefinition(currency_ratio#9856 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#9858], [currency_ratio#9856 ASC NULLS FIRST]
                              +- *(23) Sort [currency_ratio#9856 ASC NULLS FIRST], false, 0
                                 +- Window [rank(return_ratio#9855) windowspecdefinition(return_ratio#9855 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#9857], [return_ratio#9855 ASC NULLS FIRST]
                                    +- *(22) Sort [return_ratio#9855 ASC NULLS FIRST], false, 0
                                       +- ShuffleQueryStage 19
                                          +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#83186]
                                             +- *(15) HashAggregate(keys=[ss_item_sk#666], functions=[sum(coalesce(sr_return_quantity#720, 0)), sum(coalesce(ss_quantity#674, 0)), sum(coalesce(cast(sr_return_amt#721 as decimal(12,2)), 0.00)), sum(coalesce(cast(ss_net_paid#684 as decimal(12,2)), 0.00))], output=[item#9854, return_ratio#9855, currency_ratio#9856])
                                                +- AQEShuffleRead coalesced
                                                   +- ShuffleQueryStage 17
                                                      +- Exchange hashpartitioning(ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#82848]
                                                         +- *(13) HashAggregate(keys=[ss_item_sk#666], functions=[partial_sum(coalesce(sr_return_quantity#720, 0)), partial_sum(coalesce(ss_quantity#674, 0)), partial_sum(coalesce(cast(sr_return_amt#721 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ss_net_paid#684 as decimal(12,2)), 0.00))], output=[ss_item_sk#666, sum#10047L, sum#10048L, sum#10049, isEmpty#10050, sum#10051, isEmpty#10052])
                                                            +- *(13) Project [ss_item_sk#666, ss_quantity#674, ss_net_paid#684, sr_return_quantity#720, sr_return_amt#721]
                                                               +- *(13) BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#9888], Inner, BuildRight, false
                                                                  :- *(13) Project [ss_sold_date_sk#664, ss_item_sk#666, ss_quantity#674, ss_net_paid#684, sr_return_quantity#720, sr_return_amt#721]
                                                                  :  +- *(13) BroadcastHashJoin [ss_ticket_number#673L, ss_item_sk#666], [sr_ticket_number#719L, sr_item_sk#712], Inner, BuildRight, false
                                                                  :     :- AQEShuffleRead local
                                                                  :     :  +- ShuffleQueryStage 7
                                                                  :     :     +- Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#80144]
                                                                  :     :        +- *(7) Project [ss_sold_date_sk#664, ss_item_sk#666, ss_ticket_number#673L, ss_quantity#674, ss_net_paid#684]
                                                                  :     :           +- *(7) Filter ((((((((isnotnull(ss_net_profit#686) AND isnotnull(ss_net_paid#684)) AND isnotnull(ss_quantity#674)) AND (ss_net_profit#686 > 1.00)) AND (ss_net_paid#684 > 0.00)) AND (ss_quantity#674 > 0)) AND isnotnull(ss_ticket_number#673L)) AND isnotnull(ss_item_sk#666)) AND isnotnull(ss_sold_date_sk#664))
                                                                  :     :              +- *(7) ColumnarToRow
                                                                  :     :                 +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_ticket_number#673L,ss_quantity#674,ss_net_paid#684,ss_net_profit#686] Batched: true, DataFilters: [isnotnull(ss_net_profit#686), isnotnull(ss_net_paid#684), isnotnull(ss_quantity#674), (ss_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_net_profit), IsNotNull(ss_net_paid), IsNotNull(ss_quantity), GreaterThan(ss_net_pro..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_net_paid:dec...
                                                                  :     +- BroadcastQueryStage 15
                                                                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, false], input[0, int, false]),false), [id=#82416]
                                                                  :           +- AQEShuffleRead local
                                                                  :              +- ShuffleQueryStage 8
                                                                  :                 +- Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#80163]
                                                                  :                    +- *(8) Filter (((isnotnull(sr_return_amt#721) AND (sr_return_amt#721 > 10000.00)) AND isnotnull(sr_ticket_number#719L)) AND isnotnull(sr_item_sk#712))
                                                                  :                       +- *(8) ColumnarToRow
                                                                  :                          +- FileScan parquet [sr_item_sk#712,sr_ticket_number#719L,sr_return_quantity#720,sr_return_amt#721] Batched: true, DataFilters: [isnotnull(sr_return_amt#721), (sr_return_amt#721 > 10000.00), isnotnull(sr_ticket_number#719L), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_return_amt), GreaterThan(sr_return_amt,10000.00), IsNotNull(sr_ticket_number), IsNo..., ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
                                                                  +- BroadcastQueryStage 10
                                                                     +- ReusedExchange [d_date_sk#9888], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#80040]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#9847 ASC NULLS FIRST,return_rank#9845 ASC NULLS FIRST,currency_rank#9846 ASC NULLS FIRST,item#9842 ASC NULLS FIRST], output=[channel#9847,item#9842,return_ratio#9843,return_rank#9845,currency_rank#9846])
   +- HashAggregate(keys=[channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846], functions=[], output=[channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846])
      +- Exchange hashpartitioning(channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846, 200), ENSURE_REQUIREMENTS, [id=#79836]
         +- HashAggregate(keys=[channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846], functions=[], output=[channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846])
            +- Union
               :- Project [web AS channel#9847, item#9842, return_ratio#9843, return_rank#9845, currency_rank#9846]
               :  +- Filter ((return_rank#9845 <= 10) OR (currency_rank#9846 <= 10))
               :     +- Window [rank(currency_ratio#9844) windowspecdefinition(currency_ratio#9844 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#9846], [currency_ratio#9844 ASC NULLS FIRST]
               :        +- Sort [currency_ratio#9844 ASC NULLS FIRST], false, 0
               :           +- Window [rank(return_ratio#9843) windowspecdefinition(return_ratio#9843 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#9845], [return_ratio#9843 ASC NULLS FIRST]
               :              +- Sort [return_ratio#9843 ASC NULLS FIRST], false, 0
               :                 +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#79777]
               :                    +- HashAggregate(keys=[ws_item_sk#387], functions=[sum(coalesce(wr_return_quantity#466, 0)), sum(coalesce(ws_quantity#402, 0)), sum(coalesce(cast(wr_return_amt#467 as decimal(12,2)), 0.00)), sum(coalesce(cast(ws_net_paid#413 as decimal(12,2)), 0.00))], output=[item#9842, return_ratio#9843, currency_ratio#9844])
               :                       +- Exchange hashpartitioning(ws_item_sk#387, 200), ENSURE_REQUIREMENTS, [id=#79774]
               :                          +- HashAggregate(keys=[ws_item_sk#387], functions=[partial_sum(coalesce(wr_return_quantity#466, 0)), partial_sum(coalesce(ws_quantity#402, 0)), partial_sum(coalesce(cast(wr_return_amt#467 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ws_net_paid#413 as decimal(12,2)), 0.00))], output=[ws_item_sk#387, sum#10023L, sum#10024L, sum#10025, isEmpty#10026, sum#10027, isEmpty#10028])
               :                             +- Project [ws_item_sk#387, ws_quantity#402, ws_net_paid#413, wr_return_quantity#466, wr_return_amt#467]
               :                                +- BroadcastHashJoin [ws_sold_date_sk#384], [d_date_sk#598], Inner, BuildRight, false
               :                                   :- Project [ws_sold_date_sk#384, ws_item_sk#387, ws_quantity#402, ws_net_paid#413, wr_return_quantity#466, wr_return_amt#467]
               :                                   :  +- SortMergeJoin [ws_order_number#401L, ws_item_sk#387], [wr_order_number#465L, wr_item_sk#454], Inner
               :                                   :     :- Sort [ws_order_number#401L ASC NULLS FIRST, ws_item_sk#387 ASC NULLS FIRST], false, 0
               :                                   :     :  +- Exchange hashpartitioning(ws_order_number#401L, ws_item_sk#387, 200), ENSURE_REQUIREMENTS, [id=#79762]
               :                                   :     :     +- Project [ws_sold_date_sk#384, ws_item_sk#387, ws_order_number#401L, ws_quantity#402, ws_net_paid#413]
               :                                   :     :        +- Filter ((((((((isnotnull(ws_net_profit#417) AND isnotnull(ws_net_paid#413)) AND isnotnull(ws_quantity#402)) AND (ws_net_profit#417 > 1.00)) AND (ws_net_paid#413 > 0.00)) AND (ws_quantity#402 > 0)) AND isnotnull(ws_order_number#401L)) AND isnotnull(ws_item_sk#387)) AND isnotnull(ws_sold_date_sk#384))
               :                                   :     :           +- FileScan parquet [ws_sold_date_sk#384,ws_item_sk#387,ws_order_number#401L,ws_quantity#402,ws_net_paid#413,ws_net_profit#417] Batched: true, DataFilters: [isnotnull(ws_net_profit#417), isnotnull(ws_net_paid#413), isnotnull(ws_quantity#402), (ws_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_net_profit), IsNotNull(ws_net_paid), IsNotNull(ws_quantity), GreaterThan(ws_net_pro..., ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_net_paid:deci...
               :                                   :     +- Sort [wr_order_number#465L ASC NULLS FIRST, wr_item_sk#454 ASC NULLS FIRST], false, 0
               :                                   :        +- Exchange hashpartitioning(wr_order_number#465L, wr_item_sk#454, 200), ENSURE_REQUIREMENTS, [id=#79763]
               :                                   :           +- Filter (((isnotnull(wr_return_amt#467) AND (wr_return_amt#467 > 10000.00)) AND isnotnull(wr_order_number#465L)) AND isnotnull(wr_item_sk#454))
               :                                   :              +- FileScan parquet [wr_item_sk#454,wr_order_number#465L,wr_return_quantity#466,wr_return_amt#467] Batched: true, DataFilters: [isnotnull(wr_return_amt#467), (wr_return_amt#467 > 10000.00), isnotnull(wr_order_number#465L), i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_return_amt), GreaterThan(wr_return_amt,10000.00), IsNotNull(wr_order_number), IsNot..., ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
               :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#79769]
               :                                      +- Project [d_date_sk#598]
               :                                         +- Filter ((((isnotnull(d_year#604) AND isnotnull(d_moy#606)) AND (d_year#604 = 2000)) AND (d_moy#606 = 11)) AND isnotnull(d_date_sk#598))
               :                                            +- FileScan parquet [d_date_sk#598,d_year#604,d_moy#606] Batched: true, DataFilters: [isnotnull(d_year#604), isnotnull(d_moy#606), (d_year#604 = 2000), (d_moy#606 = 11), isnotnull(d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :- Project [catalog AS channel#9853, item#9848, return_ratio#9849, return_rank#9851, currency_rank#9852]
               :  +- Filter ((return_rank#9851 <= 10) OR (currency_rank#9852 <= 10))
               :     +- Window [rank(currency_ratio#9850) windowspecdefinition(currency_ratio#9850 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#9852], [currency_ratio#9850 ASC NULLS FIRST]
               :        +- Sort [currency_ratio#9850 ASC NULLS FIRST], false, 0
               :           +- Window [rank(return_ratio#9849) windowspecdefinition(return_ratio#9849 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#9851], [return_ratio#9849 ASC NULLS FIRST]
               :              +- Sort [return_ratio#9849 ASC NULLS FIRST], false, 0
               :                 +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#79801]
               :                    +- HashAggregate(keys=[cs_item_sk#133], functions=[sum(coalesce(cr_return_quantity#265, 0)), sum(coalesce(cs_quantity#136, 0)), sum(coalesce(cast(cr_return_amount#266 as decimal(12,2)), 0.00)), sum(coalesce(cast(cs_net_paid#147 as decimal(12,2)), 0.00))], output=[item#9848, return_ratio#9849, currency_ratio#9850])
               :                       +- Exchange hashpartitioning(cs_item_sk#133, 200), ENSURE_REQUIREMENTS, [id=#79798]
               :                          +- HashAggregate(keys=[cs_item_sk#133], functions=[partial_sum(coalesce(cr_return_quantity#265, 0)), partial_sum(coalesce(cs_quantity#136, 0)), partial_sum(coalesce(cast(cr_return_amount#266 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(cs_net_paid#147 as decimal(12,2)), 0.00))], output=[cs_item_sk#133, sum#10035L, sum#10036L, sum#10037, isEmpty#10038, sum#10039, isEmpty#10040])
               :                             +- Project [cs_item_sk#133, cs_quantity#136, cs_net_paid#147, cr_return_quantity#265, cr_return_amount#266]
               :                                +- BroadcastHashJoin [cs_sold_date_sk#118], [d_date_sk#9860], Inner, BuildRight, false
               :                                   :- Project [cs_sold_date_sk#118, cs_item_sk#133, cs_quantity#136, cs_net_paid#147, cr_return_quantity#265, cr_return_amount#266]
               :                                   :  +- SortMergeJoin [cs_order_number#135L, cs_item_sk#133], [cr_order_number#264L, cr_item_sk#250], Inner
               :                                   :     :- Sort [cs_order_number#135L ASC NULLS FIRST, cs_item_sk#133 ASC NULLS FIRST], false, 0
               :                                   :     :  +- Exchange hashpartitioning(cs_order_number#135L, cs_item_sk#133, 200), ENSURE_REQUIREMENTS, [id=#79786]
               :                                   :     :     +- Project [cs_sold_date_sk#118, cs_item_sk#133, cs_order_number#135L, cs_quantity#136, cs_net_paid#147]
               :                                   :     :        +- Filter ((((((((isnotnull(cs_net_profit#151) AND isnotnull(cs_net_paid#147)) AND isnotnull(cs_quantity#136)) AND (cs_net_profit#151 > 1.00)) AND (cs_net_paid#147 > 0.00)) AND (cs_quantity#136 > 0)) AND isnotnull(cs_order_number#135L)) AND isnotnull(cs_item_sk#133)) AND isnotnull(cs_sold_date_sk#118))
               :                                   :     :           +- FileScan parquet [cs_sold_date_sk#118,cs_item_sk#133,cs_order_number#135L,cs_quantity#136,cs_net_paid#147,cs_net_profit#151] Batched: true, DataFilters: [isnotnull(cs_net_profit#151), isnotnull(cs_net_paid#147), isnotnull(cs_quantity#136), (cs_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_net_profit), IsNotNull(cs_net_paid), IsNotNull(cs_quantity), GreaterThan(cs_net_pro..., ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_net_paid:deci...
               :                                   :     +- Sort [cr_order_number#264L ASC NULLS FIRST, cr_item_sk#250 ASC NULLS FIRST], false, 0
               :                                   :        +- Exchange hashpartitioning(cr_order_number#264L, cr_item_sk#250, 200), ENSURE_REQUIREMENTS, [id=#79787]
               :                                   :           +- Filter (((isnotnull(cr_return_amount#266) AND (cr_return_amount#266 > 10000.00)) AND isnotnull(cr_order_number#264L)) AND isnotnull(cr_item_sk#250))
               :                                   :              +- FileScan parquet [cr_item_sk#250,cr_order_number#264L,cr_return_quantity#265,cr_return_amount#266] Batched: true, DataFilters: [isnotnull(cr_return_amount#266), (cr_return_amount#266 > 10000.00), isnotnull(cr_order_number#26..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_return_amount), GreaterThan(cr_return_amount,10000.00), IsNotNull(cr_order_number),..., ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
               :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#79793]
               :                                      +- Project [d_date_sk#9860]
               :                                         +- Filter ((((isnotnull(d_year#9866) AND isnotnull(d_moy#9868)) AND (d_year#9866 = 2000)) AND (d_moy#9868 = 11)) AND isnotnull(d_date_sk#9860))
               :                                            +- FileScan parquet [d_date_sk#9860,d_year#9866,d_moy#9868] Batched: true, DataFilters: [isnotnull(d_year#9866), isnotnull(d_moy#9868), (d_year#9866 = 2000), (d_moy#9868 = 11), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               +- Project [store AS channel#9859, item#9854, return_ratio#9855, return_rank#9857, currency_rank#9858]
                  +- Filter ((return_rank#9857 <= 10) OR (currency_rank#9858 <= 10))
                     +- Window [rank(currency_ratio#9856) windowspecdefinition(currency_ratio#9856 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#9858], [currency_ratio#9856 ASC NULLS FIRST]
                        +- Sort [currency_ratio#9856 ASC NULLS FIRST], false, 0
                           +- Window [rank(return_ratio#9855) windowspecdefinition(return_ratio#9855 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#9857], [return_ratio#9855 ASC NULLS FIRST]
                              +- Sort [return_ratio#9855 ASC NULLS FIRST], false, 0
                                 +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#79825]
                                    +- HashAggregate(keys=[ss_item_sk#666], functions=[sum(coalesce(sr_return_quantity#720, 0)), sum(coalesce(ss_quantity#674, 0)), sum(coalesce(cast(sr_return_amt#721 as decimal(12,2)), 0.00)), sum(coalesce(cast(ss_net_paid#684 as decimal(12,2)), 0.00))], output=[item#9854, return_ratio#9855, currency_ratio#9856])
                                       +- Exchange hashpartitioning(ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#79822]
                                          +- HashAggregate(keys=[ss_item_sk#666], functions=[partial_sum(coalesce(sr_return_quantity#720, 0)), partial_sum(coalesce(ss_quantity#674, 0)), partial_sum(coalesce(cast(sr_return_amt#721 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ss_net_paid#684 as decimal(12,2)), 0.00))], output=[ss_item_sk#666, sum#10047L, sum#10048L, sum#10049, isEmpty#10050, sum#10051, isEmpty#10052])
                                             +- Project [ss_item_sk#666, ss_quantity#674, ss_net_paid#684, sr_return_quantity#720, sr_return_amt#721]
                                                +- BroadcastHashJoin [ss_sold_date_sk#664], [d_date_sk#9888], Inner, BuildRight, false
                                                   :- Project [ss_sold_date_sk#664, ss_item_sk#666, ss_quantity#674, ss_net_paid#684, sr_return_quantity#720, sr_return_amt#721]
                                                   :  +- SortMergeJoin [ss_ticket_number#673L, ss_item_sk#666], [sr_ticket_number#719L, sr_item_sk#712], Inner
                                                   :     :- Sort [ss_ticket_number#673L ASC NULLS FIRST, ss_item_sk#666 ASC NULLS FIRST], false, 0
                                                   :     :  +- Exchange hashpartitioning(ss_ticket_number#673L, ss_item_sk#666, 200), ENSURE_REQUIREMENTS, [id=#79810]
                                                   :     :     +- Project [ss_sold_date_sk#664, ss_item_sk#666, ss_ticket_number#673L, ss_quantity#674, ss_net_paid#684]
                                                   :     :        +- Filter ((((((((isnotnull(ss_net_profit#686) AND isnotnull(ss_net_paid#684)) AND isnotnull(ss_quantity#674)) AND (ss_net_profit#686 > 1.00)) AND (ss_net_paid#684 > 0.00)) AND (ss_quantity#674 > 0)) AND isnotnull(ss_ticket_number#673L)) AND isnotnull(ss_item_sk#666)) AND isnotnull(ss_sold_date_sk#664))
                                                   :     :           +- FileScan parquet [ss_sold_date_sk#664,ss_item_sk#666,ss_ticket_number#673L,ss_quantity#674,ss_net_paid#684,ss_net_profit#686] Batched: true, DataFilters: [isnotnull(ss_net_profit#686), isnotnull(ss_net_paid#684), isnotnull(ss_quantity#674), (ss_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_net_profit), IsNotNull(ss_net_paid), IsNotNull(ss_quantity), GreaterThan(ss_net_pro..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_net_paid:dec...
                                                   :     +- Sort [sr_ticket_number#719L ASC NULLS FIRST, sr_item_sk#712 ASC NULLS FIRST], false, 0
                                                   :        +- Exchange hashpartitioning(sr_ticket_number#719L, sr_item_sk#712, 200), ENSURE_REQUIREMENTS, [id=#79811]
                                                   :           +- Filter (((isnotnull(sr_return_amt#721) AND (sr_return_amt#721 > 10000.00)) AND isnotnull(sr_ticket_number#719L)) AND isnotnull(sr_item_sk#712))
                                                   :              +- FileScan parquet [sr_item_sk#712,sr_ticket_number#719L,sr_return_quantity#720,sr_return_amt#721] Batched: true, DataFilters: [isnotnull(sr_return_amt#721), (sr_return_amt#721 > 10000.00), isnotnull(sr_ticket_number#719L), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_return_amt), GreaterThan(sr_return_amt,10000.00), IsNotNull(sr_ticket_number), IsNo..., ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#79817]
                                                      +- Project [d_date_sk#9888]
                                                         +- Filter ((((isnotnull(d_year#9894) AND isnotnull(d_moy#9896)) AND (d_year#9894 = 2000)) AND (d_moy#9896 = 11)) AND isnotnull(d_date_sk#9888))
                                                            +- FileScan parquet [d_date_sk#9888,d_year#9894,d_moy#9896] Batched: true, DataFilters: [isnotnull(d_year#9894), isnotnull(d_moy#9896), (d_year#9894 = 2000), (d_moy#9896 = 11), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
