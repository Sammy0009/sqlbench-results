AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#563 ASC NULLS FIRST], output=[c_customer_id#563])
   +- *(11) Project [c_customer_id#563]
      +- *(11) BroadcastHashJoin [ctr_customer_sk#851], [c_customer_sk#562], Inner, BuildLeft, false
         :- BroadcastQueryStage 11
         :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#1188]
         :     +- AQEShuffleRead local
         :        +- ShuffleQueryStage 10
         :           +- Exchange hashpartitioning(ctr_customer_sk#851, 200), ENSURE_REQUIREMENTS, [id=#1149]
         :              +- *(10) Project [ctr_customer_sk#851]
         :                 +- *(10) BroadcastHashJoin [ctr_store_sk#852], [s_store_sk#326], Inner, BuildRight, false
         :                    :- *(10) Project [ctr_customer_sk#851, ctr_store_sk#852]
         :                    :  +- *(10) BroadcastHashJoin [ctr_store_sk#852], [ctr_store_sk#852#858], Inner, BuildRight, (cast(ctr_total_return#853 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#856), false
         :                    :     :- AQEShuffleRead local
         :                    :     :  +- ShuffleQueryStage 7
         :                    :     :     +- Exchange hashpartitioning(ctr_store_sk#852, 200), ENSURE_REQUIREMENTS, [id=#824]
         :                    :     :        +- *(7) Filter isnotnull(ctr_total_return#853)
         :                    :     :           +- *(7) HashAggregate(keys=[sr_customer_sk#713, sr_store_sk#717], functions=[sum(UnscaledValue(SR_RETURN_AMT_INC_TAX#723))], output=[ctr_customer_sk#851, ctr_store_sk#852, ctr_total_return#853])
         :                    :     :              +- AQEShuffleRead coalesced
         :                    :     :                 +- ShuffleQueryStage 5
         :                    :     :                    +- Exchange hashpartitioning(sr_customer_sk#713, sr_store_sk#717, 200), ENSURE_REQUIREMENTS, [id=#605]
         :                    :     :                       +- *(5) HashAggregate(keys=[sr_customer_sk#713, sr_store_sk#717], functions=[partial_sum(UnscaledValue(SR_RETURN_AMT_INC_TAX#723))], output=[sr_customer_sk#713, sr_store_sk#717, sum#860L])
         :                    :     :                          +- *(5) Project [sr_customer_sk#713, sr_store_sk#717, sr_return_amt_inc_tax#723]
         :                    :     :                             +- *(5) BroadcastHashJoin [sr_returned_date_sk#710], [d_date_sk#598], Inner, BuildRight, false
         :                    :     :                                :- *(5) Filter ((isnotnull(sr_returned_date_sk#710) AND isnotnull(sr_store_sk#717)) AND isnotnull(sr_customer_sk#713))
         :                    :     :                                :  +- *(5) ColumnarToRow
         :                    :     :                                :     +- FileScan parquet [sr_returned_date_sk#710,sr_customer_sk#713,sr_store_sk#717,sr_return_amt_inc_tax#723] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#710), isnotnull(sr_store_sk#717), isnotnull(sr_customer_sk#713)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk), IsNotNull(sr_customer_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_customer_sk:int,sr_store_sk:int,sr_return_amt_inc_tax:decimal(7...
         :                    :     :                                +- BroadcastQueryStage 0
         :                    :     :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#330]
         :                    :     :                                      +- *(1) Project [d_date_sk#598]
         :                    :     :                                         +- *(1) Filter ((isnotnull(d_year#604) AND (d_year#604 = 1999)) AND isnotnull(d_date_sk#598))
         :                    :     :                                            +- *(1) ColumnarToRow
         :                    :     :                                               +- FileScan parquet [d_date_sk#598,d_year#604] Batched: true, DataFilters: [isnotnull(d_year#604), (d_year#604 = 1999), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                    :     +- BroadcastQueryStage 9
         :                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [id=#1067]
         :                    :           +- *(9) Filter isnotnull((avg(ctr_total_return) * 1.2)#856)
         :                    :              +- *(9) HashAggregate(keys=[ctr_store_sk#852], functions=[avg(ctr_total_return#853)], output=[(avg(ctr_total_return) * 1.2)#856, ctr_store_sk#852#858])
         :                    :                 +- AQEShuffleRead coalesced
         :                    :                    +- ShuffleQueryStage 8
         :                    :                       +- Exchange hashpartitioning(ctr_store_sk#852, 200), ENSURE_REQUIREMENTS, [id=#919]
         :                    :                          +- *(8) HashAggregate(keys=[ctr_store_sk#852], functions=[partial_avg(ctr_total_return#853)], output=[ctr_store_sk#852, sum#863, count#864L])
         :                    :                             +- *(8) HashAggregate(keys=[sr_customer_sk#713, sr_store_sk#717], functions=[sum(UnscaledValue(SR_RETURN_AMT_INC_TAX#723))], output=[ctr_store_sk#852, ctr_total_return#853])
         :                    :                                +- AQEShuffleRead coalesced
         :                    :                                   +- ShuffleQueryStage 6
         :                    :                                      +- Exchange hashpartitioning(sr_customer_sk#713, sr_store_sk#717, 200), ENSURE_REQUIREMENTS, [id=#639]
         :                    :                                         +- *(6) HashAggregate(keys=[sr_customer_sk#713, sr_store_sk#717], functions=[partial_sum(UnscaledValue(SR_RETURN_AMT_INC_TAX#723))], output=[sr_customer_sk#713, sr_store_sk#717, sum#866L])
         :                    :                                            +- *(6) Project [sr_customer_sk#713, sr_store_sk#717, sr_return_amt_inc_tax#723]
         :                    :                                               +- *(6) BroadcastHashJoin [sr_returned_date_sk#710], [d_date_sk#598], Inner, BuildRight, false
         :                    :                                                  :- *(6) Filter (isnotnull(sr_returned_date_sk#710) AND isnotnull(sr_store_sk#717))
         :                    :                                                  :  +- *(6) ColumnarToRow
         :                    :                                                  :     +- FileScan parquet [sr_returned_date_sk#710,sr_customer_sk#713,sr_store_sk#717,sr_return_amt_inc_tax#723] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#710), isnotnull(sr_store_sk#717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_customer_sk:int,sr_store_sk:int,sr_return_amt_inc_tax:decimal(7...
         :                    :                                                  +- BroadcastQueryStage 2
         :                    :                                                     +- ReusedExchange [d_date_sk#598], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#330]
         :                    +- BroadcastQueryStage 3
         :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#390]
         :                          +- *(3) Project [s_store_sk#326]
         :                             +- *(3) Filter ((isnotnull(s_state#350) AND (s_state#350 = OH)) AND isnotnull(s_store_sk#326))
         :                                +- *(3) ColumnarToRow
         :                                   +- FileScan parquet [s_store_sk#326,s_state#350] Batched: true, DataFilters: [isnotnull(s_state#350), (s_state#350 = OH), isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_state), EqualTo(s_state,OH), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
         +- AQEShuffleRead local
            +- ShuffleQueryStage 4
               +- Exchange hashpartitioning(c_customer_sk#562, 200), ENSURE_REQUIREMENTS, [id=#416]
                  +- *(4) Filter isnotnull(c_customer_sk#562)
                     +- *(4) ColumnarToRow
                        +- FileScan parquet [c_customer_sk#562,c_customer_id#563] Batched: true, DataFilters: [isnotnull(c_customer_sk#562)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#563 ASC NULLS FIRST], output=[c_customer_id#563])
   +- Project [c_customer_id#563]
      +- SortMergeJoin [ctr_customer_sk#851], [c_customer_sk#562], Inner
         :- Sort [ctr_customer_sk#851 ASC NULLS FIRST], false, 0
         :  +- Exchange hashpartitioning(ctr_customer_sk#851, 200), ENSURE_REQUIREMENTS, [id=#244]
         :     +- Project [ctr_customer_sk#851]
         :        +- BroadcastHashJoin [ctr_store_sk#852], [s_store_sk#326], Inner, BuildRight, false
         :           :- Project [ctr_customer_sk#851, ctr_store_sk#852]
         :           :  +- SortMergeJoin [ctr_store_sk#852], [ctr_store_sk#852#858], Inner, (cast(ctr_total_return#853 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#856)
         :           :     :- Sort [ctr_store_sk#852 ASC NULLS FIRST], false, 0
         :           :     :  +- Exchange hashpartitioning(ctr_store_sk#852, 200), ENSURE_REQUIREMENTS, [id=#233]
         :           :     :     +- Filter isnotnull(ctr_total_return#853)
         :           :     :        +- HashAggregate(keys=[sr_customer_sk#713, sr_store_sk#717], functions=[sum(UnscaledValue(SR_RETURN_AMT_INC_TAX#723))], output=[ctr_customer_sk#851, ctr_store_sk#852, ctr_total_return#853])
         :           :     :           +- Exchange hashpartitioning(sr_customer_sk#713, sr_store_sk#717, 200), ENSURE_REQUIREMENTS, [id=#216]
         :           :     :              +- HashAggregate(keys=[sr_customer_sk#713, sr_store_sk#717], functions=[partial_sum(UnscaledValue(SR_RETURN_AMT_INC_TAX#723))], output=[sr_customer_sk#713, sr_store_sk#717, sum#860L])
         :           :     :                 +- Project [sr_customer_sk#713, sr_store_sk#717, sr_return_amt_inc_tax#723]
         :           :     :                    +- BroadcastHashJoin [sr_returned_date_sk#710], [d_date_sk#598], Inner, BuildRight, false
         :           :     :                       :- Filter ((isnotnull(sr_returned_date_sk#710) AND isnotnull(sr_store_sk#717)) AND isnotnull(sr_customer_sk#713))
         :           :     :                       :  +- FileScan parquet [sr_returned_date_sk#710,sr_customer_sk#713,sr_store_sk#717,sr_return_amt_inc_tax#723] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#710), isnotnull(sr_store_sk#717), isnotnull(sr_customer_sk#713)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk), IsNotNull(sr_customer_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_customer_sk:int,sr_store_sk:int,sr_return_amt_inc_tax:decimal(7...
         :           :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#211]
         :           :     :                          +- Project [d_date_sk#598]
         :           :     :                             +- Filter ((isnotnull(d_year#604) AND (d_year#604 = 1999)) AND isnotnull(d_date_sk#598))
         :           :     :                                +- FileScan parquet [d_date_sk#598,d_year#604] Batched: true, DataFilters: [isnotnull(d_year#604), (d_year#604 = 1999), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :           :     +- Sort [ctr_store_sk#852#858 ASC NULLS FIRST], false, 0
         :           :        +- Filter isnotnull((avg(ctr_total_return) * 1.2)#856)
         :           :           +- HashAggregate(keys=[ctr_store_sk#852], functions=[avg(ctr_total_return#853)], output=[(avg(ctr_total_return) * 1.2)#856, ctr_store_sk#852#858])
         :           :              +- Exchange hashpartitioning(ctr_store_sk#852, 200), ENSURE_REQUIREMENTS, [id=#228]
         :           :                 +- HashAggregate(keys=[ctr_store_sk#852], functions=[partial_avg(ctr_total_return#853)], output=[ctr_store_sk#852, sum#863, count#864L])
         :           :                    +- HashAggregate(keys=[sr_customer_sk#713, sr_store_sk#717], functions=[sum(UnscaledValue(SR_RETURN_AMT_INC_TAX#723))], output=[ctr_store_sk#852, ctr_total_return#853])
         :           :                       +- Exchange hashpartitioning(sr_customer_sk#713, sr_store_sk#717, 200), ENSURE_REQUIREMENTS, [id=#224]
         :           :                          +- HashAggregate(keys=[sr_customer_sk#713, sr_store_sk#717], functions=[partial_sum(UnscaledValue(SR_RETURN_AMT_INC_TAX#723))], output=[sr_customer_sk#713, sr_store_sk#717, sum#866L])
         :           :                             +- Project [sr_customer_sk#713, sr_store_sk#717, sr_return_amt_inc_tax#723]
         :           :                                +- BroadcastHashJoin [sr_returned_date_sk#710], [d_date_sk#598], Inner, BuildRight, false
         :           :                                   :- Filter (isnotnull(sr_returned_date_sk#710) AND isnotnull(sr_store_sk#717))
         :           :                                   :  +- FileScan parquet [sr_returned_date_sk#710,sr_customer_sk#713,sr_store_sk#717,sr_return_amt_inc_tax#723] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#710), isnotnull(sr_store_sk#717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_customer_sk:int,sr_store_sk:int,sr_return_amt_inc_tax:decimal(7...
         :           :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#219]
         :           :                                      +- Project [d_date_sk#598]
         :           :                                         +- Filter ((isnotnull(d_year#604) AND (d_year#604 = 1999)) AND isnotnull(d_date_sk#598))
         :           :                                            +- FileScan parquet [d_date_sk#598,d_year#604] Batched: true, DataFilters: [isnotnull(d_year#604), (d_year#604 = 1999), isnotnull(d_date_sk#598)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#239]
         :              +- Project [s_store_sk#326]
         :                 +- Filter ((isnotnull(s_state#350) AND (s_state#350 = OH)) AND isnotnull(s_store_sk#326))
         :                    +- FileScan parquet [s_store_sk#326,s_state#350] Batched: true, DataFilters: [isnotnull(s_state#350), (s_state#350 = OH), isnotnull(s_store_sk#326)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_state), EqualTo(s_state,OH), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
         +- Sort [c_customer_sk#562 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(c_customer_sk#562, 200), ENSURE_REQUIREMENTS, [id=#245]
               +- Filter isnotnull(c_customer_sk#562)
                  +- FileScan parquet [c_customer_sk#562,c_customer_id#563] Batched: true, DataFilters: [isnotnull(c_customer_sk#562)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string>
